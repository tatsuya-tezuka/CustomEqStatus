/*
//!HEAD: EQCTL 2000-10-24 11:30:00            -- ------- 
//##############################################################################
//$create      = { 2000-10-24 : Ver1.00  : M.Sugiura   }
//$update      = {                                    
//                                                     }
//$functions   = {
//	設備制御情報データベースソースファイル
//}
//$description = {
//	局運用管制システム　データベース
//}
//$comment     = {
//	　設備制御データベースコンパイル時に、プリプロセッサより「呼び出し
//	関数識別文字列」をID値に変換するための定義であるeqfncdef.hを、
//	本ファイル内で、インクルードしておくこと。
//	　データベース仕様については /sos/pub/data/doc/dsn/db/eqctl_db.txt
//	参照のこと。
//
//      Ver1.00 : 新規作成                                              
//}
//
//##############################################################################
//
*/

/* #define		OLD_PKT		1 */


//
//   関数変換用インクルード
//

#include    "eqfncdef.h"

//----------------------------------------------------------------------
// データベース名    ：内之浦局 FC制御
// ファイル名        ：fc.db
// 作成日            ：
// 履歴              ：Ver1.0.0 2017/10/18 as-04
//----------------------------------------------------------------------
/* FC (CONT) 文字EXITと次の,の間に空白を入れること */

ctl S-TX.FC_EXIT , 0x00, ;
	param  1, s, , S, ;
		sts DOWN;
        endofsts;
        sts REBOOT;
        endofsts;
	endofparam;
end;

ctl S-TRKRX.FC_EXIT , 0x00, ;
	param  1, s, , S, ;
		sts DOWN;
        endofsts;
        sts REBOOT;
        endofsts;
	endofparam;
end;

ctl X-RX.FC_EXIT , 0x00, ;
	param  1, s, , S, ;
		sts DOWN;
        endofsts;
        sts REBOOT;
        endofsts;
	endofparam;
end;

/* 削除 2017/10/18 as-04 */
//ctl X-QPSKRX.FC_EXIT , 0x00, ;
//	param  1, s, , S, ;
//		sts DOWN;
//      endofsts;
//      sts REBOOT;
//      endofsts;
//	endofparam;
//end;

ctl X-HRX.FC_EXIT , 0x00, ;
	param  1, s, , S, ;
		sts DOWN;
        endofsts;
        sts REBOOT;
        endofsts;
	endofparam;
end;


//ctl SS-RARR.FC_EXIT , 0x00, ;
//	param 1, , , , ;
//		noprm;
//		endofnoprm;
//	endofparam;
//end;

//ctl SX-RARR.FC_EXIT , 0x00, ;
//	param 1, , , , ;
//		noprm;
//		endofnoprm;
//	endofparam;
//end;

ctl TIME.FC_EXIT , 0x00, ;
	param  1, s, , S, ;
		sts DOWN;
        endofsts;
        sts REBOOT;
        endofsts;
	endofparam;
end;

ctl WEATHER.FC_EXIT , 0x00, ;
	param  1, s, , S, ;
		sts DOWN;
        endofsts;
        sts REBOOT;
        endofsts;
	endofparam;
end;

//ctl SX-TXPW.FC_EXIT , 0x00, ;
//	param 1, , , , ;
//		noprm;
//		endofnoprm;
//	endofparam;
//end;

ctl S-TXSYN.FC_EXIT , 0x00, ;
	param  1, s, , S, ;
		sts DOWN;
        endofsts;
        sts REBOOT;
        endofsts;
	endofparam;
end;

/* 削除 2017/08/21 as-01 */
//ctl S-RXSYN.FC_EXIT , 0x00, ;
//	param  1, s, , S, ;
//		sts DOWN;
//        endofsts;
//        sts REBOOT;
//        endofsts;
//	endofparam;
//end;

/* 削除 2017/08/21 as-01 */
//ctl S-CALSYN.FC_EXIT , 0x00, ;
//	param  1, s, , S, ;
//		sts DOWN;
//        endofsts;
//        sts REBOOT;
//        endofsts;
//	endofparam;
//end;

/* 削除 2017/08/21 as-01 */
//ctl SX-ACQRXSYN.FC_EXIT , 0x00, ;
//	param  1, s, , S, ;
//		sts DOWN;
//        endofsts;
//        sts REBOOT;
//        endofsts;
//	endofparam;
//end;

/* 削除 2017/08/21 as-01 */
//ctl X-RXSYN.FC_EXIT , 0x00, ;
//	param  1, s, , S, ;
//		sts DOWN;
//        endofsts;
//        sts REBOOT;
//        endofsts;
//	endofparam;
//end;

/* 削除 2017/08/21 as-01 */
//ctl X-CALSYN.FC_EXIT , 0x00, ;
//	param  1, s, , S, ;
//		sts DOWN;
//        endofsts;
//        sts REBOOT;
//        endofsts;
//	endofparam;
//end;

/* 削除 2017/10/18 as-04 */
//ctl X-QPSKRXSYN.FC_EXIT , 0x00, ;
//	param  1, s, , S, ;
//		sts DOWN;
//      endofsts;
//      sts REBOOT;
//      endofsts;
//	endofparam;
//end;

// add XUP
//ctl X-TX.FC_EXIT , 0x00, ;
//	param  1, s, , S, ;
//		sts DOWN;
//      endofsts;
//        sts REBOOT;
//        endofsts;
//	endofparam;
//end;

/* 削除 2017/08/21 as-01 */
//ctl XX-RARR.FC_EXIT , 0x00, ;
//	param  1, s, , S, ;
//		sts DOWN;
//        endofsts;
//        sts REBOOT;
//        endofsts;
//	endofparam;
//end;

/* 削除 2017/08/21 as-01 */
//ctl X-TXSYN.FC_EXIT , 0x00, ;
//	param  1, s, , S, ;
//		sts DOWN;
//        endofsts;
//        sts REBOOT;
//        endofsts;
//	endofparam;
//end;

/* 削除 2017/08/21 as-01 */
//ctl XX-RRNG.FC_EXIT , 0x00, ;
//	param  1, s, , S, ;
//		sts DOWN;
//        endofsts;
//        sts REBOOT;
//        endofsts;
//	endofparam;
//end;

/* 削除 2017/08/21 as-01 */
//ctl XX-TCRMOD.FC_EXIT , 0x00, ;
//	param  1, s, , S, ;
//		sts DOWN;
//        endofsts;
//        sts REBOOT;
//        endofsts;
//	endofparam;
//end;

ctl SS-TCR.FC_EXIT , 0x00, ;
	param  1, s, , S, ;
		sts DOWN;
        endofsts;
        sts REBOOT;
        endofsts;
	endofparam;
end;

ctl XX-DSNTCRFC.FC_EXIT , 0x00, ;
	param  1, s, , S, ;
		sts DOWN;
        endofsts;
        sts REBOOT;
        endofsts;
	endofparam;
end;
/* ANT (CONT) */

ctl ANT.TEST, 0x00, ;
	param 1, s, , S, ;
		sts ON;
		endofsts;
		sts OFF;
		endofsts;
	endofparam;
end;

ctl ANT.DRIVE_MODE, 0x00, ;
	param 1, s, , S, ;
		sts SLAVE;
			prechktbl 1;
				prechk 1, ANT.SLAVE_SEL_RDY, EQ, RDY, 3;
			endofprechk;
			verifytbl 1;
				verify 1, ANT.DRIVE_MODE, EQ, SLAVE, 1, 6;
			endofverify;
		endofsts;
		sts AUTO~PROG;
			prechktbl 1;
				prechk 1, ANT.AUTOPROG_SEL_RDY, EQ, RDY, 3;
			endofprechk;
			verifytbl 1;
				verify 1, ANT.DRIVE_MODE, EQ, AUTO_PROG, 1, 6;
			endofverify;
		endofsts;
		sts PROG;
			prechktbl 1;
				prechk 1, ANT.PROG_SEL_RDY, EQ, RDY, 3;
			endofprechk;
			verifytbl 1;
				verify 1, ANT.DRIVE_MODE, EQ, PROG, 1, 6;
			endofverify;
		endofsts;
		sts AUTO;
			prechktbl 1;
				prechk 1, ANT.AUTO_SEL_RDY, EQ, RDY, 3;
			endofprechk;
			verifytbl 1;
				verify 1, ANT.DRIVE_MODE, EQ, AUTO, 1, 6;
			endofverify;
		endofsts;
		sts POSN;
			prechktbl 1;
				prechk 1, ANT.POSN_SEL_RDY, EQ, RDY, 3;
			endofprechk;
/*			verifytbl 1; POSN & AUTO SEL 状態から強制的に変更させるため
				verify 1, ANT.DRIVE_MODE, EQ, POSN, 1, 6;
			endofverify; */
		endofsts;
	endofparam;
end;

ctl ANT.COAST, 0x00, ;
	param 1, s, , S, ;
		sts SET;
			prechktbl 1;
				prechk 1, ANT.COAST_SEL_RDY, EQ, RDY, 3;
			endofprechk;
			verifytbl (1+2);
				verify 1, ANT.COAST, EQ, SEL, 1, 6;
				verify 2, ANT.COAST, EQ, OPR, 1, 6;
			endofverify;
		endofsts;
		sts RESET;
			verifytbl (1+2);
				verify 1, ANT.COAST, EQ, OFF, 1, 6;
				verify 2, ANT.COAST, EQ, SEL_RDY, 1, 6;
			endofverify;
		endofsts;
	endofparam;
end;

ctl ANT.AZ_DRIVE, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			prechktbl 1;
				prechk 1, ANT.AZ_DRIVE_RDY, EQ, RDY, 3;
			endofprechk;
			verifytbl 1;
				verify 1, ANT.AZ_DRIVE, EQ, ON, 1, 6;
			endofverify;
		endofsts;
		sts OFF;
			verifytbl 1;
				verify 1, ANT.AZ_DRIVE, EQ, OFF, 1, 10;
			endofverify;
		endofsts;
	endofparam;
end;

ctl ANT.EL_DRIVE, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			prechktbl 1;
				prechk 1, ANT.EL_DRIVE_RDY, EQ, RDY, 3;
			endofprechk;
			verifytbl 1;
				verify 1, ANT.EL_DRIVE, EQ, ON, 1, 6;
			endofverify;
		endofsts;
		sts OFF;
			verifytbl 1;
				verify 1, ANT.EL_DRIVE, EQ, OFF, 1, 10;
			endofverify;
		endofsts;
	endofparam;
end;

ctl ANT.RCVG_ROUTE, 0x00, ;
	param 1, s, , S, ;
		sts X_ACQ;
			prechktbl 1;
				prechk 1, ANT.RCVG_X_ACQ_RDY, EQ, RDY, 3;
			endofprechk;
			verifytbl 1;
				verify 1, ANT.RCVG_X_ACQ_OPR, EQ, OPR, 1, 6;
			endofverify;
		endofsts;
		sts X_MAIN;
			prechktbl 1;
				prechk 1, ANT.RCVG_X_MAIN_RDY, EQ, RDY, 3;
			endofprechk;
			verifytbl 1;
				verify 1, ANT.RCVG_X_MAIN_OPR, EQ, OPR, 1, 6;
			endofverify;
		endofsts;
		sts S_ACQ;
			prechktbl 1;
				prechk 1, ANT.RCVG_S_ACQ_RDY, EQ, RDY, 3;
			endofprechk;
			verifytbl 1;
				verify 1, ANT.RCVG_S_ACQ_OPR, EQ, OPR, 1, 6;
			endofverify;
		endofsts;
		sts S_MAIN;
			prechktbl 1;
				prechk 1, ANT.RCVG_S_MAIN_RDY, EQ, RDY, 3;
			endofprechk;
			verifytbl 1;
				verify 1, ANT.RCVG_S_MAIN_OPR, EQ, OPR, 1, 6;
			endofverify;
		endofsts;
	endofparam;
end;

ctl ANT.STOW, 0x00, ;
	param 1, s, , S, ;
		sts LOCK;
			prechktbl 1;
				prechk 1, ANT.STOW_LOCK_RDY, EQ, RDY, 3;
			endofprechk;
			verifytbl 1;
				verify 1, ANT.STOW_LOCK, EQ, ON, 30, 122;
			endofverify;
		endofsts;
		sts RELEASE;
			prechktbl 1;
				prechk 1, ANT.STOW_RELEASE_RDY, EQ, RDY, 3;
			endofprechk;
			verifytbl 1;
				verify 1, ANT.STOW_RELEASE, EQ, ON, 1, 30;
			endofverify;
		endofsts;
		sts POSN;
			prechktbl 1;
				prechk 1, ANT.STOW_POSN_RDY, EQ, RDY, 3;
			endofprechk;
			verifytbl 1;
				verify 1, ANT.STOW_POSN_OPR, EQ, OPR, 6, 95;
			endofverify;
		endofsts;
	endofparam;
end;

ctl ANT.COLIM_POSN, 0x00, ;
	param 1, , , , ;
		noprm;
			prechktbl 1;
				prechk 1, ANT.COLIM_POSN_RDY, EQ, RDY, 3;
			endofprechk;
			verifytbl 1;
				verify 1, ANT.COLIM_POSN_OPR, EQ, OPR, 1, 180;
			endofverify;
		endofnoprm;
	endofparam;
end;

ctl ANT.SERVO_BAND, 0x00, ;
	param 1, s, , S, ;
		sts WIDE;
			prechktbl 1;
				prechk 1, ANT.SERVO_BAND_WIDE_SEL_RDY, EQ, RDY, 3;
			endofprechk;
			verifytbl 1;
				verify 1, ANT.SERVO_BAND_WIDE_SEL_OPR, EQ, OPR, 1, 6;
			endofverify;
		endofsts;
		sts MEDIUM;
			prechktbl 1;
				prechk 1, ANT.SERVO_BAND_MID_SEL_RDY, EQ, RDY, 3;
			endofprechk;
			verifytbl 1;
				verify 1, ANT.SERVO_BAND_MID_SEL_OPR, EQ, OPR, 1, 6;
			endofverify;
		endofsts;
		sts NARROW;
			prechktbl 1;
				prechk 1, ANT.SERVO_BAND_NARR_SEL_RDY, EQ, RDY, 3;
			endofprechk;
			verifytbl 1;
				verify 1, ANT.SERVO_BAND_NARR_SEL_OPR, EQ, OPR, 1, 6;
			endofverify;
		endofsts;
	endofparam;
end;

ctl ANT.AZ_POSN, 0x00, ;
	param 1, f, 3.3, B, 3.3;
		val 0.001, 359.999;
		endofval;
	endofparam;
end;

ctl ANT.EL_POSN, 0x00, ;
	param 1, f, 2.3, B, 2.3;
		val 0.001, 89.999;
		endofval;
	endofparam;
end;

ctl ANT.AZ_OFFSET, 0x00, ;
	param 1, f, 2.3, B, 2.3;
		val -9.999, +9.999;
			verifytbl 1;
				verify 1, ANT.AZ_OFFSET, EQ, *, 1, 6;
			endofverify;
		endofval;
	endofparam;
end;

ctl ANT.EL_OFFSET, 0x00, ;
	param 1, f, 2.3, B, 2.3;
		val -9.999, +9.999;
			verifytbl 1;
				verify 1, ANT.EL_OFFSET, EQ, *, 1, 6;
			endofverify;
		endofval;
	endofparam;
end;

ctl ANT.TIME_OFFSET, 0x00, ;
	param 1, s, 6, Z, ;
		sts *;
			verifytbl 1;
				verify 1, ANT.TIME_OFFSET, EQ, *, 1, 6;
			endofverify;
		endofsts;
	endofparam;
end;

/* 2017-03-19 リモート化改修　追加 */
ctl ANT.AUTO_INHIBIT, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			verifytbl 1;
				verify 1, ANT.AUTO_INHIBIT_CTRL, EQ, ON, 1, 10;
			endofverify;
		endofsts;
		sts OFF;
			verifytbl 1;
				verify 1, ANT.AUTO_INHIBIT_CTRL, EQ, OFF, 1, 10;
			endofverify;
		endofsts;
	endofparam;
end;

ctl ANT.RA_OFFSET, 0x00, ;
	param 1, f, 2.3, B, 2.3;
		val -9.999, +9.999;
		endofval;
	endofparam;
end;

ctl ANT.DEC_OFFSET, 0x00, ;
	param 1, f, 2.3, B, 2.3;
		val -9.999, +9.999;
		endofval;
	endofparam;
end;
/* 2017-03-19 リモート化改修　追加　ここまで */
/* COLIM (CONT) */

ctl COLIM.SG, 0x00, ;
	param 1, s, , S, ;
		sts ON;
/*** h10.11.09
			verifytbl 1;
***/
/*** h10.8.14 削除
				verify 1, COLIM.SGPS, EQ, ON, 1, 25;
***/
/*** h10.11.09
				verify 1, COLIM.SGRF, EQ, ON, 1, 25;
			endofverify;
***/
		endofsts;
		sts OFF;
/*** h10.11.09
			verifytbl 1;
				verify 1, COLIM.SGPS, EQ, OFF, 1, 13;
***/
/*** h10.9.28 削除
				verify 1, COLIM.SGRF, EQ, OFF, 1, 13;
***/
/*** h10.11.09
			endofverify;
***/
		endofsts;
	endofparam;
end;

ctl COLIM.ANT, 0x00, ;
	param 1, s, , S, ;
		sts S_POL;
/*** h10.11.09
			verifytbl 1;
				verify 1, COLIM.ANT, EQ, S_POL, 1, 13;
			endofverify;
***/
		endofsts;
		sts S_COLIM;
/*** h10.11.09
			verifytbl 1;
				verify 1, COLIM.ANT, EQ, S_COLIM, 1, 13;
			endofverify;
***/
		endofsts;
/*		sts X_POL;
			verifytbl 1;
				verify 1, COLIM.ANT, EQ, X_POL, 1, 13;
			endofverify;
		endofsts;
*/
		sts X_COLIM34;
/*** h10.11.09
			verifytbl 1;
				verify 1, COLIM.ANT, EQ, X_COLIM34, 1, 13;
			endofverify;
***/
		endofsts;
	endofparam;
end;

ctl COLIM.S_POL, 0x00, ;
	param 1, s, , S, ;
		sts R;
/*** h10.11.09
			verifytbl 1;
				verify 1, COLIM.S_POL, EQ, R, 1, 13;
			endofverify;
***/
		endofsts;
		sts L;
/*** h10.11.09
			verifytbl 1;
				verify 1, COLIM.S_POL, EQ, L, 1, 13;
			endofverify;
***/
		endofsts;
		sts V;
/*** h10.11.09
			verifytbl 1;
				verify 1, COLIM.S_POL, EQ, V, 1, 13;
			endofverify;
***/
		endofsts;
		sts H;
/*** h10.11.09
			verifytbl 1;
				verify 1, COLIM.S_POL, EQ, H, 1, 13;
			endofverify;
***/
		endofsts;
	endofparam;
end;

ctl COLIM.X_POL34, 0x00, ;
	param 1, s, , S, ;
		sts R;
/*** h10.11.09
			verifytbl 1;
				verify 1, COLIM.X_POL34, EQ, R, 1, 13;
			endofverify;
***/
		endofsts;
		sts L;
/*** h10.11.09
			verifytbl 1;
				verify 1, COLIM.X_POL34, EQ, L, 1, 13;
			endofverify;
***/
		endofsts;
		sts V;
/*** h10.11.09
			verifytbl 1;
				verify 1, COLIM.X_POL34, EQ, V, 1, 13;
			endofverify;
***/
		endofsts;
		sts H;
/*** h10.11.09
			verifytbl 1;
				verify 1, COLIM.X_POL34, EQ, H, 1, 13;
			endofverify;
***/
		endofsts;
	endofparam;
end;

ctl COLIM.FREQ, 0x00, ;
	param 1, s, , S, ;
		sts F1;
/*** h10.11.09
			verifytbl 1;
				verify 1, COLIM.FREQ, EQ, F1, 1, 13;
			endofverify;
***/
		endofsts;
		sts F2;
/*** h10.11.09
			verifytbl 1;
				verify 1, COLIM.FREQ, EQ, F2, 1, 13;
			endofverify;
***/
		endofsts;
		sts F3;
/*** h10.11.09
			verifytbl 1;
				verify 1, COLIM.FREQ, EQ, F3, 1, 13;
			endofverify;
***/
		endofsts;
		sts F4;
/*** h10.11.09
			verifytbl 1;
				verify 1, COLIM.FREQ, EQ, F4, 1, 13;
			endofverify;
***/
		endofsts;
		sts F5;
/*** h10.11.09
			verifytbl 1;
				verify 1, COLIM.FREQ, EQ, F5, 1, 13;
			endofverify;
***/
		endofsts;
		sts F6;
/*** h10.11.09
			verifytbl 1;
				verify 1, COLIM.FREQ, EQ, F6, 1, 13;
			endofverify;
***/
		endofsts;
		sts F7;
/*** h10.11.09
			verifytbl 1;
				verify 1, COLIM.FREQ, EQ, F7, 1, 13;
			endofverify;
***/
		endofsts;
		sts F8;
/*** h10.11.09
			verifytbl 1;
				verify 1, COLIM.FREQ, EQ, F8, 1, 13;
			endofverify;
***/
		endofsts;
		sts F9;
/*** h10.11.09
			verifytbl 1;
				verify 1, COLIM.FREQ, EQ, F9, 1, 13;
			endofverify;
***/
		endofsts;
		sts F10;
/*** h10.11.09
			verifytbl 1;
				verify 1, COLIM.FREQ, EQ, F10, 1, 13;
			endofverify;
***/
		endofsts;
	endofparam;
end;

ctl COLIM.ATT, 0x00, ;
	param 1, u, 3, B, 3;
		val 0, 110;
/*** h10.11.09
			verifytbl 1;
				verify 1, COLIM.ATT, EQ, *, 1, 13;
			endofverify;
***/
		endofval;
	endofparam;
end;
/* S-CAL (CONT) */
 //----------------------------------------------------------------------
 // データベース名    ：内之浦局 S-CAL制御
 // ファイル名        ：s-cal.db
 // 作成日            ：2017/02/10
 // 履歴              ：Ver2.0.0 2017/02/14 as-04 USC/UDSC送受信設備更新により、不要となった信号を削除。
 //----------------------------------------------------------------------

ctl S-CAL.ACQ_X_RF_OUTPUT, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			verifytbl 1;
				verify 1, S-CAL.ACQ_X_RF_OUTPUT, EQ, ON, 1, 5;
			endofverify;
		endofsts;
		sts OFF;
			verifytbl 1;
				verify 1, S-CAL.ACQ_X_RF_OUTPUT, EQ, OFF, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-CAL.ACQ_S_RF_OUTPUT, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			verifytbl 1;
				verify 1, S-CAL.ACQ_S_RF_OUTPUT, EQ, ON, 1, 5;
			endofverify;
		endofsts;
		sts OFF;
			verifytbl 1;
				verify 1, S-CAL.ACQ_S_RF_OUTPUT, EQ, OFF, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

/* CMDOUT 制御 */


// ##### 2011/02/02 UDSC-KEISANKI KANSOU -START- ###### 
// ctl CMDOUT.PASS_INIT, 0x00,;
//     param 1, , , , ;
// 	    noprm;
//         endofnoprm;
// 	endofparam;
// end;
//
// ctl CMDOUT.PASS_CHG, 0x00,;
//     param 1, , , , ;
// 	    noprm;
//         endofnoprm;
// 	endofparam;
// end;
//
// ctl CMDOUT.PASS_END, 0x00,;
//     param 1, , , , ;
// 	    noprm;
//         endofnoprm;
// 	endofparam;
// end;

ctl CMDOUT.CMD_BITRATE, 0x00,;
    param 1, u, 6, A, 6;
        val 10, 262144;
        endofval;
	endofparam;
end;

ctl CMDOUT.RF_BITRATE, 0x00,;
    param 1, u, 6, A, 6;
        val 10, 262144;
        endofval;
	endofparam;
end;

ctl CMDOUT.TCR_ECHO_MODE, 0x00,;
    param 1, s, , S, ;
        sts RF;
        endofsts;
        sts CMDOUT;
        endofsts;
	endofparam;
end;

ctl CMDOUT.HOLD_TONE, 0x00,;
    param 1, s, , S, ;
        sts ON;
        endofsts;
        sts OFF;
        endofsts;
	endofparam;
end;

ctl CMDOUT.SIMCMD_SND, 0x00,;
    param 1, s, 15, Z, ;
        sts *;
        endofsts;
	endofparam;
end;

ctl CMDOUT.SIMCMD_END, 0x00,;
    param 1, u, 3, A, 3;
        val 0, 255;
        endofval;
	endofparam;
end;

ctl CMDOUT.USER_CUTSD, 0x00,;
    param 1, s, , S, ;
        sts SDTP;
        endofsts;
	endofparam;
end;

ctl CMDOUT.H2SMACS_CMD_START, 0x00,;
    param 1, u, 3, A, 3;
        val 0, 255;
        endofval;
	endofparam;
end;

ctl CMDOUT.H2SMACS_CMD_END, 0x00,;
    param 1, u, 3, A, 3;
        val 0, 255;
        endofval;
	endofparam;
end;

ctl CMDOUT.SHUTDOWN, 0x00,;
    param 1, , , , ;
	    noprm;
        endofnoprm;
	endofparam;
end;

ctl CMDOUT.RESTART, 0x00,;
    param 1, , , , ;
	    noprm;
        endofnoprm;
	endofparam;
end;

ctl CMDOUT.TCR_RECONNECT, 0x00,;
    param 1, , , , ;
	    noprm;
        endofnoprm;
	endofparam;
end;

ctl CMDOUT.CCSDS_COP_VCID, 0x00,;
    param 1, u, 2, A, 2;
        val 0, 63;
        endofval;
    endofparam;
end;
// ##### 2011/02/02 udsc-keisanki kansou -end-  ######


/**************************************** 2012更新(RD対応)　ここから */
ctl CMDOUT.RD_BITRATE, 0x00,;
    param 1, u, 6, A, 6;
        val 10, 262144;
        endofval;
	endofparam;
end;

ctl CMDOUT.RD_HOLD_TONE, 0x00,;
    param 1, s, , S, ;
        sts ON;
        endofsts;
        sts OFF;
        endofsts;
	endofparam;
end;

ctl CMDOUT.CMDLOG_MODE, 0x00,;
    param 1, s, , S, ;
        sts ALL;
        endofsts;
        sts SUMMARY;
        endofsts;
        sts NONE;
        endofsts;
	endofparam;
end;

ctl CMDOUT.PLOP, 0x00,;
    param 1, s, , S, ;
        sts PLOP1;
        endofsts;
        sts PLOP2;
        endofsts;
	endofparam;
end;

ctl CMDOUT.RD_PLOP, 0x00,;
    param 1, s, , S, ;
        sts PLOP1;
        endofsts;
        sts PLOP2;
        endofsts;
	endofparam;
end;

ctl CMDOUT.SIMCMD_RD_SND, 0x00,;
    param 1, s, 15, Z, ;
        sts *;
        endofsts;
	endofparam;
end;

//ctl CMDOUT.RD_SIMCMD_END, 0x00,;
//    param 1, u, 3, A, 3;
//        val 0, 255;
//        endofval;
//	endofparam;
//end;

ctl CMDOUT.RD_RECONNECT, 0x00,;
    param 1, , , , ;
	    noprm;
        endofnoprm;
	endofparam;
end;

/**************************************** 2012更新(RD対応)　ここまで */

/****** THE END OF FILE *****************************************/

/* S-PKTDEM (CONT) */

ctl S-PKTDEM.OPR_ID, 0x00, ;
	param 1, u, 2, A, 2;
		val 1, 99;
//			verifytbl 1;
//				verify 1, S-PKTDEM.OPR_ID, EQ, *, 1, 5;
//			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTDEM.DEC_IN_SEL, 0x00, ;
	param 1, s, , S, ;
		sts DEM1;
			verifytbl 1;
				verify 1, S-PKTDEM.DEC_IN_SEL, EQ, DEM1, 1, 5;
			endofverify;
		endofsts;
		sts DEM2;
			verifytbl 1;
				verify 1, S-PKTDEM.DEC_IN_SEL, EQ, DEM2, 1, 5;
			endofverify;
		endofsts;
		sts SIM;
			verifytbl 1;
				verify 1, S-PKTDEM.DEC_IN_SEL, EQ, SIM, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

// ビットレート 2000.04.27 追加
ctl S-PKTDEM.BIT_RATE, 0X00, ;
    param  1, f, 1.6E1, F, 1.6E1;
        func  FX_EXP;
        endoffunc;
    endofparam;
end;

// ビットレート 2000.05.19 テスト
//ctl S-PKTDEM.SYM_RATE, 0X00, ;
//    param  1, f, 1.6E1, F, 1.6E1;
//        func  FX_EXP;
//        endoffunc;
//    endofparam;
//end;

ctl S-PKTDEM.FRM_LNG, 0x00, ;
	param 1, u, 4, A, 4;
		val 8, 2048;
			verifytbl 1;
				verify 1, S-PKTDEM.FRM_LNG, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTDEM.FRM_PAT_L, 0x00, ;
	param 1, s, , S, ;
		sts 8;
			verifytbl 1;
				verify 1, S-PKTDEM.FRM_PAT_L, EQ, 8, 1, 5;
			endofverify;
		endofsts;
		sts 16;
			verifytbl 1;
				verify 1, S-PKTDEM.FRM_PAT_L, EQ, 16, 1, 5;
			endofverify;
		endofsts;
		sts 24;
			verifytbl 1;
				verify 1, S-PKTDEM.FRM_PAT_L, EQ, 24, 1, 5;
			endofverify;
		endofsts;
		sts 32;
			verifytbl 1;
				verify 1, S-PKTDEM.FRM_PAT_L, EQ, 32, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-PKTDEM.FRM_PAT, 0x00, ;
	param 1, x, 10, A, 10;
		val 0X00000000, 0XFFFFFFFF;
			verifytbl 1;
				verify 1, S-PKTDEM.FRM_PAT, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTDEM.LOCK_ERR, 0x00, ;
	param 1, u, 1, A, 1;
		val 0, 9;
			verifytbl 1;
				verify 1, S-PKTDEM.LOCK_ERR, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTDEM.CHK_ERR, 0x00, ;
	param 1, u, 1, A, 1;
		val 0, 9;
			verifytbl 1;
				verify 1, S-PKTDEM.CHK_ERR, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTDEM.SCH_ERR, 0x00, ;
	param 1, u, 1, A, 1;
		val 0, 9;
			verifytbl 1;
				verify 1, S-PKTDEM.SCH_ERR, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTDEM.LOCK_OFF_C, 0x00, ;
	param 1, u, 2, A, 2;
		val 1, 15;
			verifytbl 1;
				verify 1, S-PKTDEM.LOCK_OFF_C, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTDEM.LOCK_ON_C, 0x00, ;
	param 1, u, 2, A, 2;
		val 1, 15;
			verifytbl 1;
				verify 1, S-PKTDEM.LOCK_ON_C, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTDEM.FRM_RST, 0x00, ;
	param 1, s, , S, ;
		sts ON;
		endofsts;
/*		sts OFF;
		endofsts; */
	endofparam;
end;

ctl S-PKTDEM.DERAND, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			verifytbl 1;
				verify 1, S-PKTDEM.DERAND, EQ, ON, 1, 5;
			endofverify;
		endofsts;
		sts OFF;
			verifytbl 1;
				verify 1, S-PKTDEM.DERAND, EQ, OFF, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-PKTDEM.R_S_DEC, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			verifytbl 1;
				verify 1, S-PKTDEM.R_S_DEC, EQ, ON, 1, 5;
			endofverify;
		endofsts;
		sts OFF;
			verifytbl 1;
				verify 1, S-PKTDEM.R_S_DEC, EQ, OFF, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

//ctl S-PKTDEM.SHORT, 0x00, ;
//	param 1, s, , S, ;
//		sts ON;
//			verifytbl 1;
//				verify 1, S-PKTDEM.SHORT, EQ, ON, 1, 5;
//			endofverify;
//		endofsts;
//		sts OFF;
//			verifytbl 1;
//				verify 1, S-PKTDEM.SHORT, EQ, OFF, 1, 5;
//			endofverify;
//		endofsts;
//	endofparam;
//end;
//
//ctl S-PKTDEM.INTLEV, 0x00, ;
//	param 1, u, 1, A, 1;
//		val 1, 5;
//			verifytbl 1;
//				verify 1, S-PKTDEM.INTLEV, EQ, *, 1, 5;
//			endofverify;
//		endofval;
//	endofparam;
//end;

ctl S-PKTDEM.MON_NO1, 0x00, ;
	param 1, u, 4, A, 4;
		val 0, 2047;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_NO1, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTDEM.MON_NO2, 0x00, ; 
	param 1, u, 4, A, 4;
		val 0, 2047;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_NO2, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTDEM.MON_NO3, 0x00, ;
	param 1, u, 4, A, 4;
		val 0, 2047;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_NO3, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTDEM.MON_NO4, 0x00, ; 
	param 1, u, 4, A, 4;
		val 0, 2047;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_NO4, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTDEM.MON_NO5, 0x00, ;
	param 1, u, 4, A, 4;
		val 0, 2047;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_NO5, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTDEM.MON_NO6, 0x00, ;
	param 1, u, 4, A, 4;
		val 0, 2047;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_NO6, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTDEM.MON_NO7, 0x00, ;
	param 1, u, 4, A, 4;
		val 0, 2047;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_NO7, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTDEM.MON_NO8, 0x00, ;
	param 1, u, 4, A, 4;
		val 0, 2047;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_NO8, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTDEM.CCSDS, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			verifytbl 1;
				verify 1, S-PKTDEM.CCSDS, EQ, ON, 1, 5;
			endofverify;
		endofsts;
		sts OFF;
			verifytbl 1;
				verify 1, S-PKTDEM.CCSDS, EQ, OFF, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-PKTDEM.SUBFRM_L, 0x00, ;
	param 1, u, 3, A, 3;
		val 2, 256;
			verifytbl 1;
				verify 1, S-PKTDEM.SUBFRM_L, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTDEM.FRM_ID_B_LOC, 0x00, ;
	param 1, u, 1, A, 1;
		val 0, 7;
			verifytbl 1;
				verify 1, S-PKTDEM.FRM_ID_B_LOC, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTDEM.FRM_ID_L, 0x00, ;
	param 1, u, 2, A, 2;
		val 1, 11;
			verifytbl 1;
				verify 1, S-PKTDEM.FRM_ID_L, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTDEM.FRM_ID_W_LOC, 0x00, ;
	param 1, u, 4, A, 4;
		val 1, 2047;
			verifytbl 1;
				verify 1, S-PKTDEM.FRM_ID_W_LOC, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTDEM.SUB_LOCK_OFF_C, 0x00, ;
	param 1, u, 2, A, 2;
		val 1, 15;
			verifytbl 1;
				verify 1, S-PKTDEM.SUB_LOCK_OFF_C, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTDEM.SUBFRM_RST, 0x00, ;
	param 1, s, , S, ;
		sts ON;
		endofsts;
/*		sts OFF;
		endofsts; */
	endofparam;
end;

ctl S-PKTDEM.CRC, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			verifytbl 1;
				verify 1, S-PKTDEM.CRC, EQ, ON, 1, 5;
			endofverify;
		endofsts;
		sts OFF;
			verifytbl 1;
				verify 1, S-PKTDEM.CRC, EQ, OFF, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-PKTDEM.FSPBER_CHK_FS, 0x00, ;
	param 1, u, 10, A, 10;
//		val 1, 536870911;
		val 1, 4294967295;
			verifytbl 1;
				verify 1, S-PKTDEM.FSPBER_CHK_FS, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTDEM.FSPBER_CHK_FL, 0x00, ;
	param 1, u, 10, A, 10;
//		val 1, 536870911;
		val 1, 4294967295;
			verifytbl 1;
				verify 1, S-PKTDEM.FSPBER_CHK_FL, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTDEM.FSPBER_RSTS, 0x00, ;
	param 1, s, , S, ;
		sts ON;
		endofsts;
/*		sts OFF;
		endofsts; */
	endofparam;
end;

ctl S-PKTDEM.FSPBER_RSTL, 0x00, ;
	param 1, s, , S, ;
		sts ON;
		endofsts;
/*		sts OFF;
		endofsts; */
	endofparam;
end;

ctl S-PKTDEM.MON_COM1, 0x00, ;
	param 1, s, , S, ;
		sts NORMAL;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_COM1, EQ, NORMAL, 1, 5;
			endofverify;
		endofsts;
		sts SUPER;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_COM1, EQ, SUPER, 1, 5;
			endofverify;
		endofsts;
		sts SUB;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_COM1, EQ, SUB, 1, 5;
			endofverify;
		endofsts;
		sts SUBSUPER;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_COM1, EQ, SUBSUPER, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-PKTDEM.MON_COM2, 0x00, ;
	param 1, s, , S, ;
		sts NORMAL;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_COM2, EQ, NORMAL, 1, 5;
			endofverify;
		endofsts;
		sts SUPER;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_COM2, EQ, SUPER, 1, 5;
			endofverify;
		endofsts;
		sts SUB;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_COM2, EQ, SUB, 1, 5;
			endofverify;
		endofsts;
		sts SUBSUPER;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_COM2, EQ, SUBSUPER, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-PKTDEM.MON_COM3, 0x00, ;
	param 1, s, , S, ;
		sts NORMAL;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_COM3, EQ, NORMAL, 1, 5;
			endofverify;
		endofsts;
		sts SUPER;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_COM3, EQ, SUPER, 1, 5;
			endofverify;
		endofsts;
		sts SUB;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_COM3, EQ, SUB, 1, 5;
			endofverify;
		endofsts;
		sts SUBSUPER;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_COM3, EQ, SUBSUPER, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-PKTDEM.MON_COM4, 0x00, ;
	param 1, s, , S, ;
		sts NORMAL;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_COM4, EQ, NORMAL, 1, 5;
			endofverify;
		endofsts;
		sts SUPER;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_COM4, EQ, SUPER, 1, 5;
			endofverify;
		endofsts;
		sts SUB;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_COM4, EQ, SUB, 1, 5;
			endofverify;
		endofsts;
		sts SUBSUPER;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_COM4, EQ, SUBSUPER, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-PKTDEM.MON_COM5, 0x00, ;
	param 1, s, , S, ;
		sts NORMAL;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_COM5, EQ, NORMAL, 1, 5;
			endofverify;
		endofsts;
		sts SUPER;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_COM5, EQ, SUPER, 1, 5;
			endofverify;
		endofsts;
		sts SUB;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_COM5, EQ, SUB, 1, 5;
			endofverify;
		endofsts;
		sts SUBSUPER;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_COM5, EQ, SUBSUPER, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-PKTDEM.MON_COM6, 0x00, ;
	param 1, s, , S, ;
		sts NORMAL;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_COM6, EQ, NORMAL, 1, 5;
			endofverify;
		endofsts;
		sts SUPER;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_COM6, EQ, SUPER, 1, 5;
			endofverify;
		endofsts;
		sts SUB;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_COM6, EQ, SUB, 1, 5;
			endofverify;
		endofsts;
		sts SUBSUPER;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_COM6, EQ, SUBSUPER, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-PKTDEM.MON_COM7, 0x00, ;
	param 1, s, , S, ;
		sts NORMAL;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_COM7, EQ, NORMAL, 1, 5;
			endofverify;
		endofsts;
		sts SUPER;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_COM7, EQ, SUPER, 1, 5;
			endofverify;
		endofsts;
		sts SUB;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_COM7, EQ, SUB, 1, 5;
			endofverify;
		endofsts;
		sts SUBSUPER;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_COM7, EQ, SUBSUPER, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-PKTDEM.MON_COM8, 0x00, ;
	param 1, s, , S, ;
		sts NORMAL;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_COM8, EQ, NORMAL, 1, 5;
			endofverify;
		endofsts;
		sts SUPER;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_COM8, EQ, SUPER, 1, 5;
			endofverify;
		endofsts;
		sts SUB;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_COM8, EQ, SUB, 1, 5;
			endofverify;
		endofsts;
		sts SUBSUPER;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_COM8, EQ, SUBSUPER, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-PKTDEM.MON_FRM1, 0x00, ;
	param 1, u, 3, A, 3;
		val 0, 255;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_FRM1, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTDEM.MON_FRM2, 0x00, ;
	param 1, u, 3, A, 3;
		val 0, 255;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_FRM2, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTDEM.MON_FRM3, 0x00, ;
	param 1, u, 3, A, 3;
		val 0, 255;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_FRM3, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTDEM.MON_FRM4, 0x00, ;
	param 1, u, 3, A, 3;
		val 0, 255;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_FRM4, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTDEM.MON_FRM5, 0x00, ;
	param 1, u, 3, A, 3;
		val 0, 255;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_FRM5, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTDEM.MON_FRM6, 0x00, ;
	param 1, u, 3, A, 3;
		val 0, 255;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_FRM6, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTDEM.MON_FRM7, 0x00, ;
	param 1, u, 3, A, 3;
		val 0, 255;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_FRM7, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTDEM.MON_FRM8, 0x00, ;
	param 1, u, 3, A, 3;
		val 0, 255;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_FRM8, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTDEM.MON_MULTI1, 0x00, ;
	param 1, u, 2, A, 2;
		val 0, 11;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_MULTI1, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTDEM.MON_MULTI2, 0x00, ;
	param 1, u, 2, A, 2;
		val 0, 11;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_MULTI2, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTDEM.MON_MULTI3, 0x00, ;
	param 1, u, 2, A, 2;
		val 0, 11;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_MULTI3, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTDEM.MON_MULTI4, 0x00, ;
	param 1, u, 2, A, 2;
		val 0, 11;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_MULTI4, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTDEM.MON_MULTI5, 0x00, ;
	param 1, u, 2, A, 2;
		val 0, 11;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_MULTI5, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTDEM.MON_MULTI6, 0x00, ;
	param 1, u, 2, A, 2;
		val 0, 11;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_MULTI6, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTDEM.MON_MULTI7, 0x00, ;
	param 1, u, 2, A, 2;
		val 0, 11;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_MULTI7, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTDEM.MON_MULTI8, 0x00, ;
	param 1, u, 2, A, 2;
		val 0, 11;
			verifytbl 1;
				verify 1, S-PKTDEM.MON_MULTI8, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;
/* S-PKTSIM (CONT) */ 

ctl S-PKTSIM.OPR_ID, 0x00, ;
	param 1, u, 2, A, 2;
  		val 1, 99;
//			verifytbl 1;
//				verify 1, S-PKTSIM.OPR_ID, EQ, *, 1, 5;
//			endofverify;
		endofval;
	endofparam;
end;
 
ctl S-PKTSIM.CCSDS, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			verifytbl 1;
				verify 1, S-PKTSIM.CCSDS, EQ, ON, 1, 5;
			endofverify;
		endofsts;
		sts OFF;
			verifytbl 1;
				verify 1, S-PKTSIM.CCSDS, EQ, OFF, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

/* 中低速系のみなので高速系にないもの**********************/

ctl S-PKTSIM.BLANK, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			verifytbl 1;
				verify 1, S-PKTSIM.BLANK, EQ, ON, 1, 5;
			endofverify;
		endofsts;
		sts OFF;
			verifytbl 1;
				verify 1, S-PKTSIM.BLANK, EQ, OFF, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-PKTSIM.CAL_OUT, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			verifytbl 1;
				verify 1, S-PKTSIM.CAL_OUT, EQ, ON, 1, 5;
			endofverify;
		endofsts;
		sts OFF;
			verifytbl 1;
				verify 1, S-PKTSIM.CAL_OUT, EQ, OFF, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-PKTSIM.OUT_ON, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			verifytbl 1;
				verify 1, S-PKTSIM.OUT_ON, EQ, ON, 1, 5;
			endofverify;
		endofsts;
		sts OFF;
			verifytbl 1;
				verify 1, S-PKTSIM.OUT_ON, EQ, OFF, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-PKTSIM.MOD_ON, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			verifytbl 1;
				verify 1, S-PKTSIM.MOD_ON, EQ, ON, 1, 5;
			endofverify;
		endofsts;
		sts OFF;
			verifytbl 1;
				verify 1, S-PKTSIM.MOD_ON, EQ, OFF, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

/***********************************************************/

ctl S-PKTSIM.SUB_CARRY, 0x00, ;
	param 1, f, 7.3, B, 7.3;
		val 100.000, 2000000.000;
			verifytbl 1;
				verify 1, S-PKTSIM.SUB_CARRY, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
/*	param 1, f, 1.5E1, F, 1.5E1;
		func FX_EXP;
			verifytbl 1;
				verify 1, S-PKTSIM.SUB_CARRY, EQ, *, 1, 5;
			endofverify;
		endoffunc;
	endofparam; */
end;

ctl S-PKTSIM.SYM_RATE, 0x00, ;
	param 1, f, 7.3, B, 7.3;
		val 5.000, 2000000.000;
			verifytbl 1;
				verify 1, S-PKTSIM.SYM_RATE, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
/*	param 1, f, 1.5E1, F, 1.5E1;
 		func FX_EXP;
			verifytbl 1;
				verify 1, S-PKTSIM.SYM_RATE, EQ, *, 1, 5;
			endofverify;
		endoffunc;
	endofparam; */
end;

ctl S-PKTSIM.PCM_CODE, 0x00, ;
	param 1, s, , S, ;
		sts NRZ_L;
			verifytbl 1;
				verify 1, S-PKTSIM.PCM_CODE, EQ, NRZ_L, 1, 5;
			endofverify;
		endofsts;
		sts NRZ_M;
			verifytbl 1;
				verify 1, S-PKTSIM.PCM_CODE, EQ, NRZ_M, 1, 5;
			endofverify;
		endofsts;
		sts NRZ_S;
			verifytbl 1;
				verify 1, S-PKTSIM.PCM_CODE, EQ, NRZ_S, 1, 5;
			endofverify;
		endofsts;
		sts BIPH_L;
			verifytbl 1;
				verify 1, S-PKTSIM.PCM_CODE, EQ, BIPH_L, 1, 5;
			endofverify;
		endofsts;
		sts BIPH_M;
			verifytbl 1;
				verify 1, S-PKTSIM.PCM_CODE, EQ, BIPH_M, 1, 5;
			endofverify;
		endofsts;
		sts BIPH_S;
			verifytbl 1;
				verify 1, S-PKTSIM.PCM_CODE, EQ, BIPH_S, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

/* 中低速系のみなので高速系は無しのもの*********************************/

/* KSCのみ ********************/

ctl S-PKTSIM.WAVE, 0x00, ;
	param 1, s, , S, ;
		sts RECT;
			verifytbl 1;
				verify 1, S-PKTSIM.WAVE, EQ, RECT, 1, 5;
			endofverify;
		endofsts;
		sts SINE;
			verifytbl 1;
				verify 1, S-PKTSIM.WAVE, EQ, SINE, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

/******************************/

ctl S-PKTSIM.COHERENT, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			verifytbl 1;
				verify 1, S-PKTSIM.COHERENT, EQ, ON, 1, 5;
			endofverify;
		endofsts;
		sts OFF;
			verifytbl 1;
				verify 1, S-PKTSIM.COHERENT, EQ, OFF, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-PKTSIM.OUT_LEV, 0x00, ;
	param 1, s, , S, ;
		sts 5.0V;
			verifytbl 1;
				verify 1, S-PKTSIM.OUT_LEV, EQ, 5.0V, 1, 5;
			endofverify;
		endofsts;
		sts 3.0V;
			verifytbl 1;
				verify 1, S-PKTSIM.OUT_LEV, EQ, 3.0V, 1, 5;
			endofverify;
		endofsts;
		sts 1.0V;
			verifytbl 1;
				verify 1, S-PKTSIM.OUT_LEV, EQ, 1.0V, 1, 5;
			endofverify;
		endofsts;
		sts 0.5V;
			verifytbl 1;
				verify 1, S-PKTSIM.OUT_LEV, EQ, 0.5V, 1, 5;
			endofverify;
		endofsts;
		sts 0.3V;
			verifytbl 1;
				verify 1, S-PKTSIM.OUT_LEV, EQ, 0.3V, 1, 5;
			endofverify;
		endofsts;
		sts 0.1V;
			verifytbl 1;
				verify 1, S-PKTSIM.OUT_LEV, EQ, 0.1V, 1, 5;
			endofverify;
		endofsts;
		sts 0.05V;
			verifytbl 1;
				verify 1, S-PKTSIM.OUT_LEV, EQ, 0.05V, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

//ctl S-PKTSIM.NOISE, 0x00, ;
//	param 1, s, , S, ;
//		sts OFF;
//			verifytbl 1;
//				verify 1, S-PKTSIM.NOISE, EQ, OFF, 1, 5;
//			endofverify;
//		endofsts;
//		sts EXT;
//			verifytbl 1;
//				verify 1, S-PKTSIM.NOISE, EQ, EXT, 1, 5;
//			endofverify;
//		endofsts;
//		sts INT;
//			verifytbl 1;
//				verify 1, S-PKTSIM.NOISE, EQ, INT, 1, 5;
//			endofverify;
//		endofsts;
//	endofparam;
//end;

ctl S-PKTSIM.CONV_CODE, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			verifytbl 1;
				verify 1, S-PKTSIM.CONV_CODE, EQ, ON, 1, 5;
			endofverify;
		endofsts;
		sts OFF;
			verifytbl 1;
				verify 1, S-PKTSIM.CONV_CODE, EQ, OFF, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-PKTSIM.CONV_MODE, 0x00, ;
	param 1, s, , S, ;
		sts JPL;
			verifytbl 1;
				verify 1, S-PKTSIM.CONV_MODE, EQ, JPL, 1, 5;
			endofverify;
		endofsts;
		sts CCSDS;
			verifytbl 1;
				verify 1, S-PKTSIM.CONV_MODE, EQ, CCSDS, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

/*************************************************************/

ctl S-PKTSIM.FRM_LNG, 0x00, ;
	param 1, u, 4, A, 4;
		val 8, 2048;
			verifytbl 1;
				verify 1, S-PKTSIM.FRM_LNG, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;	
end;

ctl S-PKTSIM.FRM_PAT_L, 0x00, ;
	param 1, u, 2, A, 2;
		val 0, 32;
			verifytbl 1;
				verify 1, S-PKTSIM.FRM_PAT_L, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTSIM.FRM_PAT, 0x00, ;
	param 1, x, 10, A, 10;
		val 0X00000000, 0XFFFFFFFF;
			verifytbl 1;
				verify 1, S-PKTSIM.FRM_PAT, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTSIM.SUBFRM_L, 0x00, ;
	param 1, u, 4, A, 4;
		val 2, 2048;
			verifytbl 1;
				verify 1, S-PKTSIM.SUBFRM_L, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTSIM.FRM_ID_L, 0x00, ;
	param 1, u, 2, A, 2;
		val 1, 11;
			verifytbl 1;
				verify 1, S-PKTSIM.FRM_ID_L, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTSIM.FRM_ID_W_LOC, 0x00, ;
	param 1, u, 4, A, 4;
		val 0, 2047;
			verifytbl 1;
				verify 1, S-PKTSIM.FRM_ID_W_LOC, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTSIM.FRM_ID_B_LOC, 0x00, ;
	param 1, u, 1, A, 1;
		val 0, 7;
			verifytbl 1;
				verify 1, S-PKTSIM.FRM_ID_B_LOC, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTSIM.BER_START, 0x00, ;
	param 1, s, , S, ;
		sts START;
			verifytbl 1;
				verify 1, S-PKTSIM.BER_START, EQ, START, 1, 5;
			endofverify;
		endofsts;
		sts STOP;
			verifytbl 1;
				verify 1, S-PKTSIM.BER_START, EQ, STOP, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-PKTSIM.BER_POL, 0x00, ;
	param 1, s, , S, ;
		sts NORMAL;
			verifytbl 1;
				verify 1, S-PKTSIM.BER_POL, EQ, NORMAL, 1, 5;
			endofverify;
		endofsts;
		sts INVERS;
			verifytbl 1;
				verify 1, S-PKTSIM.BER_POL, EQ, INVERS, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-PKTSIM.BER_IN_SEL, 0x00, ;
	param 1, s, , S, ;
		sts INT;
			verifytbl 1;
				verify 1, S-PKTSIM.BER_IN_SEL, EQ, INT, 1, 5;
			endofverify;
		endofsts;
		sts EXT;
			verifytbl 1;
				verify 1, S-PKTSIM.BER_IN_SEL, EQ, EXT, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-PKTSIM.STOP_C_MODE, 0x00, ;
	param 1, s, , S, ;
		sts ERROR;
			verifytbl 1;
				verify 1, S-PKTSIM.STOP_C_MODE, EQ, ERROR, 1, 5;
			endofverify;
		endofsts;
		sts TOTAL;
			verifytbl 1;
				verify 1, S-PKTSIM.STOP_C_MODE, EQ, TOTAL, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-PKTSIM.BER_MODE, 0x00, ;
	param 1, s, , S, ;
		sts PN_SYNC;
			verifytbl 1;
				verify 1, S-PKTSIM.BER_MODE, EQ, PN_SYNC, 1, 5;
			endofverify;
		endofsts;
		sts BIT_DELAY;
			verifytbl 1;
				verify 1, S-PKTSIM.BER_MODE, EQ, BIT_DELAY, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-PKTSIM.STOP_C, 0x00, ;
	param 1, u, 8, A, 8;
		val 1, 16777215;
			verifytbl 1;
				verify 1, S-PKTSIM.STOP_C, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

/* 中低速系のみなので高速系にはなしのもの**************/

/* ０．２５ステップ */

ctl S-PKTSIM.BIT_DELAY, 0x00, ;
	param 1, f, 4.2, B, 4.2;
//		val 0.00, 128.75;
        val 0.0, 1023.75;
			verifytbl 1;
				verify 1, S-PKTSIM.BIT_DELAY, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

/*****************************************************/

ctl S-PKTSIM.RANDOMIZER, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			verifytbl 1;
				verify 1, S-PKTSIM.RANDOMIZER, EQ, ON, 1, 5;
			endofverify;
		endofsts;
		sts OFF;
			verifytbl 1;
				verify 1, S-PKTSIM.RANDOMIZER, EQ, OFF, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

//ctl S-PKTSIM.SHORT, 0x00, ;
//	param 1, s, , S, ;
//		sts ON;
//			verifytbl 1;
//				verify 1, S-PKTSIM.SHORT, EQ, ON, 1, 5;
//			endofverify;
//		endofsts;
//		sts OFF;
//			verifytbl 1;
//				verify 1, S-PKTSIM.SHORT, EQ, OFF, 1, 5;
//			endofverify;
//		endofsts;
//	endofparam;
//end;
// 
//ctl S-PKTSIM.INTLEV, 0x00, ;
//	param 1, u, 1, A, 1;
//		val 1, 5;
//			verifytbl 1;
//				verify 1, S-PKTSIM.INTLEV, EQ, *, 1, 5;
//			endofverify;
//		endofval;
//	endofparam;
//end;

ctl S-PKTSIM.R_S_ENC, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			verifytbl 1;
				verify 1, S-PKTSIM.R_S_ENC, EQ, ON, 1, 5;
			endofverify;
		endofsts;
		sts OFF;
			verifytbl 1;
				verify 1, S-PKTSIM.R_S_ENC, EQ, OFF, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

//ctl S-PKTSIM.WORD_C_W_LOC, 0x00, ;
//	param 1, u, 4, A, 4;
//		val 0, 2047;
//			verifytbl 1;
//				verify 1, S-PKTSIM.WORD_C_W_LOC, EQ, *, 1, 5;
//			endofverify;
//		endofval;
//	endofparam;
//end;
//
//ctl S-PKTSIM.WORD_C_L, 0x00, ;
//	param 1, s, , S, ;
//		sts 8;
//			verifytbl 1;
//				verify 1, S-PKTSIM.WORD_C_L, EQ, 8, 1, 5;
//			endofverify;
//		endofsts;
//		sts 16;
//			verifytbl 1;
//				verify 1, S-PKTSIM.WORD_C_L, EQ, 16, 1, 5;
//			endofverify;
//		endofsts;
//		sts 24;
//			verifytbl 1;
//				verify 1, S-PKTSIM.WORD_C_L, EQ, 24, 1, 5;
//			endofverify;
//		endofsts;
//	endofparam;
//end;
//
//ctl S-PKTSIM.WORD_C_DEF, 0x00, ;
//	param 1, u, 8, A, 8;
//		val 0, 16777215;
//			verifytbl 1;
//				verify 1, S-PKTSIM.WORD_C_DEF, EQ, *, 1, 5;
//			endofverify;
//		endofval;
//	endofparam;
//end;

ctl S-PKTSIM.TIME_C_W_LOC, 0x00, ;
	param 1, u, 4, A, 4;
		val 0, 2047;
			verifytbl 1;
				verify 1, S-PKTSIM.TIME_C_W_LOC, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTSIM.TIME_C_L, 0x00, ;
	param 1, s, , S, ;
		sts 8;
			verifytbl 1;
				verify 1, S-PKTSIM.TIME_C_L, EQ, 8, 1, 5;
			endofverify;
		endofsts;
		sts 16;
			verifytbl 1;
				verify 1, S-PKTSIM.TIME_C_L, EQ, 16, 1, 5;
			endofverify;
		endofsts;
		sts 24;
			verifytbl 1;
				verify 1, S-PKTSIM.TIME_C_L, EQ, 24, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-PKTSIM.TIME_C_DEF, 0x00, ;
	param 1, u, 8, A, 8;
		val 0, 16777215;
			verifytbl 1;
				verify 1, S-PKTSIM.TIME_C_DEF, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

//ctl S-PKTSIM.VCDU_C_L, 0x00, ;
//	param 1, u, 2, A, 2;
//		val 0, 24;
//			verifytbl 1;
//				verify 1, S-PKTSIM.VCDU_C_L, EQ, *, 1, 5;
//			endofverify;
//		endofval;
//	endofparam;
//end;
//
//ctl S-PKTSIM.VCDU_C_DEF, 0x00, ;
//	param 1, u, 8, A, 8;
//		val 0, 16777215;
//			verifytbl 1;
//				verify 1, S-PKTSIM.VCDU_C_DEF, EQ, *, 1, 5;
//			endofverify;
//		endofval;
//	endofparam;
//end;
//
//ctl S-PKTSIM.SCND_C_W_LOC, 0x00, ;
//	param 1, u, 4, A, 4;
//		val 0, 2047;
//			verifytbl 1;
//				verify 1, S-PKTSIM.SCND_C_W_LOC, EQ, *, 1, 5;
//			endofverify;
//		endofval;
//	endofparam;
//end;
//
//ctl S-PKTSIM.SCND_C_L, 0x00, ;
//	param 1, s, , S, ;
//		sts 8;
//			verifytbl 1;
//				verify 1, S-PKTSIM.SCND_C_L, EQ, 8, 1, 5;
//			endofverify;
//		endofsts;
//		sts 16;
//			verifytbl 1;
//				verify 1, S-PKTSIM.SCND_C_L, EQ, 16, 1, 5;
//			endofverify;
//		endofsts;
//		sts 24;
//			verifytbl 1;
//				verify 1, S-PKTSIM.SCND_C_L, EQ, 24, 1, 5;
//			endofverify;
//		endofsts;
//	endofparam;
//end;
//
//ctl S-PKTSIM.SCND_C_DEF, 0x00, ;
//	param 1, u, 8, A, 8;
//		val 0, 16777215;
//			verifytbl 1;
//				verify 1, S-PKTSIM.SCND_C_DEF, EQ, *, 1, 5;
//			endofverify;
//		endofval;
//	endofparam;
//end;
//
//ctl S-PKTSIM.VCDU_ID1, 0x00, ;
//	param 1, x, 6, A, 6;
//		val 0X0000, 0XFFFF;
//			verifytbl 1;
//				verify 1, S-PKTSIM.VCDU_ID1, EQ, *, 1, 5;
//			endofverify;
//		endofval;
//	endofparam;
//end;
//
//ctl S-PKTSIM.PACKET1_1, 0x00, ;
//	param 1, x, 4, A, 4;
//		val 0X00, 0XFF;
//			verifytbl 1;
//				verify 1, S-PKTSIM.PACKET1_1, EQ, *, 1, 5;
//			endofverify;
//		endofval;
//	endofparam;
//end;

ctl S-PKTSIM.SET_FORM, 0x00, ;
	param 1, s, , S, ;
		sts ALL;
			verifytbl 1;
				verify 1, S-PKTSIM.SET_FORM, EQ, ALL, 1, 5;
			endofverify;
		endofsts;
		sts RANDOM;
			verifytbl 1;
				verify 1, S-PKTSIM.SET_FORM, EQ, RANDOM, 1, 5;
			endofverify;
		endofsts;
		sts UNIQUE;
			verifytbl 1;
				verify 1, S-PKTSIM.SET_FORM, EQ, UNIQUE, 1, 5;
			endofverify;
		endofsts;
		sts INC;
			verifytbl 1;
				verify 1, S-PKTSIM.SET_FORM, EQ, INC, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-PKTSIM.COMMUTAT, 0x00, ;
	param 1, s, , S, ;
		sts NORMAL;
			verifytbl 1;
				verify 1, S-PKTSIM.COMMUTAT, EQ, NORMAL, 1, 5;
			endofverify;
		endofsts;
		sts SUPER;
			verifytbl 1;
				verify 1, S-PKTSIM.COMMUTAT, EQ, SUPER, 1, 5;
			endofverify;
		endofsts;
		sts SUB;
			verifytbl 1;
				verify 1, S-PKTSIM.COMMUTAT, EQ, SUB, 1, 5;
			endofverify;
		endofsts;
		sts SUBSUPER;
			verifytbl 1;
				verify 1, S-PKTSIM.COMMUTAT, EQ, SUBSUPER, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-PKTSIM.COM_MULTI, 0x00, ;
	param 1, u, 4, A, 4;
		val 0, 10;
			verifytbl 1;
				verify 1, S-PKTSIM.COM_MULTI, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTSIM.COM_FRM_NO, 0x00, ;
	param 1, u, 4, A, 4;
		val 0, 255;
			verifytbl 1;
				verify 1, S-PKTSIM.COM_FRM_NO, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTSIM.COM_WORD_NO, 0x00, ;
	param 1, u, 4, A, 4;
		val 0, 2047;
			verifytbl 1;
				verify 1, S-PKTSIM.COM_WORD_NO, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-PKTSIM.COM_DATA, 0x00, ;
	param 1, x, 4, A, 4;
		val 0X00, 0XFF;
			verifytbl 1;
				verify 1, S-PKTSIM.COM_DATA, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

//ctl S-PKTSIM.SCND_C, 0x00, ;
//	param 1, s, , S, ;
//		sts ON;
//			verifytbl 1;
//				verify 1, S-PKTSIM.SCND_C, EQ, ON, 1, 5;
//			endofverify;
//		endofsts;
//		sts OFF;
//			verifytbl 1;
//				verify 1, S-PKTSIM.SCND_C, EQ, OFF, 1, 5;
//			endofverify;
//		endofsts;
//	endofparam;
//end;
 
ctl S-PKTSIM.TIME_C, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			verifytbl 1;
				verify 1, S-PKTSIM.TIME_C, EQ, ON, 1, 5;
			endofverify;
		endofsts;
		sts OFF;
			verifytbl 1;
				verify 1, S-PKTSIM.TIME_C, EQ, OFF, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

//ctl S-PKTSIM.WORD_C, 0x00, ;
//	param 1, s, , S, ;
//		sts ON;
//			verifytbl 1;
//				verify 1, S-PKTSIM.WORD_C, EQ, ON, 1, 5;
//			endofverify;
//		endofsts;
//		sts OFF;
//			verifytbl 1;
//				verify 1, S-PKTSIM.WORD_C, EQ, OFF, 1, 5;
//			endofverify;
//		endofsts;
//	endofparam;
//end;

ctl S-PKTSIM.CRC, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			verifytbl 1;
				verify 1, S-PKTSIM.CRC, EQ, ON, 1, 5;
			endofverify;
		endofsts;
		sts OFF;
			verifytbl 1;
				verify 1, S-PKTSIM.CRC, EQ, OFF, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

//ctl S-PKTSIM.PACKET1_1_W, 0x00, ;
//	param 1, u, 4, A, 4;
//		val 0, 2047;
//			verifytbl 1;
//				verify 1, S-PKTSIM.PACKET1_1_W, EQ, *, 1, 5;
//			endofverify;
//		endofval;
//	endofparam;
//end;
//
//ctl S-PKTSIM.PACKET1_2, 0x00, ;
//	param 1, x, 4, A, 4;
//		val 0X00, 0XFF;
//			verifytbl 1;
//				verify 1, S-PKTSIM.PACKET1_2, EQ, *, 1, 5;
//			endofverify;
//		endofval;
//	endofparam;
//end;
//
//ctl S-PKTSIM.PACKET1_2_W, 0x00, ;
//	param 1, u, 4, A, 4;
//		val 0, 2047;
//			verifytbl 1;
//				verify 1, S-PKTSIM.PACKET1_2_W, EQ, *, 1, 5;
//			endofverify;
//		endofval;
//	endofparam;
//end;
//
//ctl S-PKTSIM.VCDU_ID2, 0x00, ;
//	param 1, x, 6, A, 6;
//		val 0X0000, 0XFFFF;
//			verifytbl 1;
//				verify 1, S-PKTSIM.VCDU_ID2, EQ, *, 1, 5;
//			endofverify;
//		endofval;
//	endofparam;
//end;
//
//ctl S-PKTSIM.PACKET2_1, 0x00, ;
//	param 1, x, 4, A, 4;
//		val 0X00, 0XFF;
//			verifytbl 1;
//				verify 1, S-PKTSIM.PACKET2_1, EQ, *, 1, 5;
//			endofverify;
//		endofval;
//	endofparam;
//end;
//
//ctl S-PKTSIM.PACKET2_1_W, 0x00, ;
//	param 1, u, 4, A, 4;
//		val 0, 2047;
//			verifytbl 1;
//				verify 1, S-PKTSIM.PACKET2_1_W, EQ, *, 1, 5;
//			endofverify;
//		endofval;
//	endofparam;
//end;
//
//ctl S-PKTSIM.PACKET2_2, 0x00, ;
//	param 1, x, 4, A, 4;
//		val 0X00, 0XFF;
//			verifytbl 1;
//				verify 1, S-PKTSIM.PACKET2_2, EQ, *, 1, 5;
//			endofverify;
//		endofval;
//	endofparam;
//end;
//
//ctl S-PKTSIM.PACKET2_2_W, 0x00, ;
//	param 1, u, 4, A, 4;
//		val 0, 2047;
//			verifytbl 1;
//				verify 1, S-PKTSIM.PACKET2_2_W, EQ, *, 1, 5;
//			endofverify;
//		endofval;
//	endofparam;
//end;
//
//ctl S-PKTSIM.VCDU_ID2_ON, 0x00, ;
//	param 1, s, , S, ;
//		sts ON;
//			verifytbl 1;
//				verify 1, S-PKTSIM.VCDU_ID2_ON, EQ, ON, 1, 5;
//			endofverify;
//		endofsts;
//		sts OFF;
//			verifytbl 1;
//				verify 1, S-PKTSIM.VCDU_ID2_ON, EQ, OFF, 1, 5;
//			endofverify;
//		endofsts;
//	endofparam;
//e//nd;
//
//ctl S-PKTSIM.PACKET2_2_ON, 0x00, ;
//	param 1, s, , S, ;
//		sts ON;
//			verifytbl 1;
//				verify 1, S-PKTSIM.PACKET2_2_ON, EQ, ON, 1, 5;
//			endofverify;
//		endofsts;
//		sts OFF;
//			verifytbl 1;
//				verify 1, S-PKTSIM.PACKET2_2_ON, EQ, OFF, 1, 5;
//			endofverify;
//		endofsts;
//	endofparam;
//end;
//
//ctl S-PKTSIM.PACKET1_2_ON, 0x00, ;
//	param 1, s, , S, ;
//		sts ON;
//			verifytbl 1;
//				verify 1, S-PKTSIM.PACKET1_2_ON, EQ, ON, 1, 5;
//			endofverify;
//		endofsts;
//		sts OFF;
//			verifytbl 1;
//				verify 1, S-PKTSIM.PACKET1_2_ON, EQ, OFF, 1, 5;
//			endofverify;
//		endofsts;
//	endofparam;
//end;
/* S-TRKRX  */
/* 0xbb=187 */
 //----------------------------------------------------------------------
 // データベース名    ：内之浦局 S-TRKRX制御
 // ファイル名        ：s-trkrx.db
 // 作成日            ：2017/02/10
 // 履歴              ：Ver2.0.0 2017/02/14 as-04 USC/UDSC送受信設備更新により、不要となった信号を削除。
 //----------------------------------------------------------------------

/* (1) CONT MODE */
ctl S-TRKRX.CONT_MODE, 0x00, ;
    param 1, s, , S, ;
        sts REMOTE;
            verifytbl 1;
                verify 1, S-TRKRX.CONT_MODE, EQ, REMOTE, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;


/* (2) CARRIER PLL REJECT */
ctl S-TRKRX.CARR_PLL_REJECT, 0x00, ;
    param 1, s, , S, ;
        sts REJECT;
//        noprm;
//        endofnoprm;
        endofsts;
    endofparam;
end;


/* (3) MODULATION FORMAT */
ctl S-TRKRX.MOD_FORMAT, 0x00, ;
    param 1, s, , S, ;
        sts PCM-QPSK;
            verifytbl 1;
                verify 1, S-TRKRX.MOD_FORMAT, EQ, PCM-QPSK, 1, 6;
            endofverify;
        endofsts;
        sts PCM-BPSK;
            verifytbl 1;
                verify 1, S-TRKRX.MOD_FORMAT, EQ, PCM-BPSK, 1, 6;
            endofverify;
        endofsts;
        sts PCM-PSK-PM;
            verifytbl 1;
                verify 1, S-TRKRX.MOD_FORMAT, EQ, PCM-PSK-PM, 1, 6;
            endofverify;
        endofsts;
        sts PCM-PM;
            verifytbl 1;
                verify 1, S-TRKRX.MOD_FORMAT, EQ, PCM-PM, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* (4) CARRIER LBW */
ctl S-TRKRX.CARR_LBW, 0x00, ;
    param 1, s, , S, ;
        sts 1kHz;
//            prechktbl 1+2;
//                prechk 1, S-TRKRX.MOD_FORMAT, EQ, PCM-PSK-PM, 3;
//                prechk 2, S-TRKRX.MOD_FORMAT, EQ, PCM-PM, 3;
//            endofprechk;
            verifytbl 1;
                verify 1, S-TRKRX.CARR_LBW, EQ, 1kHz, 1, 10;
            endofverify;
        endofsts;
        sts 300Hz;
//            prechktbl 1+2;
//                prechk 1, S-TRKRX.MOD_FORMAT, EQ, PCM-PSK-PM, 3;
//                prechk 2, S-TRKRX.MOD_FORMAT, EQ, PCM-PM, 3;
//            endofprechk;
            verifytbl 1;
                verify 1, S-TRKRX.CARR_LBW, EQ, 300Hz, 1, 10;
            endofverify;
        endofsts;
        sts 100Hz;
//            prechktbl 1+2;
//                prechk 1, S-TRKRX.MOD_FORMAT, EQ, PCM-PSK-PM, 3;
//                prechk 2, S-TRKRX.MOD_FORMAT, EQ, PCM-PM, 3;
//            endofprechk;
            verifytbl 1;
                verify 1, S-TRKRX.CARR_LBW, EQ, 100Hz, 1, 10;
            endofverify;
        endofsts;
        sts 30Hz;
//            prechktbl 1+2;
//                prechk 1, S-TRKRX.MOD_FORMAT, EQ, PCM-PSK-PM, 3;
//                prechk 2, S-TRKRX.MOD_FORMAT, EQ, PCM-PM, 3;
//            endofprechk;
            verifytbl 1;
                verify 1, S-TRKRX.CARR_LBW, EQ, 30Hz, 1, 10;
            endofverify;
        endofsts;
        sts WIDE;
//            prechktbl 1+2;
//                prechk 1, S-TRKRX.MOD_FORMAT, EQ, PCM-QPSK, 3;
//                prechk 2, S-TRKRX.MOD_FORMAT, EQ, PCM-BPSK, 3;
//            endofprechk;
            verifytbl 1;
                verify 1, S-TRKRX.CARR_LBW, EQ, *, 1, 6;
            endofverify;
        endofsts;
        sts MEDIUM;
//            prechktbl 1+2;
//                prechk 1, S-TRKRX.MOD_FORMAT, EQ, PCM-QPSK, 3;
//                prechk 2, S-TRKRX.MOD_FORMAT, EQ, PCM-BPSK, 3;
//            endofprechk;
            verifytbl 1;
                verify 1, S-TRKRX.CARR_LBW, EQ, *, 1, 6;
            endofverify;
        endofsts;
        sts NARROW;
//            prechktbl 1+2;
//                prechk 1, S-TRKRX.MOD_FORMAT, EQ, PCM-QPSK, 3;
//                prechk 2, S-TRKRX.MOD_FORMAT, EQ, PCM-BPSK, 3;
//            endofprechk;
            verifytbl 1;
                verify 1, S-TRKRX.CARR_LBW, EQ, *, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* (5) AGC LBW */
ctl S-TRKRX.AGC_LBW, 0x00, ; /* _BW(h10.9.17) */
    param 1, s, , S, ;
        sts 100Hz;
//            prechktbl 1+2;
//                prechk 1, S-TRKRX.MOD_FORMAT, EQ, PCM-PSK-PM, 3;
//                prechk 2, S-TRKRX.MOD_FORMAT, EQ, PCM-PM, 3;
//            endofprechk;
            verifytbl 1;
                verify 1, S-TRKRX.AGC_LBW, EQ, 100Hz, 1, 5;
            endofverify;
        endofsts;
        sts 30Hz;
//            prechktbl 1+2;
//                prechk 1, S-TRKRX.MOD_FORMAT, EQ, PCM-PSK-PM, 3;
//                prechk 2, S-TRKRX.MOD_FORMAT, EQ, PCM-PM, 3;
//            endofprechk;
            verifytbl 1;
                verify 1, S-TRKRX.AGC_LBW, EQ, 30Hz, 1, 5;
            endofverify;
        endofsts;
        sts 10Hz;
//            prechktbl 1+2;
//                prechk 1, S-TRKRX.MOD_FORMAT, EQ, PCM-PSK-PM, 3;
//                prechk 2, S-TRKRX.MOD_FORMAT, EQ, PCM-PM, 3;
//            endofprechk;
            verifytbl 1;
                verify 1, S-TRKRX.AGC_LBW, EQ, 10Hz, 1, 5;
            endofverify;
        endofsts;
        sts 3Hz;
//            prechktbl 1+2;
//                prechk 1, S-TRKRX.MOD_FORMAT, EQ, PCM-PSK-PM, 3;
//                prechk 2, S-TRKRX.MOD_FORMAT, EQ, PCM-PM, 3;
//            endofprechk;
            verifytbl 1;
                verify 1, S-TRKRX.AGC_LBW, EQ, 3Hz, 1, 5;
            endofverify;
        endofsts;
        sts WIDE;
//            prechktbl 1+2;
//                prechk 1, S-TRKRX.MOD_FORMAT, EQ, PCM-QPSK, 3;
//                prechk 2, S-TRKRX.MOD_FORMAT, EQ, PCM-BPSK, 3;
//            endofprechk;
            verifytbl 1;
                verify 1, S-TRKRX.AGC_LBW, EQ, *, 1, 6;
            endofverify;
        endofsts;
        sts MEDIUM;
//            prechktbl 1+2;
//                prechk 1, S-TRKRX.MOD_FORMAT, EQ, PCM-QPSK, 3;
//                prechk 2, S-TRKRX.MOD_FORMAT, EQ, PCM-BPSK, 3;
//            endofprechk;
            verifytbl 1;
                verify 1, S-TRKRX.AGC_LBW, EQ, *, 1, 6;
            endofverify;
        endofsts;
        sts NARROW;
 //           prechktbl 1+2;
 //               prechk 1, S-TRKRX.MOD_FORMAT, EQ, PCM-QPSK, 3;
 //               prechk 2, S-TRKRX.MOD_FORMAT, EQ, PCM-BPSK, 3;
 //           endofprechk;
            verifytbl 1;
                verify 1, S-TRKRX.AGC_LBW, EQ, *, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;
/* (6) VITERBI */
ctl S-TRKRX.VITERBI, 0x00, ;
    param 1, s, , S, ;
        sts ON(ESA);
            prechktbl 1;
                prechk 1, S-TRKRX.DIFF_DECODING, EQ, OFF, 3;
            endofprechk;
            verifytbl 1;
                verify 1, S-TRKRX.VITERBI, EQ, ON(ESA), 1, 6;
            endofverify;
        endofsts;
        sts ON(JPL);
            prechktbl 1;
                prechk 1, S-TRKRX.DIFF_DECODING, EQ, OFF, 3;
            endofprechk;
            verifytbl 1;
                verify 1, S-TRKRX.VITERBI, EQ, ON(JPL), 1, 6;
            endofverify;
        endofsts;
        sts ON(CCSDS);
            prechktbl 1;
                prechk 1, S-TRKRX.DIFF_DECODING, EQ, OFF, 3;
            endofprechk;
            verifytbl 1;
                verify 1, S-TRKRX.VITERBI, EQ, ON(CCSDS), 1, 6;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, S-TRKRX.VITERBI, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* (7) DIFFERENTIAL DECODING */
ctl S-TRKRX.DIFF_DECODING, 0x00, ;
    param 1, s, , S, ;
        sts ON;
            prechktbl 1*2;
                prechk 1, S-TRKRX.MOD_FORMAT, EQ, PCM-QPSK, 3;
                prechk 2, S-TRKRX.VITERBI, EQ, OFF, 3;
            endofprechk;
            verifytbl 1;
                verify 1, S-TRKRX.DIFF_DECODING, EQ, ON, 1, 6;
            endofverify;
        endofsts;
        sts OFF;
          verifytbl 1;
              verify 1, S-TRKRX.DIFF_DECODING, EQ, OFF, 1, 6;
          endofverify;
        endofsts;
    endofparam;
end;

/* (8) FILTER STYLE */
ctl S-TRKRX.FILTER_STYLE, 0x00, ;
     param 1, s, , S, ;
        sts ROOT_NYQ;
            verifytbl 1;
                verify 1, S-TRKRX.FILTER_STYLE, EQ, ROOT_NYQ, 1, 6;
            endofverify;
        endofsts;
        sts LINEAR_PHASE;
            verifytbl 1;
                verify 1, S-TRKRX.FILTER_STYLE, EQ, LINEAR_PHASE, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* (9) DATA MODE */
ctl S-TRKRX.DATA_MODE, 0x00, ;
    param 1, s, , S, ;
        sts BIPH_S;
//            prechktbl 1;
//                prechk 1, S-TRKRX.MOD_FORMAT, NE, PCM-QPSK, 3;
//            endofprechk;
            verifytbl 1;
                verify 1, S-TRKRX.DATA_MODE, EQ, BIPH_S, 1, 5;
            endofverify;
        endofsts;
        sts BIPH_M;
//            prechktbl 1;
//                prechk 1, S-TRKRX.MOD_FORMAT, NE, PCM-QPSK, 3;
//            endofprechk;
            verifytbl 1;
                verify 1, S-TRKRX.DATA_MODE, EQ, BIPH_M, 1, 5;
            endofverify;
        endofsts;
        sts BIPH_L;
//            prechktbl 1;
//                prechk 1, S-TRKRX.MOD_FORMAT, NE, PCM-QPSK, 3;
//            endofprechk;
            verifytbl 1;
                verify 1, S-TRKRX.DATA_MODE, EQ, BIPH_L, 1, 5;
            endofverify;
        endofsts;
        sts NRZ_S;
            verifytbl 1;
                verify 1, S-TRKRX.DATA_MODE, EQ, NRZ_S, 1, 5;
            endofverify;
        endofsts;
        sts NRZ_M;
            verifytbl 1;
                verify 1, S-TRKRX.DATA_MODE, EQ, NRZ_M, 1, 5;
            endofverify;
        endofsts;
        sts NRZ_L;
            verifytbl 1;
                verify 1, S-TRKRX.DATA_MODE, EQ, NRZ_L, 1, 5;
            endofverify;
        endofsts;
    endofparam;
end;

/* (10) LEAP ON/OFF, LEAP YEAR, LEAP SECOND */
ctl S-TRKRX.LEAP_SEC, 0x00, ;
     param 1, s, , S, ;
        sts ON;
            verifytbl 1;
                verify 1, S-TRKRX.LEAP_SEC, EQ, ON, 1, 6;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, S-TRKRX.LEAP_SEC, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

ctl S-TRKRX.LEAP_YEAR, 0x00, ;
     param 1, s, , S, ;
        sts ON;
            verifytbl 1;
                verify 1, S-TRKRX.LEAP_YEAR, EQ, ON, 1, 6;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, S-TRKRX.LEAP_YEAR, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* 0h｡ｧｱｼﾇｯOFF,ｱｼﾉﾃOFF 1h : ｱｼﾇｯON,ｱｼﾉﾃOFF 2h : ｱｼﾇｯOFF,ｱｼﾉﾃON 3h : ｱｼﾇｯON,ｱｼﾉﾃON */
ctl S-TRKRX.LEAP_YEAR/SECOND, 0x00, ;
    param 1, s, , S, ;
      sts Y:OFF/S:OFF;
        verifytbl 1;
           verify 1, S-TRKRX.LEAP_YEAR/SECOND, EQ, Y:OFF/S:OFF, 1, 6;
        endofverify;
      endofsts;
      sts Y:ON/S:OFF;
        verifytbl 1;
           verify 1, S-TRKRX.LEAP_YEAR/SECOND, EQ, Y:ON/S:OFF, 1, 6;
        endofverify;
      endofsts;
      sts Y:OFF/S:ON;
        verifytbl 1;
           verify 1, S-TRKRX.LEAP_YEAR/SECOND, EQ, Y:OFF/S:ON, 1, 6;
        endofverify;
      endofsts;
      sts Y:ON/S:ON;
        verifytbl 1;
           verify 1, S-TRKRX.LEAP_YEAR/SECOND, EQ, Y:ON/S:ON, 1, 6;
        endofverify;
      endofsts;
    endofparam;
end;

/* (11) SYMBOL LBW */
ctl S-TRKRX.SYMBOL_LBW, 0x00, ; /* _BW(h10.9.17) */
    param 1, s, , S, ;
        sts NARROW;
            verifytbl 1;
                verify 1, S-TRKRX.SYMBOL_LBW, EQ, NARROW, 1, 5;
            endofverify;
        endofsts;
        sts MEDIUM;
            verifytbl 1;
                verify 1, S-TRKRX.SYMBOL_LBW, EQ, MEDIUM, 1, 5;
            endofverify;
        endofsts;
        sts WIDE;
            verifytbl 1;
                verify 1, S-TRKRX.SYMBOL_LBW, EQ, WIDE, 1, 5;
            endofverify;
        endofsts;
    endofparam;
end;

/* (12) ANTENNA SEL */
/* N/A */

/* (13) MOD SEL */
ctl S-TRKRX.MOD_SEL, 0x00, ;
     param 1, s, , S, ;
        sts MODULATION;
            verifytbl 1;
                verify 1, S-TRKRX.MOD_SEL, EQ, MODULATION, 1, 6;
            endofverify;
        endofsts;
        sts CONTINUOUS;
            verifytbl 1;
                verify 1, S-TRKRX.MOD_SEL, EQ, CONTINUOUS, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* (14) ADJUST MODE SELECT */
ctl S-TRKRX.ADJUST_MODE_SEL, 0x00, ;
     param 1, s, , S, ;
        sts ADJUST;
            verifytbl 1;
                verify 1, S-TRKRX.ADJUST_MODE_STS, EQ, ADJUST, 1, 6;
            endofverify;
        endofsts;
        sts NORMAL;
            verifytbl 1;
                verify 1, S-TRKRX.ADJUST_MODE_STS, EQ, NORMAL, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* (15) ADJUST MODE STATUS */
/* -> MON only */

/* (16) ANGLE SAVE CMD */
ctl S-TRKRX.ANGLE_SAVE_CMD, 0x00, ;
    param 1, s, , S, ;
        sts SAVE;
//        noprm;
            prechktbl 1;
                prechk 1, S-TRKRX.ADJUST_MODE_STS, EQ, ADJUST, 3;
            endofprechk;
//        endofnoprm;
        endofsts;
	endofparam;
end;

/* (17) RESERVE */
/* (18) RESERVE */
/* (19) RESERVE */
/* (20) RESERVE */
/* (21) RESERVE */
/* (22) RESERVE */
/* (23) RESERVE */

/* (24) RECEIVE MODE */
/* -> MON only */

/* (25) CARR LOCK / LEVEL GOOD */
/* -> MON only */

/* (26) DIVERSITY MODE */
ctl S-TRKRX.DIVERSITY_MODE, 0x00, ;
    param 1, s, , S, ;
        sts AUTO;
            verifytbl 1;
                verify 1, S-TRKRX.DIVERSITY_MODE, EQ, AUTO, 1, 5;
            endofverify;
        endofsts;
        sts Ach;
            verifytbl 1;
                verify 1, S-TRKRX.DIVERSITY_MODE, EQ, Ach, 1, 5;
            endofverify;
        endofsts;
        sts Bch;
            verifytbl 1;
                verify 1, S-TRKRX.DIVERSITY_MODE, EQ, Bch, 1, 5;
            endofverify;
        endofsts;
    endofparam;
end;

/* (27) RESERVE */
/* (28) RESERVE */

/* (29) REF 10M LOCK STS */
/* -> MON only */

/* (30) PWB STATUS / PWB RESET */
ctl S-TRKRX.PWB_RESET, 0x00, ;
    param 1, s, , S, ;
        sts RESET;
//        noprm;
//        endofnoprm;
        endofsts;
    endofparam;
end;

/* (31) RESERVE */

/* (32) OPERATION */
ctl S-TRKRX.OPERATION, 0x00, ;
     param 1, s, , S, ;
        sts NORMAL;
            verifytbl 1;
                verify 1, S-TRKRX.OPERATION, EQ, NORMAL, 1, 6;
            endofverify;
        endofsts;
        sts CAL;
            verifytbl 1;
                verify 1, S-TRKRX.OPERATION, EQ, CAL, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* (33) TIME TAG (H) */
/* N/A */

/* (34) TIME TAG (L) */
/* N/A */

/* (35) RESERVE */
/* (36) RESERVE */
/* (37) RESERVE */

/* (38) TLM MOD INDEX */
ctl S-TRKRX.TLM_MOD_INDEX, 0x00, ;
    param 1, f, 1.2, A, 1.2;
        val 0.20, 2.00;
            verifytbl 1;
                verify 1, S-TRKRX.TLM_MOD_INDEX, EQ, *, 1, 5;
            endofverify;
        endofval;
    endofparam;
end;

/* (39) BIT RATE (H) */
/* (40) BIT BATE (L) */
ctl S-TRKRX.BIT_RATE, 0x00, ;
    param 1, f, 9.3, A, 9.3;
        val 100.000, 256000000.000;
            verifytbl 1;
                verify 1, S-TRKRX.BIT_RATE, EQ, *, 1, 5;
            endofverify;
        endofval;
    endofparam;
end;

/* (41) SUB CARRIER (H) */
/* (42) SUB CARRIER (L) */
ctl S-TRKRX.SUB_CARR, 0x00, ;
    param 1, f, 7.3, A, 7.3;
        val 8000.000, 2000000.000;
            verifytbl 1;
                verify 1, S-TRKRX.SUB_CARR, EQ, *, 1, 5;
            endofverify;
        endofval;
    endofparam;
end;

/* (43) IF CENTER FREQ */
ctl S-TRKRX.IF_CENTER_FREQ, 0x00, ;
    param 1, f, 2.2, A, 2.2;
        val 66.00, 74.00;
            verifytbl 1;
                verify 1, S-TRKRX.IF_CENTER_FREQ, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* (44) AZ SENSITIVITY / EL SENSITIVITY */
ctl S-TRKRX.AZ_SENSITIVITY, 0x00, ;
    param 1, f, 2.1, A, 2.1;
        val -5.0, 5.0;
            verifytbl 1;
                verify 1, S-TRKRX.AZ_SENSITIVITY, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

ctl S-TRKRX.EL_SENSITIVITY, 0x00, ;
    param 1, f, 2.1, A, 2.1;
        val -5.0, 5.0;
            verifytbl 1;
                verify 1, S-TRKRX.EL_SENSITIVITY, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* (45) Ach ANGLE OFFSET */
ctl S-TRKRX.ANGLE_OFFSET_ACH, 0x00, ;
    param 1, f, 3.1, A, 3.1;
        val 0.0, 359.9;
            verifytbl 1;
                verify 1, S-TRKRX.ANGLE_OFFSET_ACH, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* (46) Bch ANGLE OFFSET */
ctl S-TRKRX.ANGLE_OFFSET_BCH, 0x00, ;
    param 1, f, 3.1, A, 3.1;
        val 0.0, 359.9;
            verifytbl 1;
                verify 1, S-TRKRX.ANGLE_OFFSET_BCH, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;


/* (47) DOWNLINK FREQ */
ctl S-TRKRX.DOWN_FREQ, 0x00, PREVERIFY_OFF;
    param 1, f, 4.1, A, 4.1;
        val 2200.0, 2300.0;
            verifytbl 1;
                verify 1, S-TRKRX.DOWN_FREQ, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* (48) RESERVE */
/* (49) RESERVE */
/* (50) RESERVE */
/* (51) RESERVE */

/* (52) AZ ERROR */
/* -> MON only */

/* (53) EL ERROR */
/* -> MON only */

/* (54) Ach INPUT LEVEL */
/* -> MON only */

/* (55) Bch INPUT LEVEL */
/* -> MON only */

/* (56) FREQUENCY DEVIATION */
/* -> MON only */

/* (57) LEVEL GOOD THRESHOLD */
ctl S-TRKRX.THRESHOLD, 0x00, ;
    param 1, f, 3.1, A, 3.1;
        val -60.0, -10.0;
            prechktbl 1;
                prechk 1, S-TRKRX.RCV_MODE, EQ, HIGH_RATE, 3;
            endofprechk;
            verifytbl 1;
                verify 1, S-TRKRX.THRESHOLD, EQ, *, 1, 5;
            endofverify;
        endofval;
    endofparam;
end;

/* (58)~(70) RESERVE */

/*** for RFC ***/
ctl S-TRKRX.PREDGET, 0x00, ;
    param 1, P, 14, Z, ;
        sts *;
        endofsts;
    endofparam;
end;

ctl S-TRKRX.1_2WAY_MODE, 0x00, ;
    param 1, s, , S, ;
        sts 1WAY;
            verifytbl 1;
                verify 1, S-TRKRX.1_2WAY_MODE, EQ, 1WAY, 1, 5;
            endofverify;
        endofsts;
        sts 2WAY;
            verifytbl 1;
                verify 1, S-TRKRX.1_2WAY_MODE, EQ, 2WAY, 1, 5;
            endofverify;
        endofsts;
//      sts DUP;
//          verifytbl 1;
//              verify 1, S-TRKRX.1_2WAY_MODE, EQ, DUP,  1, 5;
//          endofverify;
//      endofsts;
    endofparam; 
end;

ctl S-TRKRX.TIME_OFFSET, 0x00, ;
    param 1, s, 6, Z, ;
        sts *;
            verifytbl 1;
                verify 1, S-TRKRX.TIME_OFFSET, EQ, *, 1, 5;
            endofverify;
        endofsts;
    endofparam;
end;

ctl S-TRKRX.FREQ_OFFSET, 0x00, ;
    param 1, d, 9, B, 9;
        val -10000000, +10000000;
            verifytbl 1;
                verify 1, S-TRKRX.FREQ_OFFSET, EQ, *, 1, 5;
            endofverify;
        endofval;
    endofparam;
end;

ctl S-TRKRX.DOPP_FREQ, 0x00, ;
    param 1, d, 9, B, 9;
        val -10000000, +10000000; 
            verifytbl 1;
                verify 1, S-TRKRX.DOPP_FREQ, EQ, *, 1, 5;
            endofverify;
        endofval;
    endofparam;
end;

ctl S-TRKRX.AID_MODE, 0x00, ;
    param 1, s, , S, ;
        sts ON;
            verifytbl 1;
                verify 1, S-TRKRX.AID_MODE, EQ, ON, 1, 5;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, S-TRKRX.AID_MODE, EQ, OFF, 1, 5;
            endofverify;
        endofsts;
    endofparam;
end;

/***********************/
/*** THE END OF FILE ***/
/***********************/
/* S-TXSYN (CONT)  */

ctl S-TXSYN.STT_FREQ, 0x00, ;
	param 1, f, 11.6, B, 11.6;
		val 2025000000.000000, 2120000000.000000;
			prechktbl 1;
				prechk 1, S-TXSYN.HPACH_TUNE, EQ, OFF, 3;
			endofprechk;
			verifytbl 1;
				verify 1, S-TXSYN.STT_FREQ, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-TXSYN.RAMP_RATE, 0x00, ;
	param 1, f, 7.6, B, 7.6;
		val -99900.000000, +99900.000000;
			verifytbl 1;
				verify 1, S-TXSYN.RAMP_RATE, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-TXSYN.1WAY/2WAY, 0x00, ;
	param 1, s, , S, ;
		sts 1WAY;
			verifytbl 1;
				verify 1, S-TXSYN.1WAY/2WAY, EQ, 1WAY, 1, 5;
			endofverify;
		endofsts;
		sts 2WAY;
			verifytbl 1;
				verify 1, S-TXSYN.1WAY/2WAY, EQ, 2WAY, 1, 5;
			endofverify;
		endofsts;
		sts DUP;
			verifytbl 1;
				verify 1, S-TXSYN.1WAY/2WAY, EQ, DUP,  1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-TXSYN.TIME_OFFSET, 0x00, ;
	param 1, s, 6, Z, ;
		sts *;
			verifytbl 1;
				verify 1, S-TXSYN.TIME_OFFSET, EQ, *, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-TXSYN.FREQ_OFFSET, 0x00, ;
	param 1, f, 7.6, B, 7.6;
		val -999999.000000, +999999.000000;
			verifytbl 1;
				verify 1, S-TXSYN.FREQ_OFFSET, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-TXSYN.SWEEP_CONT, 0x00, ;
	param 1, s, , S, ;
		sts STOP;
			verifytbl 1;
				verify 1, S-TXSYN.SWEEP_CONT, EQ, STOP, 1, 5;
			endofverify;
		endofsts;
		sts INC;
			verifytbl 1;
				verify 1, S-TXSYN.SWEEP_CONT, EQ, INC, 1, 5;
			endofverify;
		endofsts;
		sts DEC;
			verifytbl 1;
				verify 1, S-TXSYN.SWEEP_CONT, EQ, DEC, 1, 5;
			endofverify;
		endofsts;
		sts INC+DEC;
			verifytbl 1;
				verify 1, S-TXSYN.SWEEP_CONT, EQ, INC+DEC, 1, 5;
			endofverify;
		endofsts;
		sts DEC+INC;
			verifytbl 1;
				verify 1, S-TXSYN.SWEEP_CONT, EQ, DEC+INC, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-TXSYN.SWEEP_RATE, 0x00, ;
	param 1, f, 6.1, B, 6.1;
		val 0.0, 99900.0;
			verifytbl 1;
				verify 1, S-TXSYN.SWEEP_RATE, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-TXSYN.SWEEP_WIDTH, 0x00, ;
	param 1, u, 6, B, 6;
		val 0, 999999;
			verifytbl 1;
				verify 1, S-TXSYN.SWEEP_WIDTH, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-TXSYN.RATE_AID, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			verifytbl 1;
				verify 1, S-TXSYN.RATE_AID, EQ, ON, 1, 5;
			endofverify;
		endofsts;
		sts OFF;
			verifytbl 1;
				verify 1, S-TXSYN.RATE_AID, EQ, OFF, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-TXSYN.PREDGET, 0x00, ;
	param 1, P, 14, Z, ;
		sts *;
			prechktbl 1;
				prechk 1, S-TXSYN.HPACH_TUNE, EQ, OFF, 3;
			endofprechk;
		endofsts;
	endofparam;
end;
/* SS-RARR (CONT) */

ctl SS-RARR.1WAY/2WAY, 0x00, ;
	param 1, s, , S, ;
		sts 1WAY;
			verifytbl 1;
				verify 1, SS-RARR.1WAY/2WAY, EQ, 1WAY, 1, 5;
			endofverify;
		endofsts;
		sts 2WAY;
			verifytbl 1;
				verify 1, SS-RARR.1WAY/2WAY, EQ, 2WAY, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl SS-RARR.RNG_CONT, 0x00, ;
	param 1, s, , S, ;
		sts START;
			verifytbl 1;
				verify 1, SS-RARR.RNG_CONT, EQ, START, 1, 5;
			endofverify;
		endofsts;
		sts STOP;
			verifytbl 1;
				verify 1, SS-RARR.RNG_CONT, EQ, STOP, 1, 3600;
			endofverify;
		endofsts;
	endofparam;
end;

ctl SS-RARR.REC/SIN, 0x00, ;
	param 1, s, , S, ;
		sts RECT;
			verifytbl 1;
				verify 1, SS-RARR.REC/SIN, EQ, RECT, 1, 5;
			endofverify;
		endofsts;
		sts SIN;
			verifytbl 1;
				verify 1, SS-RARR.REC/SIN, EQ, SIN, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl SS-RARR.DEEP_NEAR, 0x00, ;
	param 1, s, , S, ;
		sts DEEP;
			verifytbl 1;
				verify 1, SS-RARR.DEEP_NEAR, EQ, DEEP, 1, 5;
			endofverify;
		endofsts;
		sts NEAR;
			verifytbl 1;
				verify 1, SS-RARR.DEEP_NEAR, EQ, NEAR, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl SS-RARR.AID_MODE, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			verifytbl 1;
				verify 1, SS-RARR.AID_MODE, EQ, ON, 1, 5;
			endofverify;
		endofsts;
		sts OFF;
			verifytbl 1;
				verify 1, SS-RARR.AID_MODE, EQ, OFF, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl SS-RARR.SAMPLING, 0x00, ;
	param 1, s, , S, ;
		sts 1/60;
			verifytbl 1;
				verify 1, SS-RARR.SAMPLING, EQ, 1/60, 1, 5;
			endofverify;
		endofsts;
		sts 1/20;
			verifytbl 1;
				verify 1, SS-RARR.SAMPLING, EQ, 1/20, 1, 5;
			endofverify;
		endofsts;
		sts 1/10;
			verifytbl 1;
				verify 1, SS-RARR.SAMPLING, EQ, 1/10, 1, 5;
			endofverify;
		endofsts;
		sts 1/2;
			verifytbl 1;
				verify 1, SS-RARR.SAMPLING, EQ, 1/2, 1, 5;
			endofverify;
		endofsts;
		sts 1/1;
			verifytbl 1;
				verify 1, SS-RARR.SAMPLING, EQ, 1/1, 1, 5; /* 1 -> 1/1 (h10.11.22)Yoshikado */
			endofverify;
		endofsts;
	endofparam;
end;

ctl SS-RARR.TONE_FREQ, 0x00, ;
	param 1, s, , S, ;
		sts Fup/2^14;
			verifytbl 1;
				verify 1, SS-RARR.TONE_FREQ, EQ, Fup/2^14, 1, 5;
			endofverify;
		endofsts;
		sts Fup/2^13;
			verifytbl 1;
				verify 1, SS-RARR.TONE_FREQ, EQ, Fup/2^13, 1, 5;
			endofverify;
		endofsts;
		sts Fup/2^12;
			verifytbl 1;
				verify 1, SS-RARR.TONE_FREQ, EQ, Fup/2^12, 1, 5;
			endofverify;
		endofsts;
		sts Fup/2^11;
			verifytbl 1;
				verify 1, SS-RARR.TONE_FREQ, EQ, Fup/2^11, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl SS-RARR.LOOP_BAND_WIDE, 0x00, ;
	param 1, s, , S, ;
		sts NARROW;
			verifytbl 1;
				verify 1, SS-RARR.LOOP_BAND_WIDE, EQ, NARROW, 1, 5;
			endofverify;
		endofsts;
		sts MEDIUM;
			verifytbl 1;
				verify 1, SS-RARR.LOOP_BAND_WIDE, EQ, MEDIUM, 1, 5;
			endofverify;
		endofsts;
		sts WIDE;
			verifytbl 1;
				verify 1, SS-RARR.LOOP_BAND_WIDE, EQ, WIDE, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl SS-RARR.RNG_DATA_NUM, 0x00, ;
	param 1, u, 2, B, 2;
		val 1, 99;
			verifytbl 1;
				verify 1, SS-RARR.RNG_DATA_NUM, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl SS-RARR.INTEG_TIME1, 0x00, ;
	param 1, u, 4, B, 4;
		val 1, 9999;
			verifytbl 1;
				verify 1, SS-RARR.INTEG_TIME1, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl SS-RARR.INTEG_TIME2, 0x00, ;
	param 1, u, 4, B, 4;
		val 1, 9999;
			verifytbl 1;
				verify 1, SS-RARR.INTEG_TIME2, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl SS-RARR.DRVID_NUM, 0x00, ;
	param 1, u, 2, B, 2;
		val 0, 99;
			verifytbl 1;
				verify 1, SS-RARR.DRVID_NUM, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl SS-RARR.DRVID_INTEG_TIME, 0x00, ;
	param 1, u, 4, B, 4;
		val 1, 255;
			verifytbl 1;
				verify 1, SS-RARR.DRVID_INTEG_TIME, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

/****************** NOT SAME WITH X  ******************/

ctl SS-RARR.SAT_TRAPON_RATIO, 0x00, ;
    param 1, s, , S, ;
        sts 240/221;
            verifytbl 1;
                verify 1, SS-RARR.SAT_TRAPON_RATIO, EQ, 240/221, 1, 5;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, SS-RARR.SAT_TRAPON_RATIO, EQ, OFF, 1, 5;
            endofverify;
        endofsts;
    endofparam;
end;

ctl SS-RARR.COH_INCOH, 0x00, ;
    param 1, s, , S, ;
        sts COH;
            verifytbl 1;
                verify 1, SS-RARR.COH_INCOH, EQ, COH, 1, 5;
            endofverify;
        endofsts;
        sts INCOH;
            verifytbl 1;
                verify 1, SS-RARR.COH_INCOH, EQ, INCOH, 1, 5;
            endofverify;
        endofsts;
    endofparam;
end;

ctl SS-RARR.COH_RATIO, 0x00, ;
    param 1, s, , S, ;
        sts COH(240/221);
            verifytbl 1;
                verify 1, SS-RARR.COH_RATIO, EQ, COH(240/221), 1, 5;
            endofverify;
        endofsts;
        sts INCOH(240/221);
            verifytbl 1;
                verify 1, SS-RARR.COH_RATIO, EQ, INCOH(240/221), 1, 5;
            endofverify;
        endofsts;
        sts INCOH(---/---);
            verifytbl 1;
                verify 1, SS-RARR.COH_RATIO, EQ, INCOH(---/---), 1, 5;
            endofverify;
        endofsts;
    endofparam;
end;

/*****************************************************/

ctl SS-RARR.REF_FREQ, 0x00, ;
	param 1, f, 5.7, B, 5.7;
		val 2000.0000000, 3000.0000000;
            verifytbl 1*2;
                verify 1, SS-RARR.REF_FREQ, R-, 0.00000001, 1, 5;
                verify 2, SS-RARR.REF_FREQ, R+, 0.00000001, 1, 5;
            endofverify;
/*			verifytbl 1;
				verify 1, SS-RARR.REF_FREQ, EQ, *, 1, 5;
			endofverify; */
		endofval;
	endofparam;
end;

ctl SS-RARR.TIME_TAG, 0x00, ;
	param 1, D, , F, ;
		func FX_DATE;
		endoffunc;
	endofparam;
end;

ctl SS-RARR.PRED_RANGE, 0x00, ;
	param 1, f, 9.1, A, 9.1;
		val 0.0, 999999999.9;
		endofval;
	endofparam;
end;

ctl SS-RARR.PRED_RR, 0x00, ;
	param 1, d, 9, A, 8;
		val -99999999, 99999999;
		endofval;
	endofparam;
end;
/* SX-RARR.(CONT) */

ctl SX-RARR.1WAY/2WAY, 0x00, ;
	param 1, s, , S, ;
		sts 1WAY;
			verifytbl 1;
				verify 1, SX-RARR.1WAY/2WAY, EQ, 1WAY, 1, 8;
			endofverify;
		endofsts;
		sts 2WAY;
			verifytbl 1;
				verify 1, SX-RARR.1WAY/2WAY, EQ, 2WAY, 1, 8;
			endofverify;
		endofsts;
	endofparam;
end;

ctl SX-RARR.RNG_CONT, 0x00, ;
	param 1, s, , S, ;
		sts START;
			verifytbl 1;
				verify 1, SX-RARR.RNG_CONT, EQ, START, 1, 8;
			endofverify;
		endofsts;
		sts STOP;
			verifytbl 1;
				verify 1, SX-RARR.RNG_CONT, EQ, STOP, 1, 3600;
			endofverify;
		endofsts;
	endofparam;
end;

/* 連動パラメータ FC にて SS 側に設定される */
ctl SX-RARR.REC/SIN, 0x00, ;
	param 1, s, , S, ;
		sts RECT;
			prechktbl 1;
				prechk 1, SS-RARR.CONT_MODE, EQ, REMOTE, 3;
			endofprechk;
			verifytbl 1;
				verify 1, SX-RARR.REC/SIN, EQ, RECT, 1, 8;
			endofverify;
		endofsts;
		sts SIN;
			prechktbl 1;
				prechk 1, SS-RARR.CONT_MODE, EQ, REMOTE, 3;
			endofprechk;
			verifytbl 1;
				verify 1, SX-RARR.REC/SIN, EQ, SIN, 1, 8;
			endofverify;
		endofsts;
	endofparam;
end;

/* 連動パラメータ FC にて SS 側に設定される */
ctl SX-RARR.DEEP_NEAR, 0x00, ;
	param 1, s, , S, ;
		sts DEEP;
			prechktbl 1;
				prechk 1, SS-RARR.CONT_MODE, EQ, REMOTE, 3;
			endofprechk;
			verifytbl 1;
				verify 1, SX-RARR.DEEP_NEAR, EQ, DEEP, 1, 8;
			endofverify;
		endofsts;
		sts NEAR;
			prechktbl 1;
				prechk 1, SS-RARR.CONT_MODE, EQ, REMOTE, 3;
			endofprechk;
			verifytbl 1;
				verify 1, SX-RARR.DEEP_NEAR, EQ, NEAR, 1, 8;
			endofverify;
		endofsts;
	endofparam;
end;

/* 連動パラメータ FC にて SS 側に設定される */
ctl SX-RARR.AID_MODE, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			prechktbl 1;
				prechk 1, SS-RARR.CONT_MODE, EQ, REMOTE, 3;
			endofprechk;
			verifytbl 1;
				verify 1, SX-RARR.AID_MODE, EQ, ON, 1, 8;
			endofverify;
		endofsts;
		sts OFF;
			prechktbl 1;
				prechk 1, SS-RARR.CONT_MODE, EQ, REMOTE, 3;
			endofprechk;
			verifytbl 1;
				verify 1, SX-RARR.AID_MODE, EQ, OFF, 1, 8;
			endofverify;
		endofsts;
	endofparam;
end;

/* 連動パラメータ FC にて SS 側に設定される */
ctl SX-RARR.SAMPLING, 0x00, ;
	param 1, s, , S, ;
		sts 1/60;
			prechktbl 1;
				prechk 1, SS-RARR.CONT_MODE, EQ, REMOTE, 3;
			endofprechk;
			verifytbl 1;
				verify 1, SX-RARR.SAMPLING, EQ, 1/60, 1, 8;
			endofverify;
		endofsts;
		sts 1/20;
			prechktbl 1;
				prechk 1, SS-RARR.CONT_MODE, EQ, REMOTE, 3;
			endofprechk;
			verifytbl 1;
				verify 1, SX-RARR.SAMPLING, EQ, 1/20, 1, 8;
			endofverify;
		endofsts;
		sts 1/10;
			prechktbl 1;
				prechk 1, SS-RARR.CONT_MODE, EQ, REMOTE, 3;
			endofprechk;
			verifytbl 1;
				verify 1, SX-RARR.SAMPLING, EQ, 1/10, 1, 8;
			endofverify;
		endofsts;
		sts 1/2;
			prechktbl 1;
				prechk 1, SS-RARR.CONT_MODE, EQ, REMOTE, 3;
			endofprechk;
			verifytbl 1;
				verify 1, SX-RARR.SAMPLING, EQ, 1/2, 1, 8;
			endofverify;
		endofsts;
		sts 1/1;
			prechktbl 1;
				prechk 1, SS-RARR.CONT_MODE, EQ, REMOTE, 3;
			endofprechk;
			verifytbl 1;
				verify 1, SX-RARR.SAMPLING, EQ, 1/1, 1, 8; /* 1 -> 1/1 (h10.11.22)Yoshikado */
			endofverify;
		endofsts;
	endofparam;
end;

/* 連動パラメータ FC にて SS 側に設定される */
ctl SX-RARR.TONE_FREQ, 0x00, ;
	param 1, s, , S, ;
		sts Fup/2^14;
			prechktbl 1;
				prechk 1, SS-RARR.CONT_MODE, EQ, REMOTE, 3;
			endofprechk;
			verifytbl 1;
				verify 1, SX-RARR.TONE_FREQ, EQ, Fup/2^14, 1, 8;
			endofverify;
		endofsts;
		sts Fup/2^13;
			prechktbl 1;
				prechk 1, SS-RARR.CONT_MODE, EQ, REMOTE, 3;
			endofprechk;
			verifytbl 1;
				verify 1, SX-RARR.TONE_FREQ, EQ, Fup/2^13, 1, 8;
			endofverify;
		endofsts;
		sts Fup/2^12;
			prechktbl 1;
				prechk 1, SS-RARR.CONT_MODE, EQ, REMOTE, 3;
			endofprechk;
			verifytbl 1;
				verify 1, SX-RARR.TONE_FREQ, EQ, Fup/2^12, 1, 8;
			endofverify;
		endofsts;
		sts Fup/2^11;
			prechktbl 1;
				prechk 1, SS-RARR.CONT_MODE, EQ, REMOTE, 3;
			endofprechk;
			verifytbl 1;
				verify 1, SX-RARR.TONE_FREQ, EQ, Fup/2^11, 1, 8;
			endofverify;
		endofsts;
	endofparam;
end;

/* 連動パラメータ FC にて SS 側に設定される */
ctl SX-RARR.LOOP_BAND_WIDE, 0x00, ;
	param 1, s, , S, ;
		sts NARROW;
			prechktbl 1;
				prechk 1, SS-RARR.CONT_MODE, EQ, REMOTE, 3;
			endofprechk;
			verifytbl 1;
				verify 1, SX-RARR.LOOP_BAND_WIDE, EQ, NARROW, 1, 8;
			endofverify;
		endofsts;
		sts MEDIUM;
			prechktbl 1;
				prechk 1, SS-RARR.CONT_MODE, EQ, REMOTE, 3;
			endofprechk;
			verifytbl 1;
				verify 1, SX-RARR.LOOP_BAND_WIDE, EQ, MEDIUM, 1, 8;
			endofverify;
		endofsts;
		sts WIDE;
			prechktbl 1;
				prechk 1, SS-RARR.CONT_MODE, EQ, REMOTE, 3;
			endofprechk;
			verifytbl 1;
				verify 1, SX-RARR.LOOP_BAND_WIDE, EQ, WIDE, 1, 8;
			endofverify;
		endofsts;
	endofparam;
end;

/* 連動パラメータ FC にて SS 側に設定される */
ctl SX-RARR.RNG_DATA_NUM, 0x00, ;
	param 1, u, 2, B, 2;
		val 1, 99;
			prechktbl 1;
				prechk 1, SS-RARR.CONT_MODE, EQ, REMOTE, 3;
			endofprechk;
			verifytbl 1;
				verify 1, SX-RARR.RNG_DATA_NUM, EQ, *, 1, 8;
			endofverify;
		endofval;
	endofparam;
end;

/* 連動パラメータ FC にて SS 側に設定される */
ctl SX-RARR.INTEG_TIME1, 0x00, ;
	param 1, u, 4, B, 4;
		val 1, 9999;
			prechktbl 1;
				prechk 1, SS-RARR.CONT_MODE, EQ, REMOTE, 3;
			endofprechk;
			verifytbl 1;
				verify 1, SX-RARR.INTEG_TIME1, EQ, *, 1, 8;
			endofverify;
		endofval;
	endofparam;
end;

/* 連動パラメータ FC にて SS 側に設定される */
ctl SX-RARR.INTEG_TIME2, 0x00, ;
	param 1, u, 4, B, 4;
		val 1, 9999;
			prechktbl 1;
				prechk 1, SS-RARR.CONT_MODE, EQ, REMOTE, 3;
			endofprechk;
			verifytbl 1;
				verify 1, SX-RARR.INTEG_TIME2, EQ, *, 1, 8;
			endofverify;
		endofval;
	endofparam;
end;

/* 連動パラメータ FC にて SS 側に設定される */
ctl SX-RARR.DRVID_NUM, 0x00, ;
	param 1, u, 2, B, 2;
		val 0, 99;
			prechktbl 1;
				prechk 1, SS-RARR.CONT_MODE, EQ, REMOTE, 3;
			endofprechk;
			verifytbl 1;
				verify 1, SX-RARR.DRVID_NUM, EQ, *, 1, 8;
			endofverify;
		endofval;
	endofparam;
end;

/* 連動パラメータ FC にて SS 側に設定される */
ctl SX-RARR.DRVID_INTEG_TIME, 0x00, ;
	param 1, u, 4, B, 4;
		val 1, 255;
			prechktbl 1;
				prechk 1, SS-RARR.CONT_MODE, EQ, REMOTE, 3;
			endofprechk;
			verifytbl 1;
				verify 1, SX-RARR.DRVID_INTEG_TIME, EQ, *, 1, 8;
			endofverify;
		endofval;
	endofparam;
end;

/****************** NOT SAME WITH S  ******************/

ctl SX-RARR.SAT_TRAPON_RATIO, 0x00, ;
	param 1, s, , S, ;
		sts 900/221;
			verifytbl 1;
				verify 1, SX-RARR.SAT_TRAPON_RATIO, EQ, 900/221, 1, 8;
			endofverify;
		endofsts;
		sts 880/221;
			verifytbl 1;
				verify 1, SX-RARR.SAT_TRAPON_RATIO, EQ, 880/221, 1, 8;
			endofverify;
		endofsts;
		sts OFF;
			verifytbl 1;
				verify 1, SX-RARR.SAT_TRAPON_RATIO, EQ, OFF, 1, 8;
			endofverify;
		endofsts;
	endofparam;
end;

ctl SX-RARR.COH_INCOH, 0x00, ;
    param 1, s, , S, ;
        sts COH;
            verifytbl 1;
                verify 1, SX-RARR.COH_INCOH, EQ, COH, 1, 8;
            endofverify;
        endofsts;
        sts INCOH;
            verifytbl 1;
                verify 1, SX-RARR.COH_INCOH, EQ, INCOH, 1, 8;
            endofverify;
        endofsts;
    endofparam;
end;

ctl SX-RARR.COH_RATIO, 0x00, ;
    param 1, s, , S, ;
        sts COH(880/221);
            verifytbl 1;
                verify 1, SX-RARR.COH_RATIO, EQ, COH(880/221), 1, 8;
            endofverify;
        endofsts;
        sts COH(900/221);
            verifytbl 1;
                verify 1, SX-RARR.COH_RATIO, EQ, COH(900/221), 1, 8;
            endofverify;
        endofsts;
        sts INCOH(880/221);
            verifytbl 1;
                verify 1, SX-RARR.COH_RATIO, EQ, INCOH(880/221), 1, 8;
            endofverify;
        endofsts;
        sts INCOH(900/221);
            verifytbl 1;
                verify 1, SX-RARR.COH_RATIO, EQ, INCOH(900/221), 1, 8;
            endofverify;
        endofsts;
        sts INCOH(---/---);
            verifytbl 1;
                verify 1, SX-RARR.COH_RATIO, EQ, INCOH(---/---), 1, 8;
            endofverify;
        endofsts;
    endofparam;
end;

/*****************************************************/

ctl SX-RARR.REF_FREQ, 0x00, ;
	param 1, f, 5.7, B, 5.7;
		val 2000.0000000, 9000.0000000;
            verifytbl 1*2;
                verify 1, SX-RARR.REF_FREQ, R-, 0.00000001, 1, 5;
                verify 2, SX-RARR.REF_FREQ, R+, 0.00000001, 1, 5;
            endofverify;
/*			verifytbl 1;
				verify 1, SX-RARR.REF_FREQ, EQ, *, 1, 8;
			endofverify; */
		endofval;
	endofparam;
end;

ctl SX-RARR.TIME_TAG, 0x00, ;
	param 1, D, , F, ;
		func FX_DATE;
		endoffunc;
	endofparam;
end;

ctl SX-RARR.PRED_RANGE, 0x00, ;
	param 1, f, 9.1, A, 9.1;
		val 0.0, 999999999.9;
		endofval;
	endofparam;
end;

ctl SX-RARR.PRED_RR, 0x00, ;
	param 1, d, 9, A, 8;
		val -99999999, 99999999;
		endofval;
	endofparam;
end;
/* SX-TXPW (CONT) */

ctl SX-TXPW.S_MAIN_POL, 0x00, ;
	param 1, s, , S, ;
		sts LHC;
			verifytbl 1;
				verify 1, SX-TXPW.S_MAIN_POL, EQ, LHC, 1, 5;
			endofverify;
		endofsts;
		sts RHC;
			verifytbl 1;
				verify 1, SX-TXPW.S_MAIN_POL, EQ, RHC, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl SX-TXPW.X_MAIN_POL, 0x00, ;
	param 1, s, , S, ;
		sts LHC;
			verifytbl 1;
				verify 1, SX-TXPW.X_MAIN_POL, EQ, LHC, 1, 5;
			endofverify;
		endofsts;
		sts RHC;
			verifytbl 1;
				verify 1, SX-TXPW.X_MAIN_POL, EQ, RHC, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl SX-TXPW.S_ACQ_POL, 0x00, ;
	param 1, s, , S, ;
		sts LHC;
			verifytbl 1;
				verify 1, SX-TXPW.S_ACQ_POL, EQ, LHC, 1, 5;
			endofverify;
		endofsts;
		sts RHC;
			verifytbl 1;
				verify 1, SX-TXPW.S_ACQ_POL, EQ, RHC, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl SX-TXPW.X_ACQ_POL, 0x00, ;
	param 1, s, , S, ;
		sts LHC;
			verifytbl 1;
				verify 1, SX-TXPW.X_ACQ_POL, EQ, LHC, 1, 5;
			endofverify;
		endofsts;
		sts RHC;
			verifytbl 1;
				verify 1, SX-TXPW.X_ACQ_POL, EQ, RHC, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;
/* V-EQU (CONT) */

ctl V-EQU.COHI, 0x00, ;
	param 1, s, , S, ;
		sts COHI;
			verifytbl 1;
				verify 1, V-EQU.COHI, EQ, COHI, 1, 5;
			endofverify;
		endofsts;
		sts INCOHI;
			verifytbl 1;
				verify 1, V-EQU.COHI, EQ, INCOHI, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl V-EQU.RNG_SS, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			verifytbl 1;
				verify 1, V-EQU.RNG_SS, EQ, ON, 1, 5;
			endofverify;
		endofsts;
		sts OFF;
			verifytbl 1;
				verify 1, V-EQU.RNG_SS, EQ, OFF, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl V-EQU.RNG_SX, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			verifytbl 1;
				verify 1, V-EQU.RNG_SX, EQ, ON, 1, 5;
			endofverify;
		endofsts;
		sts OFF;
			verifytbl 1;
				verify 1, V-EQU.RNG_SX, EQ, OFF, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl V-EQU.RNG_XX, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			verifytbl 1;
				verify 1, V-EQU.RNG_XX, EQ, ON, 1, 5;
			endofverify;
		endofsts;
		sts OFF;
			verifytbl 1;
				verify 1, V-EQU.RNG_XX, EQ, OFF, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl V-EQU.3WAY_TX, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			verifytbl 1;
				verify 1, V-EQU.3WAY_TX, EQ, ON, 1, 5;
			endofverify;
		endofsts;
		sts OFF;
			verifytbl 1;
				verify 1, V-EQU.3WAY_TX, EQ, OFF, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl V-EQU.RNG_NUM, 0x00, ;
	param 1, u, 2, B, 2;
		val 1, 99;
			verifytbl 1;
				verify 1, V-EQU.RNG_NUM, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl V-EQU.BBE_SATNAME, 0x00, ;
	param 1, s, , S, ;
//		sts EXOS-D;
//		endofsts;
//		sts ASTRO-D;
//		endofsts;
  		sts SOLAR-B;
  		endofsts;
		sts GEOTAIL;
		endofsts;
//		sts MUSES-B;
//		endofsts;
//      sts PLANET-B;
//		endofsts;
  		sts ASTRO-E2;
  		endofsts;
//		sts ASTRO-F;
//		endofsts;
//		sts DASH;
//		endofsts;
//      sts LUNAR-A;
//      endofsts;
//		sts MUSES-C;
//		endofsts;
//		sts SELENE-M;
//    	endofsts;
//		sts MRO;
//		endofsts;
//		sts INDEX;
//		endofsts;
        sts PLANET-C;
  		endofsts;
        sts IKAROS;
  		endofsts;
        sts SPRINT-A;
  		endofsts;
//      sts SPRINT-B;
//		endofsts;
        sts MMO;
        endofsts;
        sts HAYABUSA2;
  		endofsts;
        sts PROCYON;
  		endofsts;
        sts ASTRO-H;
  		endofsts;
        sts ERG;
  		endofsts;
        sts VLBI;
  		endofsts;
        sts MAINT;
  		endofsts;
//      sts SAT15_123456789;
//		endofsts;
		sts EQUULEUS;
		endofsts;
		sts OMOTENASHI;
		endofsts;
		sts SLIM;
		endofsts;
		sts XRISM;
		endofsts;
	endofparam;
end;

ctl V-EQU.BAND_RG, 0x00, ;
	param 1, s, , S, ;
		sts OFF;
			verifytbl 1;
				verify 1, V-EQU.BAND_RG, EQ, OFF, 1, 5;
			endofverify;
		endofsts;
		sts S;
			verifytbl 1;
				verify 1, V-EQU.BAND_RG, EQ, S, 1, 5;
			endofverify;
		endofsts;
		sts X;
			verifytbl 1;
				verify 1, V-EQU.BAND_RG, EQ, X, 1, 5;
			endofverify;
		endofsts;
		sts S/X;
			verifytbl 1;
				verify 1, V-EQU.BAND_RG, EQ, S/X, 1, 5;
			endofverify;
		endofsts;
		sts X/X;
			verifytbl 1;
				verify 1, V-EQU.BAND_RG, EQ, X/X, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl V-EQU.ACQ_MAIN, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			verifytbl 1;
				verify 1, V-EQU.ACQ_MAIN, EQ, ON, 1, 5;
			endofverify;
		endofsts;
		sts OFF;
			verifytbl 1;
				verify 1, V-EQU.ACQ_MAIN, EQ, OFF, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl V-EQU.UP_MONI, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			verifytbl 1;
				verify 1, V-EQU.UP_MONI, EQ, ON, 1, 5;
			endofverify;
		endofsts;
		sts OFF;
			verifytbl 1;
				verify 1, V-EQU.UP_MONI, EQ, OFF, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl V-EQU.BITRATE_S, 0x00, ;
	param 1, u, 2, B, 2;
		val 0, 99;
			verifytbl 1;
				verify 1, V-EQU.BITRATE_S, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl V-EQU.BITRATE_X, 0x00, ;
	param 1, u, 2, B, 2;
		val 0, 99;
			verifytbl 1;
				verify 1, V-EQU.BITRATE_X, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl V-EQU.PRED_NOW , 0x00, ;
        param 1, , , , ;
                noprm;
                endofnoprm;
        endofparam;
end;

/* <<2013-TURBO>> 追加 */
ctl V-EQU.PRE_VERIFY, 0x00, ;
    param 1, s, , S, ;
        sts ON;
            verifytbl 1;
                verify 1, V-EQU.PRE_VERIFY, EQ, ON, 1, 5;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, V-EQU.PRE_VERIFY, EQ, OFF, 1, 5;
            endofverify;
        endofsts;
    endofparam;
end;

/****** THE END OF FILE *****************/
/* X-RX (CONT) */

 //----------------------------------------------------------------------
 // データベース名    ：内之浦局 X-RX制御
 // ファイル名        ：x-rx.db
 // 作成日            ：2017/02/07
 // 履歴              ：Ver2.0.0 2017/02/14 as-04 USC/UDSC送受信設備更新により、不要となった信号を削除。
 //----------------------------------------------------------------------

/***************   PIO XUP  ***************/

ctl X-RX.FC_X_LNA_SEL, 0x00, ;
    param 1, s, , S, ;
        sts NO1;
            prechktbl 1;
                prechk 1, X-RX.X_LNA_SEL_RL, EQ, REMOTE, 3;
            endofprechk;
            verifytbl 1;
                verify 1, X-RX.X_LNA_SEL_ANS, EQ, NO1, 1, 5;
            endofverify;
        endofsts;
        sts NO2;
            prechktbl 1;
                prechk 1, X-RX.X_LNA_SEL_RL, EQ, REMOTE, 3;
            endofprechk;
            verifytbl 1;
                verify 1, X-RX.X_LNA_SEL_ANS, EQ, NO2, 1, 5;
            endofverify;
        endofsts;
    endofparam;
end;

/* S-TX (CONT) */

/**** 2012-11-22 delete *2012-SSPA Kobayashi *********
ctl S-TX.CMD_MOD, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			verifytbl 1;
				verify 1, S-TX.CMD_MOD, EQ, ON, 1, 5;
			endofverify;
		endofsts;
		sts OFF;
			verifytbl 1;
				verify 1, S-TX.CMD_MOD, EQ, OFF, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-TX.RNG_MOD, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			verifytbl 1;
				verify 1, S-TX.RNG_MOD, EQ, ON, 1, 5;
			endofverify;
		endofsts;
		sts OFF;
			verifytbl 1;
				verify 1, S-TX.RNG_MOD, EQ, OFF, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-TX.CMD_ENT, 0x00, ;
	param 1, , , , ;
		noprm;
		endofnoprm;
	endofparam;
end;

ctl S-TX.RNG_ENT, 0x00, ;
	param 1, , , , ;
		noprm;
		endofnoprm;
	endofparam;
end;

ctl S-TX.CMD_MOD_INDEX, 0x00, ;
	param 1, f, 1.2, B, 1.2;
		val 0.00, 2.00;
			verifytbl 1;
				verify 1, S-TX.CMD_MOD_INDEX, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-TX.RNG_MOD_INDEX, 0x00, ;
	param 1, f, 1.2, B, 1.2;
		val 0.00, 2.00;
			verifytbl 1;
				verify 1, S-TX.RNG_MOD_INDEX, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;
******* 2012-11-22 delete *2012-SSPA Kobayashi ******/

ctl S-TX.RF_TRIP_NO_USE, 0x00, ;
	param 1, s, , S, ;
		sts NO_USE;
//			prechktbl 1;
//				prechk 1, S-TX.NO_USE_ENBL, EQ, ON, 3;
//			endofprechk;
			verifytbl 1;
				verify 1, S-TX.RF_TRIP_NO_USE, EQ, ON, 1, 5;
			endofverify;
		endofsts;
		sts NO_USE_RESET;
			verifytbl 1;
				verify 1, S-TX.RF_TRIP_NO_USE, EQ, OFF, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-TX.RF_CONT, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			prechktbl 1;
				prechk 1, S-TX.RF_ON_ENBL, EQ, ON, 3;
			endofprechk;
			verifytbl 1;
				verify 1, S-TX.RF_ON_ANS, EQ, ON, 1, 5;
			endofverify;
		endofsts;
		sts OFF;
			verifytbl 1;
				verify 1, S-TX.RF_ON_ANS, EQ, OFF, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-TX.HPA_LV_CONT, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			prechktbl 1;
				prechk 1, S-TX.HPA_LV_ON_ENBL, EQ, ON, 3;
			endofprechk;
			verifytbl 1;
				verify 1, S-TX.HPA_LV_ANS, EQ, ON, 1, 5;
			endofverify;
		endofsts;
		sts OFF;
			prechktbl 1;
				prechk 1, S-TX.HPA_LV_OFF_ENBL, EQ, ON, 3;
			endofprechk;
			verifytbl 1;
				verify 1, S-TX.HPA_LV_ANS, EQ, OFF, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-TX.HPA_HV_CONT, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			prechktbl 1;
				prechk 1, S-TX.HPA_HV_ON_READY, EQ, ON, 3;
			endofprechk;
			verifytbl 1;
				verify 1, S-TX.HPA_HV_FULL, EQ, ON, 1, 600;
			endofverify;
		endofsts;
		sts OFF;
			prechktbl 1;
				prechk 1, S-TX.HPA_HV_OFF_ENBL, EQ, ON, 3;
			endofprechk;
			verifytbl 1;
//				verify 1, S-TX.HPA_HV_OFF_ANS, EQ, ON, 1, 600;  <<2012-SSPA>>
				verify 1, S-TX.HPA_HV_OFF_ANS, EQ, OFF, 1, 600;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-TX.HPA_RF_PWR, 0x00, ;
	param 1, s, , S, ;
		sts 10kw;
			verifytbl 1;
				verify 1, S-TX.HPA_RF_PWR, EQ, 10kw, 1, 5;
			endofverify;
		endofsts;
		sts 1kw;
			verifytbl 1;
				verify 1, S-TX.HPA_RF_PWR, EQ, 1kw, 1, 5;
			endofverify;
		endofsts;
		sts 100w;
			verifytbl 1;
				verify 1, S-TX.HPA_RF_PWR, EQ, 100w, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-TX.HPA_ALM_RESET, 0x00, ;
	param 1, , , , ;
		noprm;
		endofnoprm;
	endofparam;
end;

ctl S-TX.MAIN_CONT, 0x00, ;
	param 1, s, , S, ;
		sts HPA;
			prechktbl 1;
				prechk 1, S-TX.WG_HPA_ENBL, EQ, ON, 3;
			endofprechk;
			verifytbl 1;
				verify 1, S-TX.WG_ANS, EQ, HPA, 1, 5;
			endofverify;
		endofsts;
		sts SSPA;
			prechktbl 1;
				prechk 1, S-TX.WG_SSPA_ENBL, EQ, ON, 3;
			endofprechk;
			verifytbl 1;
				verify 1, S-TX.WG_ANS, EQ, SSPA, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-TX.ANT_DMY, 0x00, ;
	param 1, s, , S, ;
		sts ANT;
			prechktbl 1;
				prechk 1, S-TX.WG_ANT_ENBL, EQ, ON, 3;
			endofprechk;
			verifytbl 1;
				verify 1, S-TX.ANT_DMY, EQ, ANT, 1, 5;
			endofverify;
		endofsts;
		sts DUMMY;
			prechktbl 1;
				prechk 1, S-TX.WG_DMY_ENBL, EQ, ON, 3;
			endofprechk;
			verifytbl 1;
				verify 1, S-TX.ANT_DMY, EQ, DUMMY, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-TX.COLIM_NORM, 0x00, ;
	param 1, s, , S, ;
		sts COLIM;
			prechktbl 1;
				prechk 1, S-TX.WG_COLIM_ENBL, EQ, ON, 3;
			endofprechk;
			verifytbl 1;
				verify 1, S-TX.COLIM_NORM, EQ, COLIM, 1, 5;
			endofverify;
		endofsts;
		sts NORM;
			prechktbl 1;
				prechk 1, S-TX.WG_NORM_ENBL, EQ, ON, 3;
			endofprechk;
			verifytbl 1;
				verify 1, S-TX.COLIM_NORM, EQ, NORM, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

/******* 2012-11-22 delete *2012-SSPA Kobayashi ******
ctl S-TX.SS25_TX_CONT, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			prechktbl 1;
				prechk 1, S-TX.SS25_TX_ON_ENBL, EQ, ON, 3;
			endofprechk;
			verifytbl 1;
				verify 1, S-TX.SS25_TX_ANS, EQ, ON, 1, 5;
			endofverify;
		endofsts;
		sts OFF;
			prechktbl 1;
				prechk 1, S-TX.SS25_TX_OFF_ENBL, EQ, ON, 3;
			endofprechk;
			verifytbl 1;
				verify 1, S-TX.SS25_TX_ANS, EQ, OFF, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-TX.SS25_RF_PWR, 0x00, ;
	param 1, s, , S, ;
		sts 25w;
			verifytbl 1;
				verify 1, S-TX.SS25_RF_PWR, EQ, 25w, 1, 5;
			endofverify;
		endofsts;
		sts 2w;
			verifytbl 1;
				verify 1, S-TX.SS25_RF_PWR, EQ, 2w, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;
******* 2012-11-22 delete *2012-SSPA Kobayashi ******/

ctl S-TX.SS75_TX_CONT, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			prechktbl 1;
				prechk 1, S-TX.SS75_TX_ON_READY, EQ, ON, 3;
			endofprechk;
			verifytbl 1;
				verify 1, S-TX.SS75_TX_ANS, EQ, ON, 1, 5;
			endofverify;
		endofsts;
		sts OFF;
			verifytbl 1;
				verify 1, S-TX.SS75_TX_ANS, EQ, OFF, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-TX.SS75_LOAD, 0x00, ;
	param 1, s, , S, ;
		sts ANT;
			verifytbl 1;
				verify 1, S-TX.SS75_LOAD, EQ, ANT, 1, 5;
			endofverify;
		endofsts;
		sts DUMMY;
			verifytbl 1;
				verify 1, S-TX.SS75_LOAD, EQ, DUMMY, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

//ctl S-TX.SS75_EXT_INT_CNT, 0x00, ;
//	param 1, s, , S, ;
//		sts ON;
//			verifytbl 1;
//				verify 1, S-TX.SS75_EXT_INT_CNT, EQ, ON, 1, 5;
//			endofverify;
//		endofsts;
//		sts OFF;
//			verifytbl 1;
//				verify 1, S-TX.SS75_EXT_INT_CNT, EQ, OFF, 1, 5;
//			endofverify;
//		endofsts;
//	endofparam;
//end;

ctl S-TX.SS75_RESET, 0x00, ;
	param 1, , , , ;
		noprm;
		endofnoprm;
	endofparam;
end;

//ctl S-TX.TX_SEL_CONT, 0x00, ;
//	param 1, s, , S, ;
//		sts MAIN;
//			prechktbl 1;
//				prechk 1, S-TX.TX_MAIN_ENBL, EQ, ON, 3;
//			endofprechk;
//			verifytbl 1;
//				verify 1, S-TX.TX_SEL_ANS, EQ, MAIN, 1, 5;
//			endofverify;
//		endofsts;
//		sts ACQ;
//			prechktbl 1;
//				prechk 1, S-TX.TX_ACQ_ENBL, EQ, ON, 3;
//			endofprechk;
//			verifytbl 1;
//				verify 1, S-TX.TX_SEL_ANS, EQ, ACQ, 1, 5;
//			endofverify;
//		endofsts;
//	endofparam;
//end;

/*************** h10.9.12 削除 ***************
**** 2012-11-22 delete back *2012-SSPA Kobayashi *********/
ctl S-TX.LOSIG_MODE, 0x00, ;
	param 1, s, , S, ;
		sts 900/221;
			verifytbl 1;
				verify 1, S-TX.LOSIG_MODE, EQ, 900/221, 1, 5;
			endofverify;
		endofsts;
		sts 880/221;
			verifytbl 1;
				verify 1, S-TX.LOSIG_MODE, EQ, 880/221, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;
/**** 2012-11-22 delete back *2012-SSPA Kobayashi *********
*************** ここまで削除 ****************/

/**** 2012-11-22 delete back *2012-SSPA Kobayashi *********
ctl S-TX.CMDSEL_CONT, 0x00, ;
	param 1, s, , S, ;
		sts GEN1;
			verifytbl 1;
				verify 1, S-TX.CMDSEL_CONT, EQ, GEN1, 1, 5;
			endofverify;
		endofsts;
		sts GEN2;
			verifytbl 1;
				verify 1, S-TX.CMDSEL_CONT, EQ, GEN2, 1, 5;
			endofverify;
		endofsts;
		sts GEN3;
			verifytbl 1;
				verify 1, S-TX.CMDSEL_CONT, EQ, GEN3, 1, 5;
			endofverify;
		endofsts;
		sts GEN4;
			verifytbl 1;
				verify 1, S-TX.CMDSEL_CONT, EQ, GEN4, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;
**** 2012-11-22 delete back *2012-SSPA Kobayashi *********/

/**** 2012-11-22 add *2012-SSPA Kobayashi *********/
ctl S-TX.SS1K_POWER_SEL_CONT, 0x00, ;
	param 1, s, , S, ;
		sts 1kw;
			verifytbl 1;
				verify 1, S-TX.SS1K_POWER_SEL_ANS, EQ, 1kw, 1, 5;
			endofverify;
		endofsts;
		sts 100w;
			verifytbl 1;
				verify 1, S-TX.SS1K_POWER_SEL_ANS, EQ, 100w, 1, 5;
			endofverify;
		endofsts;
		sts 25w;
			verifytbl 1;
				verify 1, S-TX.SS1K_POWER_SEL_ANS, EQ, 25w, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-TX.SS1K_ALARM_RESET, 0x00, ;
	param 1, , , , ;
		noprm;
		endofnoprm;
	endofparam;
end;

/*2013-02-25 ICDの誤記で、本制御はない
ctl S-TX.SS1K_RF_CUT_NO_USE, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			verifytbl 1;
				verify 1, S-TX.SS1K_RF_CUT_NO_USE, EQ, ON, 1, 5;
			endofverify;
		endofsts;
		sts OFF;
			verifytbl 1;
				verify 1, S-TX.SS1K_RF_CUT_NO_USE, EQ, OFF, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;
*/

ctl S-TX.SS1K_TX_FREQ, 0x00, ;
	param 1, u, 4, A, 4;
		val 2025, 2120;
			verifytbl 1;
				verify 1, S-TX.SS1K_TX_FREQ_ANS, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-TX.SS1K_PRE_PWR_CONT, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			verifytbl 1;
				verify 1, S-TX.SS1K_PRE_PWR_ANS, EQ, ON, 1, 10;
			endofverify;
		endofsts;
		sts OFF;
			verifytbl 1;
				verify 1, S-TX.SS1K_PRE_PWR_ANS, EQ, OFF, 1, 10;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-TX.SS1K_PA1_11_PWR_CONT, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			prechktbl 1;
				prechk 1, S-TX.SS1K_POWER_SEL_ANS, NE, ****, 3;
			endofprechk;
			verifytbl 1;
				verify 1, S-TX.SS1K_PA1_11_PWR_ANS, EQ, ON, 1, 10;
			endofverify;
		endofsts;
		sts OFF;
			prechktbl 1+2;
				prechk 1, S-TX.SS1K_POWER_SEL_ANS, EQ, 1kw,  3;
				prechk 2, S-TX.SS1K_POWER_SEL_ANS, EQ, 100w, 3;
			endofprechk;
			verifytbl 1;
				verify 1, S-TX.SS1K_PA1_11_PWR_ANS, EQ, OFF, 1, 10;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-TX.SS1K_PA2_12_PWR_CONT, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			prechktbl 1;
				prechk 1, S-TX.SS1K_POWER_SEL_ANS, NE, ****, 3;
			endofprechk;
			verifytbl 1;
				verify 1, S-TX.SS1K_PA2_12_PWR_ANS, EQ, ON, 1, 10;
			endofverify;
		endofsts;
		sts OFF;
			prechktbl 1+2;
				prechk 1, S-TX.SS1K_POWER_SEL_ANS, EQ, 1kw,  3;
				prechk 2, S-TX.SS1K_POWER_SEL_ANS, EQ, 100w, 3;
			endofprechk;
			verifytbl 1;
				verify 1, S-TX.SS1K_PA2_12_PWR_ANS, EQ, OFF, 1, 10;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-TX.SS1K_PA3_13_PWR_CONT, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			prechktbl 1;
				prechk 1, S-TX.SS1K_POWER_SEL_ANS, NE, ****, 3;
			endofprechk;
			verifytbl 1;
				verify 1, S-TX.SS1K_PA3_13_PWR_ANS, EQ, ON, 1, 10;
			endofverify;
		endofsts;
		sts OFF;
			prechktbl 1+2;
				prechk 1, S-TX.SS1K_POWER_SEL_ANS, EQ, 1kw,  3;
				prechk 2, S-TX.SS1K_POWER_SEL_ANS, EQ, 100w, 3;
			endofprechk;
			verifytbl 1;
				verify 1, S-TX.SS1K_PA3_13_PWR_ANS, EQ, OFF, 1, 10;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-TX.SS1K_PA4_14_PWR_CONT, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			prechktbl 1;
				prechk 1, S-TX.SS1K_POWER_SEL_ANS, NE, ****, 3;
			endofprechk;
			verifytbl 1;
				verify 1, S-TX.SS1K_PA4_14_PWR_ANS, EQ, ON, 1, 10;
			endofverify;
		endofsts;
		sts OFF;
			prechktbl 1+2;
				prechk 1, S-TX.SS1K_POWER_SEL_ANS, EQ, 1kw,  3;
				prechk 2, S-TX.SS1K_POWER_SEL_ANS, EQ, 100w, 3;
			endofprechk;
			verifytbl 1;
				verify 1, S-TX.SS1K_PA4_14_PWR_ANS, EQ, OFF, 1, 10;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-TX.SS1K_PA5_15_PWR_CONT, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			prechktbl 1;
				prechk 1, S-TX.SS1K_POWER_SEL_ANS, NE, ****, 3;
			endofprechk;
			verifytbl 1;
				verify 1, S-TX.SS1K_PA5_15_PWR_ANS, EQ, ON, 1, 10;
			endofverify;
		endofsts;
		sts OFF;
			prechktbl 1+2;
				prechk 1, S-TX.SS1K_POWER_SEL_ANS, EQ, 1kw,  3;
				prechk 2, S-TX.SS1K_POWER_SEL_ANS, EQ, 100w, 3;
			endofprechk;
			verifytbl 1;
				verify 1, S-TX.SS1K_PA5_15_PWR_ANS, EQ, OFF, 1, 10;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-TX.SS1K_PA6_16_PWR_CONT, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			prechktbl 1;
				prechk 1, S-TX.SS1K_POWER_SEL_ANS, NE, ****, 3;
			endofprechk;
			verifytbl 1;
				verify 1, S-TX.SS1K_PA6_16_PWR_ANS, EQ, ON, 1, 10;
			endofverify;
		endofsts;
		sts OFF;
			prechktbl 1+2;
				prechk 1, S-TX.SS1K_POWER_SEL_ANS, EQ, 1kw,  3;
				prechk 2, S-TX.SS1K_POWER_SEL_ANS, EQ, 100w, 3;
			endofprechk;
			verifytbl 1;
				verify 1, S-TX.SS1K_PA6_16_PWR_ANS, EQ, OFF, 1, 10;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-TX.SS1K_PA7_17_PWR_CONT, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			prechktbl 1;
				prechk 1, S-TX.SS1K_POWER_SEL_ANS, NE, ****, 3;
			endofprechk;
			verifytbl 1;
				verify 1, S-TX.SS1K_PA7_17_PWR_ANS, EQ, ON, 1, 10;
			endofverify;
		endofsts;
		sts OFF;
			prechktbl 1+2;
				prechk 1, S-TX.SS1K_POWER_SEL_ANS, EQ, 1kw,  3;
				prechk 2, S-TX.SS1K_POWER_SEL_ANS, EQ, 100w, 3;
			endofprechk;
			verifytbl 1;
				verify 1, S-TX.SS1K_PA7_17_PWR_ANS, EQ, OFF, 1, 10;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-TX.SS1K_PA8_18_PWR_CONT, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			prechktbl 1;
				prechk 1, S-TX.SS1K_POWER_SEL_ANS, NE, ****, 3;
			endofprechk;
			verifytbl 1;
				verify 1, S-TX.SS1K_PA8_18_PWR_ANS, EQ, ON, 1, 10;
			endofverify;
		endofsts;
		sts OFF;
			prechktbl 1+2;
				prechk 1, S-TX.SS1K_POWER_SEL_ANS, EQ, 1kw,  3;
				prechk 2, S-TX.SS1K_POWER_SEL_ANS, EQ, 100w, 3;
			endofprechk;
			verifytbl 1;
				verify 1, S-TX.SS1K_PA8_18_PWR_ANS, EQ, OFF, 1, 10;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-TX.SS1K_PA9_19_PWR_CONT, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			prechktbl 1;
				prechk 1, S-TX.SS1K_POWER_SEL_ANS, NE, ****, 3;
			endofprechk;
			verifytbl 1;
				verify 1, S-TX.SS1K_PA9_19_PWR_ANS, EQ, ON, 1, 10;
			endofverify;
		endofsts;
		sts OFF;
			prechktbl 1+2;
				prechk 1, S-TX.SS1K_POWER_SEL_ANS, EQ, 1kw,  3;
				prechk 2, S-TX.SS1K_POWER_SEL_ANS, EQ, 100w, 3;
			endofprechk;
			verifytbl 1;
				verify 1, S-TX.SS1K_PA9_19_PWR_ANS, EQ, OFF, 1, 10;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-TX.SS1K_PA10_20_PWR_CONT, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			prechktbl 1;
				prechk 1, S-TX.SS1K_POWER_SEL_ANS, NE, ****, 3;
			endofprechk;
			verifytbl 1;
				verify 1, S-TX.SS1K_PA10_20_PWR_ANS, EQ, ON, 1, 10;
			endofverify;
		endofsts;
		sts OFF;
			prechktbl 1+2;
				prechk 1, S-TX.SS1K_POWER_SEL_ANS, EQ, 1kw,  3;
				prechk 2, S-TX.SS1K_POWER_SEL_ANS, EQ, 100w, 3;
			endofprechk;
			verifytbl 1;
				verify 1, S-TX.SS1K_PA10_20_PWR_ANS, EQ, OFF, 1, 10;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-TX.RFSW_UC_ROUTE, 0x00, ;
	param 1, s, , S, ;
		sts U/C1;
			verifytbl 1;
				verify 1, S-TX.RFSW_UC_ROUTE, EQ, U/C1, 1, 5;
			endofverify;
		endofsts;
		sts U/C2;
			verifytbl 1;
				verify 1, S-TX.RFSW_UC_ROUTE, EQ, U/C2, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-TX.RFSW_CAL_ROUTE, 0x00, ;
	param 1, s, , S, ;
		sts TLM;
			verifytbl 1;
				verify 1, S-TX.RFSW_CAL_ROUTE, EQ, TLM, 1, 5;
			endofverify;
		endofsts;
		sts RNG;
			verifytbl 1;
				verify 1, S-TX.RFSW_CAL_ROUTE, EQ, RNG, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-TX.RFSW_CAL_ROUTE_ATT, 0x00, ;
	param 1, u, 2, B, 2;
//		val 0, 99;		*実機は 0 ～ 39
		val 0, 39;
			verifytbl 1;
				verify 1, S-TX.RFSW_CAL_ROUTE_ATT, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-TX.RFSW_TX_SEL, 0x00, ;
	param 1, s, , S, ;
//		sts EXT;
//			verifytbl 1;
//				verify 1, S-TX.RFSW_TX_SEL, EQ, EXT, 1, 5;
//			endofverify;
//		endofsts;
		sts SSPA-75w;
			verifytbl 1;
				verify 1, S-TX.RFSW_TX_SEL, EQ, SSPA-75w, 1, 5;
			endofverify;
		endofsts;
		sts SSPA-1kw;
			verifytbl 1;
				verify 1, S-TX.RFSW_TX_SEL, EQ, SSPA-1kw, 1, 5;
			endofverify;
		endofsts;
		sts HPA;
			verifytbl 1;
				verify 1, S-TX.RFSW_TX_SEL, EQ, HPA, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

/**** 2012-11-22 add *2012-SSPA Kobayashi *********/

/****** THE END OF FILE *****************/
/* S-U/C2 (CONT) */

ctl S-UC2.RF_OUTPUT, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			verifytbl 1;
				verify 1, S-UC2.RF_OUTPUT, EQ, ON, 1, 5;
			endofverify;
		endofsts;
		sts OFF;
			verifytbl 1;
				verify 1, S-UC2.RF_OUTPUT, EQ, OFF, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-UC2.SET_FREQ, 0x00, ;
	param 1, u, 10, B, 10;
		val 2025000000, 2120000000;
			verifytbl 1;
				verify 1, S-UC2.SET_FREQ_MON, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

/****** THE END OF FILE *****************/
/* CTRL  (CONT) */

ctl CTRL.UP_FREQ, 0x00, ;
    param 1, , , , ;
    	noprm;
        endofnoprm;
	endofparam;
end;

ctl CTRL.RANGING, 0x00, ;
	param 1, s, , S, ;
//		sts S-nn;
//		endofsts;
//		sts X-nn;
//		endofsts;
//		sts SXnn;
//		endofsts;
		sts XXnn;
		endofsts;
        sts RXnn;
		endofsts;
	endofparam;
end;

/* 臼田６４ｍＲＮＧ計測専用 2001-05-26 by 吉角 */
ctl CTRL.RANGINGS, 0x00, ;
	param 1, s, , S, ;
		sts nn;
		endofsts;
	endofparam;
end;

ctl CTRL.RANGING_CANCEL, 0x00, ;
    param 1, , , , ;
    	noprm;
        endofnoprm;
	endofparam;
end;

/* 臼田６４ｍＲＮＧ計測専用 2001-05-26 by 吉角 */
ctl CTRL.RANGINGS_CANCEL, 0x00, ;
    param 1, , , , ;
    	noprm;
        endofnoprm;
	endofparam;
end;

ctl CTRL.BITRATE-CANCEL-S, 0x00, ;
    param 1, , , , ;
    	noprm;
        endofnoprm;
	endofparam;
end;

ctl CTRL.BITRATE-CANCEL-X, 0x00, ;
    param 1, , , , ;
	    noprm;
        endofnoprm;
	endofparam;
end;

ctl CTRL.BITRATE-CANCEL-XQPSK, 0x00, ;
    param 1, , , , ;
	    noprm;
        endofnoprm;
	endofparam;
end;

ctl CTRL.RDYCHK_AGC, 0x00, ;
    param 1, , , , ;
	    noprm;
        endofnoprm;
	endofparam;
end;

ctl CTRL.RDYCHK_AGC_CANCEL, 0x00, ;
    param 1, , , , ;
	    noprm;
        endofnoprm;
	endofparam;
end;

ctl CTRL.RDYCHK_RNG, 0x00, ;
    param 1, , , , ;
	    noprm;
        endofnoprm;
	endofparam;
end;

ctl CTRL.RDYCHK_RNG_CANCEL, 0x00, ;
    param 1, , , , ;
	    noprm;
        endofnoprm;
	endofparam;
end;

ctl CTRL.RDYCHK_RR, 0x00, ;
    param 1, , , , ;
	    noprm;
        endofnoprm;
	endofparam;
end;

ctl CTRL.RDYCHK_RR_CANCEL, 0x00, ;
    param 1, , , , ;
	    noprm;
        endofnoprm;
	endofparam;
end;

ctl CTRL.ANTCHK, 0x00, ;
    param 1, , , , ;
	    noprm;
        endofnoprm;
	endofparam;
end;

ctl CTRL.ANTCHK_CANCEL, 0x00, ;
    param 1, , , , ;
	    noprm;
        endofnoprm;
	endofparam;
end;

ctl CTRL.ANTPTN, 0x00, ;
    param 1, , , , ;
	    noprm;
        endofnoprm;
	endofparam;
end;

ctl CTRL.ANTPTN_CANCEL, 0x00, ;
    param 1, , , , ;
	    noprm;
        endofnoprm;
	endofparam;
end;

//ctl CTRL.S_CAL_OUTPUT , 0x00, ;
//    param  1, s, , S, ;
//        sts ON;
//        endofsts;
//        sts OFF;
//        endofsts;
//	endofparam;
//end;

//ctl CTRL.X_CAL_OUTPUT , 0x00, ;
//    param  1, s, , S, ;
//        sts ON;
//        endofsts;
//        sts OFF;
//        endofsts;
//	endofparam;
//end;

ctl CTRL.S_CAL_OUTLVL , 0x00, ;
    param 1, d, 4, B, 4;
	    val -169, -80;
       endofval;
	endofparam;
end;

ctl CTRL.X_CAL_OUTLVL , 0x00, ;
    param 1, d, 4, B, 4;
	    val -169, -80;
        endofval;
	endofparam;
end;

ctl CTRL.PRIV_STTN , 0x00, ;
    param  1, s, , S, ;
        sts ON;
        endofsts;
        sts OFF;
        endofsts;
	endofparam;
end;

ctl CTRL.PRIV_SSOC , 0x00, ;
    param  1, s, , S, ;
        sts ON;
        endofsts;
        sts OFF;
        endofsts;
	endofparam;
end;

/* <<2012-SSPA>>  2012-12-04 SSPA対応特殊制御追加 未使用 Start */
/* 2008-09-02 X-HPA増設対応 by 吉角 */
/*
ctl CTRL.S_TX_RF_PWR , 0x00, ;
    param  1, s, , S, ;
        sts 2w;
        endofsts;
        sts 25w;
        endofsts;
        sts 75w;
        endofsts;
        sts 100w;
        endofsts;
        sts 1kw;
        endofsts;
        sts 10kw;
        endofsts;
	endofparam;
end;

ctl CTRL.X_TX_RF_PWR , 0x00, ;
    param  1, s, , S, ;
        sts 10w;
        endofsts;
        sts 100w;
        endofsts;
        sts 200w;
        endofsts;
        sts 2kw;
        endofsts;
        sts 20kw;
        endofsts;
	endofparam;
end;
*/
/* <<2012-SSPA>>  2012-12-04 SSPA対応特殊制御追加 未使用 End */

ctl CTRL.X_MOD_SEL , 0x00, ;
    param  1, s, , S, ;
        sts MOD;
        endofsts;
        sts TCRMOD;
        endofsts;
	endofparam;
end;

/* 2011-11-03 S帯BBE換装対応　追加　ここから */
/**********************************
  ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓*/

ctl CTRL.S_RNG_ROUTE , 0x00, ;
    param  1, s, , S, ;
        sts S/S;
        endofsts;
        sts S/X;
        endofsts;
	endofparam;
end;

ctl CTRL.TLM_SEND , 0x00, ;
    param  1, s, , S, ;
        sts SEND;
        endofsts;
        sts STOP;
        endofsts;
	endofparam;
end;

ctl CTRL.PRED_GET_HOST , 0x00, ;
    param  1, s, , S, ;
        sts STRG;
        endofsts;
        sts CTRL;
        endofsts;
	endofparam;
end;

/*↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑
**********************************/
/* 2011-11-03 S帯BBE換装対応　追加　ここまで */

/* <<2012-SSPA>>  2012-12-04 SSPA対応特殊制御追加 Start */

ctl CTRL.S_TX_RF_PWR, 0x00, ;
	param 1, s, , S, ;
		sts SSPA_1kw_U/C1;
		endofsts;
		sts SSPA_1kw_U/C2;
		endofsts;
		sts SSPA_100w_U/C1;
		endofsts;
		sts SSPA_100w_U/C2;
		endofsts;
		sts SSPA_25w_U/C1;
		endofsts;
		sts SSPA_25w_U/C2;
		endofsts;
		sts SSPA_75w_U/C1;
		endofsts;
		sts SSPA_75w_U/C2;
		endofsts;
		sts HPA_10kw_U/C1;
		endofsts;
		sts HPA_10kw_U/C2;
		endofsts;
	endofparam;
end;

ctl CTRL.X_TX_RF_PWR, 0x00, ;
	param 1, s, , S, ;
		sts HPA_20kw;
		endofsts;
		sts HPA_2kw;
		endofsts;
		sts HPA_200w;
		endofsts;
		sts SSPA_100w;
		endofsts;
//		sts SSPA_10w;  //USC/UDSC送受信設備更新による修正 SSPAは100w固定となるため削除 2017/05/22 as-04
//		endofsts;      //USC/UDSC送受信設備更新による修正 SSPAは100w固定となるため削除 2017/05/22 as-04
	endofparam;
end;

/* <<2012-SSPA>>  2012-12-04 SSPA対応特殊制御追加 End */

/* <<2012-SSPA>>  2013-02-13 SSPA対応特殊制御追加 SSPA-PA ALL ON/OFF Start */
ctl CTRL.STX_SS1K_PA_ALL , 0x00, ;
	param  1, s, , S, ;
		sts ON;
		endofsts;
		sts OFF;
		endofsts;
	endofparam;
end;
/* <<2012-SSPA>>  2013-02-13 SSPA対応特殊制御追加 SSPA-PA ALL ON/OFF End */

/* <<2013-TURBO>> 追加 */
ctl CTRL.SEL_DSN_RNG_MODE , 0x00, ;
    param  1, s, , S, ;
        sts TURNAROUND;
        endofsts;
        sts REGEN;
        endofsts;
    endofparam;
end;


//2017/03/07 as-03 追尾状況画面の表示のために追加
ctl CMD-BITRATE ,0x00;
end;

//2017/03/07 as-03 追尾状況画面の表示のために追加
ctl BITRATE-S ,0x00;
end;

//2017/03/07 as-03 追尾状況画面の表示のために追加
ctl BITRATE-XHRX ,0x00;
end;


/* プロパティファイル取り込み用 <<2017-REMOTE>> 2017-06-02 by 小林 */
ctl CTRL.PROP_READ, 0x00, ;
    param 1, , , , ;
        noprm;
        endofnoprm;
        endofparam;
end;


/* X-TXSYN (CONT)  */

ctl X-TXSYN.STT_FREQ, 0x00, ;
	param 1, f, 11.6, B, 11.6;
		val 7145000000.000000, 7235000000.000000;
			prechktbl 1;
				prechk 1, X-TXSYN.HPACH_TUNE, EQ, OFF, 3;
			endofprechk;
			verifytbl 1;
				verify 1, X-TXSYN.STT_FREQ, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl X-TXSYN.RAMP_RATE, 0x00, ;
	param 1, f, 7.6, B, 7.6;
		val -99900.000000, +99900.000000;
			verifytbl 1;
				verify 1, X-TXSYN.RAMP_RATE, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl X-TXSYN.1WAY/2WAY, 0x00, ;
	param 1, s, , S, ;
		sts 1WAY;
			verifytbl 1;
				verify 1, X-TXSYN.1WAY/2WAY, EQ, 1WAY, 1, 5;
			endofverify;
		endofsts;
		sts 2WAY;
			verifytbl 1;
				verify 1, X-TXSYN.1WAY/2WAY, EQ, 2WAY, 1, 5;
			endofverify;
		endofsts;
		sts DUP;
			verifytbl 1;
				verify 1, X-TXSYN.1WAY/2WAY, EQ, DUP,  1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-TXSYN.TIME_OFFSET, 0x00, ;
	param 1, s, 6, Z, ;
		sts *;
			verifytbl 1;
				verify 1, X-TXSYN.TIME_OFFSET, EQ, *, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-TXSYN.FREQ_OFFSET, 0x00, ;
	param 1, f, 7.6, B, 7.6;
		val -999999.000000, +999999.000000;
			verifytbl 1;
				verify 1, X-TXSYN.FREQ_OFFSET, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl X-TXSYN.SWEEP_CONT, 0x00, ;
	param 1, s, , S, ;
		sts STOP;
			verifytbl 1;
				verify 1, X-TXSYN.SWEEP_CONT, EQ, STOP, 1, 5;
			endofverify;
		endofsts;
		sts INC;
			verifytbl 1;
				verify 1, X-TXSYN.SWEEP_CONT, EQ, INC, 1, 5;
			endofverify;
		endofsts;
		sts DEC;
			verifytbl 1;
				verify 1, X-TXSYN.SWEEP_CONT, EQ, DEC, 1, 5;
			endofverify;
		endofsts;
		sts INC+DEC;
			verifytbl 1;
				verify 1, X-TXSYN.SWEEP_CONT, EQ, INC+DEC, 1, 5;
			endofverify;
		endofsts;
		sts DEC+INC;
			verifytbl 1;
				verify 1, X-TXSYN.SWEEP_CONT, EQ, DEC+INC, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-TXSYN.TR_SWEEP_CONT, 0x00, ;
	param 1, s, , S, ;
		sts STOP;
			verifytbl 1;
				verify 1, X-TXSYN.TR_SWEEP_CONT, EQ, STOP, 1, 5;
			endofverify;
		endofsts;
		sts INC;
			verifytbl 1;
				verify 1, X-TXSYN.TR_SWEEP_CONT, EQ, INC, 1, 5;
			endofverify;
		endofsts;
		sts DEC;
			verifytbl 1;
				verify 1, X-TXSYN.TR_SWEEP_CONT, EQ, DEC, 1, 5;
			endofverify;
		endofsts;
		sts INC+DEC;
			verifytbl 1;
				verify 1, X-TXSYN.TR_SWEEP_CONT, EQ, INC+DEC, 1, 5;
			endofverify;
		endofsts;
		sts DEC+INC;
			verifytbl 1;
				verify 1, X-TXSYN.TR_SWEEP_CONT, EQ, DEC+INC, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-TXSYN.SWEEP_RATE, 0x00, ;
	param 1, f, 6.1, B, 6.1;
		val 0.0, 99900.0;
			verifytbl 1;
				verify 1, X-TXSYN.SWEEP_RATE, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl X-TXSYN.SWEEP_WIDTH, 0x00, ;
	param 1, u, 6, B, 6;
		val 0, 999999;
			verifytbl 1;
				verify 1, X-TXSYN.SWEEP_WIDTH, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl X-TXSYN.RATE_AID, 0x00, ;
	param 1, s, , S, ;
		sts ON;
			verifytbl 1;
				verify 1, X-TXSYN.RATE_AID, EQ, ON, 1, 5;
			endofverify;
		endofsts;
		sts OFF;
			verifytbl 1;
				verify 1, X-TXSYN.RATE_AID, EQ, OFF, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-TXSYN.PREDGET, 0x00, ;
	param 1, P, 14, Z, ;
		sts *;
			prechktbl 1;
				prechk 1, X-TXSYN.HPACH_TUNE, EQ, OFF, 3;
			endofprechk;
		endofsts;
	endofparam;
end;
/* control */
/* SS-TCRMOD */

ctl SS-TCRMOD.MODULATION, 0x00, ;    /*(2)*/
    param 1, s, , S, ;
        sts ON;
            verifytbl 1;
                verify 1, SS-TCRMOD.MODULATION, EQ, ON, 1, 6;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, SS-TCRMOD.MODULATION, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

ctl SS-TCRMOD.IF_OUTPUT, 0x00, ;    /*(2)*/
    param 1, s, , S, ;
        sts ON;
            verifytbl 1;
                verify 1, SS-TCRMOD.IF_OUTPUT, EQ, ON, 1, 6;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, SS-TCRMOD.IF_OUTPUT, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

ctl SS-TCRMOD.MOD_FORMAT_MODE, 0x00, ;    /*(3)*/
    param 1, s, , S, ;
          sts PCM-QPSK;
              verifytbl 1;
                  verify 1, SS-TCRMOD.MOD_FORMAT_MODE, EQ, PCM-QPSK, 1, 6;
              endofverify;
          endofsts; 
          sts PCM-BPSK;
              verifytbl 1;
                  verify 1, SS-TCRMOD.MOD_FORMAT_MODE, EQ, PCM-BPSK, 1, 6;
              endofverify;
          endofsts;
          sts PCM-PSK-PM/INCO;
              verifytbl 1;
                  verify 1, SS-TCRMOD.MOD_FORMAT_MODE, EQ, PCM-PSK-PM/INCO, 1, 6;
              endofverify;
          endofsts;
          sts PCM-PSK-PM/COH;
              verifytbl 1;
                  verify 1, SS-TCRMOD.MOD_FORMAT_MODE, EQ, PCM-PSK-PM/COH, 1, 6;
              endofverify;
          endofsts;
          sts PCM-PM;
              verifytbl 1;
                  verify 1, SS-TCRMOD.MOD_FORMAT_MODE, EQ, PCM-PM, 1, 6;
              endofverify;
          endofsts;
     endofparam;
end;


ctl SS-TCRMOD.SWEEP_CONT, 0x00, ; /* (4) */
    param 1, s, , S, ;
      sts ON;
        verifytbl 1;
           verify 1, SS-TCRMOD.SWEEP_ANS, EQ, ON, 1, 6;
        endofverify;
      endofsts;
      sts OFF;
        verifytbl 1;
           verify 1, SS-TCRMOD.SWEEP_ANS, EQ, OFF, 1, 6;
        endofverify;
      endofsts;
    endofparam;
end;

ctl SS-TCRMOD.SWEEP_CMD, 0x00, ; /* (4) */
    param 1, s, , S, ;
      sts STOP;
        verifytbl 1;
           verify 1, SS-TCRMOD.SWEEP_CMD_ANS, EQ, STOP, 1, 6;
        endofverify;
      endofsts;
      sts DECINC;
        verifytbl 1;
           verify 1, SS-TCRMOD.SWEEP_CMD_ANS, EQ, DECINC, 1, 6;
        endofverify;
      endofsts;
      sts INCDEC;
        verifytbl 1;
           verify 1, SS-TCRMOD.SWEEP_CMD_ANS, EQ, INCDEC, 1, 6;
        endofverify;
      endofsts;
      sts DEC;
        verifytbl 1;
           verify 1, SS-TCRMOD.SWEEP_CMD_ANS, EQ, DEC, 1, 6;
        endofverify;
      endofsts;
      sts INC;
        verifytbl 1;
           verify 1, SS-TCRMOD.SWEEP_CMD_ANS, EQ, INC, 1, 6;
        endofverify;
      endofsts;
      sts CONTINUANCE;
        verifytbl 1;
           verify 1, SS-TCRMOD.SWEEP_CMD_ANS, EQ, CONTINUANCE, 1, 6;
        endofverify;
      endofsts;
      sts INITIALIZE;
        verifytbl 1;
           verify 1, SS-TCRMOD.SWEEP_CMD_ANS, EQ, INITIALIZE, 1, 6;
        endofverify;
      endofsts;
    endofparam;
end;


ctl SS-TCRMOD.CONVOLUTIONAL, 0x00, ;    /*(6)*/
    param 1, s, , S, ;
        sts ON(ESA);
            verifytbl 1;
                verify 1, SS-TCRMOD.CONVOLUTIONAL, EQ, ON(ESA), 1, 6;
            endofverify;
        endofsts;
        sts ON(JPL);
            verifytbl 1;
                verify 1, SS-TCRMOD.CONVOLUTIONAL, EQ, ON(JPL), 1, 6;
            endofverify;
        endofsts;
        sts ON(CCSDS);
            verifytbl 1;
                verify 1, SS-TCRMOD.CONVOLUTIONAL, EQ, ON(CCSDS), 1, 6;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, SS-TCRMOD.CONVOLUTIONAL, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

ctl SS-TCRMOD.DIFF_CODING, 0x00, ; /* (7) */
    param 1, s, , S, ;
      sts ON;
        verifytbl 1;
           verify 1, SS-TCRMOD.DIFF_CODING, EQ, ON, 1, 6;
        endofverify;
      endofsts;
      sts OFF;
        verifytbl 1;
           verify 1, SS-TCRMOD.DIFF_CODING, EQ, OFF, 1, 6;
        endofverify;
      endofsts;
    endofparam;
end;


ctl SS-TCRMOD.FILTER_STYLE, 0x00, ;    /*(8)*/
    param 1, s, , S, ;
        sts ROOT_NYQ;
            verifytbl 1;
                verify 1, SS-TCRMOD.FILTER_STYLE, EQ, ROOT_NYQ, 1, 6;
            endofverify;
        endofsts;
        sts LINEAR_PHASE;
            verifytbl 1;
                verify 1, SS-TCRMOD.FILTER_STYLE, EQ, LINEAR_PHASE, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

ctl SS-TCRMOD.DATA_MODE, 0x00, ;    /*(9)*/
    param 1, s, , S, ;
        sts BiPH_L;
            verifytbl 1;
                verify 1, SS-TCRMOD.DATA_MODE, EQ, BiPH_L, 1, 6;
            endofverify;
        endofsts;
        sts BiPH_M;
            verifytbl 1;
                verify 1, SS-TCRMOD.DATA_MODE, EQ, BiPH_M, 1, 6;
            endofverify;
        endofsts;
        sts BiPH_S;
            verifytbl 1;
                verify 1, SS-TCRMOD.DATA_MODE, EQ, BiPH_S, 1, 6;
            endofverify;
        endofsts;
        sts NRZ_L;
            verifytbl 1;
                verify 1, SS-TCRMOD.DATA_MODE, EQ, NRZ_L, 1, 6;
            endofverify;
        endofsts;
        sts NRZ_M;
            verifytbl 1;
                verify 1, SS-TCRMOD.DATA_MODE, EQ, NRZ_M, 1, 6;
            endofverify;
        endofsts;
        sts NRZ_S;
            verifytbl 1;
                verify 1, SS-TCRMOD.DATA_MODE, EQ, NRZ_S, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

ctl SS-TCRMOD.DATA_SOURCE, 0x00, ;    /*(10)*/
    param 1, s, , S, ;
        sts FRAME-ZERO;
            verifytbl 1;
                verify 1, SS-TCRMOD.DATA_SOURCE, EQ, FRAME-ZERO, 1, 6;
            endofverify;
        endofsts;
        sts FRAME-PN;
            verifytbl 1;
                verify 1, SS-TCRMOD.DATA_SOURCE, EQ, FRAME-PN, 1, 6;
            endofverify;
        endofsts;
        sts LAN(SIM);
            verifytbl 1;
                verify 1, SS-TCRMOD.DATA_SOURCE, EQ, LAN(SIM), 1, 6;
            endofverify;
        endofsts;
        sts LAN(CMD);
            verifytbl 1;
                verify 1, SS-TCRMOD.DATA_SOURCE, EQ, LAN(CMD), 1, 6;
            endofverify;
        endofsts;
        sts PN;
            verifytbl 1;
                verify 1, SS-TCRMOD.DATA_SOURCE, EQ, PN, 1, 6;
            endofverify;
        endofsts;
        sts ZERO;
            verifytbl 1;
                verify 1, SS-TCRMOD.DATA_SOURCE, EQ, ZERO, 1, 6;
            endofverify;
        endofsts;
        sts DOT;
            verifytbl 1;
                verify 1, SS-TCRMOD.DATA_SOURCE, EQ, DOT, 1, 6;
            endofverify;
        endofsts;
        sts EXTERNAL;
            verifytbl 1;
                verify 1, SS-TCRMOD.DATA_SOURCE, EQ, EXTERNAL, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

ctl SS-TCRMOD.CLK_INPUT, 0x00, ;    /*(10)*/
    param 1, s, , S, ;
        sts INTERNAL;
            verifytbl 1;
                verify 1, SS-TCRMOD.CLK_INPUT, EQ, INTERNAL, 1, 6;
            endofverify;
        endofsts;
        sts EXTERNAL;
            verifytbl 1;
                verify 1, SS-TCRMOD.CLK_INPUT, EQ, EXTERNAL, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;


ctl SS-TCRMOD.PLOP, 0x00, ;    /*(20)*/
    param 1, s, , S, ;
        sts PLOP-1;
            verifytbl 1;
                verify 1, SS-TCRMOD.PLOP, EQ, PLOP-1, 1, 6;
            endofverify;
        endofsts;
        sts PLOP-2;
            verifytbl 1;
                verify 1, SS-TCRMOD.PLOP, EQ, PLOP-2, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

ctl SS-TCRMOD.PWB_RESET_BB_I/F, 0x00, ; /* (30) */
    param 1, , , , ;
        noprm;
        endofnoprm;
    endofparam;
end;

ctl SS-TCRMOD.PWB_RESET_CMD_MODEM, 0x00, ;    /*(30)*/
    param 1, , , , ;
        noprm;
        endofnoprm;
    endofparam;
end;

ctl SS-TCRMOD.FRAME_PACKING, 0x00, ; /* (37) */
    param 1, u, 4, B, 4;
        val 1, 1250;
            verifytbl 1;
                verify 1, SS-TCRMOD.FRAME_PACKING, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

//ctl SS-TCRMOD.FRAME_PACKING, 0x00, ; /* (37) */
//    param 1, u, 2, B, 2;
//        val 1, 10;
//            verifytbl 1;
//                verify 1, SS-TCRMOD.FRAME_PACKING, EQ, *, 1, 5;
//            endofverify;
//        endofval;
//    endofparam;
//end;

ctl SS-TCRMOD.RNG_MOD_INDEX, 0x00, ;    /*(38)*/
    param 1, f, 1.2, A, 1.2;
        val 0.00, 1.50;
            verifytbl 1;
                verify 1, SS-TCRMOD.RNG_MOD_INDEX, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;


ctl SS-TCRMOD.CMD_MOD_INDEX, 0x00, ;    /*(38)*/
    param 1, f, 1.2, A, 1.2;
        val 0.00, 1.50;
            verifytbl 1;
                verify 1, SS-TCRMOD.CMD_MOD_INDEX, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

ctl SS-TCRMOD.BIT_RATE, 0x00, ;    /*(39)(40)*/
    param 1, f, 7.3, A, 7.3;
        val 5.000, 2400000.000;
            verifytbl 1;
                verify 1, SS-TCRMOD.BIT_RATE, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;       

ctl SS-TCRMOD.SUB_CARR, 0x00, ;    /*(41)(42)*/
    param 1, f, 7.3, A, 7.3;
        val 0.001, 2400000.000;
            verifytbl 1;
                verify 1, SS-TCRMOD.SUB_CARR, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

ctl SS-TCRMOD.IF_CENTER_FREQ, 0x00, ;    /*(43)*/
    param 1, f, 2.2, A, 2.2;
        val 66.00, 74.00;
            verifytbl 1;
                verify 1, SS-TCRMOD.IF_CENTER_FREQ, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

ctl SS-TCRMOD.SWEEP_BAND, 0x00, ;    /*(44)*/
    param 1, u, 6, B, 6;
        val 0, 250000;
            verifytbl 1;
                verify 1, SS-TCRMOD.SWEEP_BAND, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

ctl SS-TCRMOD.SWEEP_TIME, 0x00, ;    /*(45)*/
    param 1, f, 4.3, A, 4.3;
        val 0.001, 1000.000;
            verifytbl 1;
                verify 1, SS-TCRMOD.SWEEP_TIME, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

ctl SS-TCRMOD.FRM_WORD_LEN, 0x00, ;    /*(48)*/
	param 1, u, 4, A, 4;
		val 8, 2048;
			verifytbl 1;
				verify 1, SS-TCRMOD.FRM_WORD_LEN, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl SS-TCRMOD.FRM_SYNC_PATTERN, 0x00, ;    /*(48)(49)*/
	param 1, x, 10, A, 10;
		val 0X00000000, 0XFFFFFFFF;
			verifytbl 1;
				verify 1, SS-TCRMOD.FRM_SYNC_PATTERN, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl SS-TCRMOD.FRM_SYNC_LEN, 0x00, ;    /*(50)*/
	param 1, u, 2, A, 2;
		val 8, 32;
			verifytbl 1;
				verify 1, SS-TCRMOD.FRM_SYNC_LEN, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl SS-TCRMOD.ACQ_SEQ_PATTERN, 0x00, ;    /*(51)*/
    param 1, s, , S, ;
        sts 11;
            verifytbl 1;
                verify 1, SS-TCRMOD.ACQ_SEQ_PATTERN, EQ, 11, 1, 6;
            endofverify;
        endofsts;
        sts 10;
            verifytbl 1;
                verify 1, SS-TCRMOD.ACQ_SEQ_PATTERN, EQ, 10, 1, 6;
            endofverify;
        endofsts;
        sts 01;
            verifytbl 1;
                verify 1, SS-TCRMOD.ACQ_SEQ_PATTERN, EQ, 01, 1, 6;
            endofverify;
        endofsts;
        sts 00;
            verifytbl 1;
                verify 1, SS-TCRMOD.ACQ_SEQ_PATTERN, EQ, 00, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

ctl SS-TCRMOD.ACQ_SEQ_LEN, 0x00, ;    /*(51)*/
    param 1, u, 4, A, 4;
        val 0, 1024;
            verifytbl 1;
                verify 1, SS-TCRMOD.ACQ_SEQ_LEN, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

ctl SS-TCRMOD.OPT1_PATTERN, 0x00, ;    /*(52)*/
    param 1, s, , S, ;
        sts 11;
            verifytbl 1;
                verify 1, SS-TCRMOD.OPT1_PATTERN, EQ, 11, 1, 6;
            endofverify;
        endofsts;
        sts 10;
            verifytbl 1;
                verify 1, SS-TCRMOD.OPT1_PATTERN, EQ, 10, 1, 6;
            endofverify;
        endofsts;
        sts 01;
            verifytbl 1;
                verify 1, SS-TCRMOD.OPT1_PATTERN, EQ, 01, 1, 6;
            endofverify;
        endofsts;
        sts 00;
            verifytbl 1;
                verify 1, SS-TCRMOD.OPT1_PATTERN, EQ, 00, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

ctl SS-TCRMOD.OPT1_LEN, 0x00, ;    /*(52)*/
    param 1, u, 4, A, 4;
        val 0, 1024;
            verifytbl 1;
                verify 1, SS-TCRMOD.OPT1_LEN, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

ctl SS-TCRMOD.OPT2_PATTERN, 0x00, ;    /*(53)*/
    param 1, s, , S, ;
        sts 11;
            verifytbl 1;
                verify 1, SS-TCRMOD.OPT2_PATTERN, EQ, 11, 1, 6;
            endofverify;
        endofsts;
        sts 10;
            verifytbl 1;
                verify 1, SS-TCRMOD.OPT2_PATTERN, EQ, 10, 1, 6;
            endofverify;
        endofsts;
        sts 01;
            verifytbl 1;
                verify 1, SS-TCRMOD.OPT2_PATTERN, EQ, 01, 1, 6;
            endofverify;
        endofsts;
        sts 00;
            verifytbl 1;
                verify 1, SS-TCRMOD.OPT2_PATTERN, EQ, 00, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

ctl SS-TCRMOD.OPT2_LEN, 0x00, ;    /*(54)*/
    param 1, u, 4, A, 4;
        val 0, 1024;
            verifytbl 1;
                verify 1, SS-TCRMOD.OPT2_LEN, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

ctl SS-TCRMOD.START_SEQ_BIT_LEN, 0x00, ;    /*(58)*/
    param 1, u, 2, A, 2;
        val 0, 64;
            verifytbl 1;
                verify 1, SS-TCRMOD.START_SEQ_BIT_LEN, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

ctl SS-TCRMOD.START_SEQ_PATTERN1, 0x00, ;    /*(58)(59)(60)*/
	param 1, x, 10, A, 10;
		val 0X00000000, 0XFFFFFFFF;
			verifytbl 1;
				verify 1, SS-TCRMOD.START_SEQ_PATTERN1, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl SS-TCRMOD.START_SEQ_PATTERN2, 0x00, ;    /*(58)(59)(60)*/
	param 1, x, 10, A, 10;
		val 0X00000000, 0XFFFFFFFF;
			verifytbl 1;
				verify 1, SS-TCRMOD.START_SEQ_PATTERN2, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl SS-TCRMOD.TAIL_SEQ_BIT_LEN, 0x00, ;    /*(61)*/
    param 1, u, 2, A, 2;
        val 0, 64;
            verifytbl 1;
                verify 1, SS-TCRMOD.TAIL_SEQ_BIT_LEN, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

ctl SS-TCRMOD.TAIL_SEQ_PATTERN1, 0x00, ;    /*(61)(62)(63)*/
	param 1, x, 10, A, 10;
		val 0X00000000, 0XFFFFFFFF;
			verifytbl 1;
				verify 1, SS-TCRMOD.TAIL_SEQ_PATTERN1, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl SS-TCRMOD.TAIL_SEQ_PATTERN2, 0x00, ;    /*(61)(62)(63)*/
	param 1, x, 10, A, 10;
		val 0X00000000, 0XFFFFFFFF;
			verifytbl 1;
				verify 1, SS-TCRMOD.TAIL_SEQ_PATTERN2, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

ctl SS-TCRMOD.SUB_ID_WORD_LOC, 0x00, ; /* (68) */
    param 1, u, 4, A, 4;
        val 0, 1279;
            verifytbl 1;
                verify 1, SS-TCRMOD.SUB_ID_WORD_LOC, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

ctl SS-TCRMOD.SUB_FRAME_WORD_LEN, 0x00, ; /* (69) */
    param 1, u, 4, A, 4;
        val 0, 2048;
            verifytbl 1;
                verify 1, SS-TCRMOD.SUB_FRAME_WORD_LEN, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

ctl SS-TCRMOD.SUB_ID_BIT_LEN, 0x00, ; /* (70) */
    param 1, u, 2, A, 2;
        val 0, 16;
            verifytbl 1;
                verify 1, SS-TCRMOD.SUB_ID_BIT_LEN, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

ctl SS-TCRMOD.SUB_ID_BIT_LOC, 0x00, ; /* (70) */
    param 1, u, 2, A, 2;
        val 0, 15;
            verifytbl 1;
                verify 1, SS-TCRMOD.SUB_ID_BIT_LOC, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

ctl SS-TCRMOD.PREDGET, 0x00, ;
    param 1, P, 14, Z, ;
        sts *;
        endofsts;
    endofparam;
end;

ctl SS-TCRMOD.STT_FREQ_UP, 0x00, ; 
    param 1, u, 10, B, 10;
        val 2025000000, 2120000000;
        endofval;
    endofparam;
end;

ctl SS-TCRMOD.TIME_OFFSET, 0x00, ;
    param 1, s, 6, Z, ;
        sts *;
            verifytbl 1;
                verify 1, SS-TCRMOD.TIME_OFFSET, EQ, *, 1, 5;
            endofverify;
        endofsts;
    endofparam;
end;

ctl SS-TCRMOD.FREQ_OFFSET, 0x00, ;
    param 1, d, 9, B, 9;
        val -10000000, +10000000;
            verifytbl 1;
                verify 1, SS-TCRMOD.FREQ_OFFSET, EQ, *, 1, 5;
            endofverify;
        endofval;
    endofparam;
end;

ctl SS-TCRMOD.DOPP_FREQ, 0x00, ;
    param 1, d, 9, B, 9;
        val -10000000, +10000000;
            verifytbl 1;
                verify 1, SS-TCRMOD.DOPP_FREQ, EQ, *, 1, 5;
            endofverify;
        endofval;
    endofparam;
end;

//ctl SS-TCRMOD.CONT_MODE, 0x00, ;    /*(1)*/
//    param 1, s, , S, ;
//        sts REMOTE;
//            verifytbl 1;
//                verify 1, SS-TCRMOD.CONT_MODE, EQ,REMOTE, 1, 6;
//            endofverify;
//        endofsts;
//        sts LOCAL;
//            verifytbl 1;
//                verify 1, SS-TCRMOD.CONT_MODE, EQ, LOCAL, 1, 6;
//            endofverify;
//        endofsts;
//        sts MAINT;
//            verifytbl 1;
//                verify 1, SS-TCRMOD.CONT_MODE, EQ, MAINT, 1, 6;
//            endofverify;
//        endofsts;
//    endofparam;
//end;

//  /*(4)*/

// /*(5)*/

//ctl SS-TCRMOD.DIF_CODING, 0x00, ;    /*(7)*/
//    param 1, s, , S, ;
//        sts ON;
//            verifytbl 1;
//                verify 1, SS-TCRMOD.DIF_CODING, EQ, ON, 1, 6;
//            endofverify;
//        endofsts;
//        sts OFF;
//            verifytbl 1;
//                verify 1, SS-TCRMOD.DIF_CODING, EQ, OFF, 1, 6;
//            endofverify;
//        endofsts;
//    endofparam;
//end;

//ctl SS-TCRMOD.BER_CONT_SYNC, 0x00, ;    /*(13)*/
//    param 1, s, , S, ;
//        sts SYNC;
//            verifytbl 1;
//                verify 1, SS-TCRMOD.BER_CONT_SYNC, EQ, SYNC, 1, 6;
//            endofverify;
//        endofsts;
//    endofparam;
//end;

//ctl SS-TCRMOD.BER_CONT, 0x00, ;    /*(13)*/
//    param 1, s, , S, ;
//        sts INVERT;
//            verifytbl 1;
//                verify 1, SS-TCRMOD.BER_CONT, EQ, INVERT, 1, 6;
//            endofverify;
//        endofsts;
//        sts NORMAL;
//            verifytbl 1;
//                verify 1, SS-TCRMOD.BER_CONT, EQ, NORMAL, 1, 6;
//            endofverify;
//        endofsts;
//    endofparam;
//end;

//ctl SS-TCRMOD.BER_CONT_START, 0x00, ;    /*(13)*/
//    param 1, s, , S, ;
//        sts START;
//            verifytbl 1;
//                verify 1, SS-TCRMOD.BER_CONT_START, EQ, START, 1, 6;
//            endofverify;
//        endofsts;
//        sts STOP;
//            verifytbl 1;
//                verify 1, SS-TCRMOD.BER_CONT_START, EQ, STOP, 1, 6;
//            endofverify;
//        endofsts;
//    endofparam;
//end;


ctl SS-TCRMOD.RS_CODING, 0x00, ;    /*(15)*/
    param 1, s, , S, ;
        sts ON;
            verifytbl 1;
                verify 1, SS-TCRMOD.RS_CODING, EQ, ON, 1, 6;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, SS-TCRMOD.RS_CODING, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

ctl SS-TCRMOD.RDM_RTN_FWD, 0x00, ;    /*(15)*/
    param 1, s, , S, ;
        sts RTN;
            verifytbl 1;
                verify 1, SS-TCRMOD.RDM_RTN_FWD, EQ, RTN, 1, 6;
            endofverify;
        endofsts;
//        sts FWD;
//            verifytbl 1;
//                verify 1, SS-TCRMOD.RDM_RTN_FWD, EQ, FWD, 1, 6;
//            endofverify;
//        endofsts;
    endofparam;
end;

ctl SS-TCRMOD.RANDOMIZE, 0x00, ;    /*(15)*/
    param 1, s, , S, ;
        sts ON;
            verifytbl 1;
                verify 1, SS-TCRMOD.RANDOMIZE, EQ, ON, 1, 6;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, SS-TCRMOD.RANDOMIZE, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

ctl SS-TCRMOD.INTERLEAVE_FORMAT, 0x00, ;    /*(16)*/
    param 1, s, , S, ;
        sts NORMAL;
            verifytbl 1;
                verify 1, SS-TCRMOD.INTERLEAVE_FORMAT, EQ, NORMAL, 1, 6;
            endofverify;
        endofsts;
        sts SHORT;
            verifytbl 1;
                verify 1, SS-TCRMOD.INTERLEAVE_FORMAT, EQ, SHORT, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

ctl SS-TCRMOD.INTERLEAVE_NUM, 0x00, ;    /*(16)*/
    param 1, s, , S, ;
        sts 1;
            verifytbl 1;
                verify 1, SS-TCRMOD.INTERLEAVE_NUM, EQ, 1, 1, 6;
            endofverify;
        endofsts;
        sts 2;
            verifytbl 1;
                verify 1, SS-TCRMOD.INTERLEAVE_NUM, EQ, 2, 1, 6;
            endofverify;
        endofsts;
        sts 3;
            verifytbl 1;
                verify 1, SS-TCRMOD.INTERLEAVE_NUM, EQ, 3, 1, 6;
            endofverify;
        endofsts;
        sts 4;
            verifytbl 1;
                verify 1, SS-TCRMOD.INTERLEAVE_NUM, EQ, 4, 1, 6;
            endofverify;
        endofsts;
        sts 5;
            verifytbl 1;
                verify 1, SS-TCRMOD.INTERLEAVE_NUM, EQ, 5, 1, 6;
            endofverify;
        endofsts;
    endofparam;
//  param 1, u, 6, A, 6;
//      val 1, 5;
//          verifytbl 1;
//              verify 1, SS-TCRMOD.INTERLEAVE_NUM, EQ, *, 1, 6;
//          endofverify;
//      endofval;
//  endofparam;
end;

ctl SS-TCRMOD.RS/CRC, 0x00, ; /* (17) */
/* RSの制御はFCの特殊処理で連動。HRS,SGもFCでパラメータに応じて設定する */
    param 1, s, , S, ;
        sts RS_ON/CRC_OFF;
            verifytbl 1*2;
                verify 1, SS-TCRMOD.RS_CODING, EQ, ON , 1, 6;
                verify 2, SS-TCRMOD.CRC      , EQ, OFF, 1, 6;
            endofverify;
        endofsts;
        sts RS_OFF/CRC_ON;
            verifytbl 1*2;
                verify 1, SS-TCRMOD.RS_CODING, EQ, OFF, 1, 6;
                verify 2, SS-TCRMOD.CRC      , EQ, ON , 1, 6;
            endofverify;
        endofsts;
        sts RS_OFF/CRC_OFF;
            verifytbl 1*2;
                verify 1, SS-TCRMOD.RS_CODING, EQ, OFF, 1, 6;
                verify 2, SS-TCRMOD.CRC      , EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

//ctl SS-TCRMOD.HRS, 0x00, ; /* (17) */
//    param 1, s, , S, ;
//        sts ON;
//            verifytbl 1;
//                verify 1, SS-TCRMOD.HRS, EQ, ON, 1, 6;
//            endofverify;
//        endofsts;
//        sts OFF;
//            verifytbl 1;
//                verify 1, SS-TCRMOD.HRS, EQ, OFF, 1, 6;
//            endofverify;
//        endofsts;
//    endofparam;
//end;

ctl SS-TCRMOD.TONE_FREQ, 0x00, ;    /*(18)*/
    param 1, s, , S, ;
        sts 100kHz;
            verifytbl 1;
                verify 1, SS-TCRMOD.TONE_FREQ, EQ, 100kHz, 1, 6;
            endofverify;
        endofsts;
        sts 500kHz;
            verifytbl 1;
                verify 1, SS-TCRMOD.TONE_FREQ, EQ, 500kHz, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;


//ctl SS-TCRMOD.COUNT_CLEAR, 0x00, ;    /*(31)*/
//    param 1, s, , S, ;
//        sts CLEAR;
//            verifytbl 1;
//                verify 1, SS-TCRMOD.COUNT_CLEAR, EQ, CLEAR, 1, 6;
//            endofverify;
//        endofsts;
//        sts NORMAL;
//            verifytbl 1;
//                verify 1, SS-TCRMOD.COUNT_CLEAR, EQ, NORMAL, 1, 6;
//            endofverify;
//        endofsts;
//    endofparam;
//end;


/* control */
/* SS-TCRDEM */

ctl SS-TCRDEM.CARR_REJECT, 0x00, ; /* (2) */
    param 1, , , , ;
        noprm;
        endofnoprm;
    endofparam;
end;

ctl SS-TCRDEM.MOD_FORMAT_MODE, 0x00, ; /* (3) */
     param 1, s, , S, ;
        sts PCM-QPSK;
            verifytbl 1;
                verify 1, SS-TCRDEM.MOD_FORMAT_MODE, EQ, PCM-QPSK, 1, 6;
            endofverify;
        endofsts; 
        sts PCM-BPSK;
            verifytbl 1;
                verify 1, SS-TCRDEM.MOD_FORMAT_MODE, EQ, PCM-BPSK, 1, 6;
            endofverify;
        endofsts;
        sts PCM-PSK-PM;
            verifytbl 1;
                verify 1, SS-TCRDEM.MOD_FORMAT_MODE, EQ, PCM-PSK-PM, 1, 6;
            endofverify;
        endofsts;
        sts PCM-PM;
            verifytbl 1;
                verify 1, SS-TCRDEM.MOD_FORMAT_MODE, EQ, PCM-PM, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

ctl SS-TCRDEM.CARR_LOOP, 0x00, ; /* (4) */
    param 1, s, , S, ;
        sts 1000Hz;
            verifytbl 1;
                verify 1, SS-TCRDEM.CARR_LOOP, EQ, 1000Hz, 1, 6;
            endofverify;
        endofsts;
        sts 300Hz;
            verifytbl 1;
                verify 1, SS-TCRDEM.CARR_LOOP, EQ, 300Hz, 1, 6;
            endofverify;
        endofsts;
        sts 100Hz;
            verifytbl 1;
                verify 1, SS-TCRDEM.CARR_LOOP, EQ, 100Hz, 1, 6;
            endofverify;
        endofsts;
        sts 30Hz;
            verifytbl 1;
                verify 1, SS-TCRDEM.CARR_LOOP, EQ, 30Hz, 1, 6;
            endofverify;
        endofsts;
//        sts 10Hz;
//            verifytbl 1;
//                verify 1, SS-TCRDEM.CARR_LOOP, EQ, 10Hz, 1, 6;
//            endofverify;
//        endofsts;
//        sts 3Hz;
//            verifytbl 1;
//                verify 1, SS-TCRDEM.CARR_LOOP, EQ, 3Hz, 1, 6;
//            endofverify;
//        endofsts;
//        sts 1Hz;
//            verifytbl 1;
//                verify 1, SS-TCRDEM.CARR_LOOP, EQ, 1Hz, 1, 6;
//            endofverify;
//        endofsts;
        sts WIDE;
            verifytbl 1;
                verify 1, SS-TCRDEM.CARR_LOOP, EQ, WIDE, 1, 6;
            endofverify;
        endofsts;
        sts MEDIUM;
            verifytbl 1;
                verify 1, SS-TCRDEM.CARR_LOOP, EQ, MEDIUM, 1, 6;
            endofverify;
        endofsts;
        sts NARROW;
            verifytbl 1;
                verify 1, SS-TCRDEM.CARR_LOOP, EQ, NARROW, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

ctl SS-TCRDEM.AGC_LOOP, 0x00, ; /* (5) */
     param 1, s, , S, ;
        sts 100Hz;
            verifytbl 1;
                verify 1, SS-TCRDEM.AGC_LOOP, EQ, 100Hz, 1, 6;
            endofverify;
        endofsts;
        sts 30Hz;
            verifytbl 1;
                verify 1, SS-TCRDEM.AGC_LOOP, EQ, 30Hz, 1, 6;
            endofverify;
        endofsts;
        sts 10Hz;
            verifytbl 1;
                verify 1, SS-TCRDEM.AGC_LOOP, EQ, 10Hz, 1, 6;
            endofverify;
        endofsts;
        sts 3Hz;
            verifytbl 1;
                verify 1, SS-TCRDEM.AGC_LOOP, EQ, 3Hz, 1, 6;
            endofverify;
        endofsts;
//        sts 1Hz;
//            verifytbl 1;
//                verify 1, SS-TCRDEM.AGC_LOOP, EQ, 1Hz, 1, 6;
//            endofverify;
//        endofsts;
//        sts 0.3Hz;
//            verifytbl 1;
//                verify 1, SS-TCRDEM.AGC_LOOP, EQ, 0.3Hz, 1, 6;
//            endofverify;
//        endofsts;
//        sts 0.1Hz;
//            verifytbl 1;
//                verify 1, SS-TCRDEM.AGC_LOOP, EQ, 0.1Hz, 1, 6;
//            endofverify;
//        endofsts;
        sts WIDE;
            verifytbl 1;
                verify 1, SS-TCRDEM.AGC_LOOP, EQ, WIDE, 1, 6;
            endofverify;
        endofsts;
        sts MEDIUM;
            verifytbl 1;
                verify 1, SS-TCRDEM.AGC_LOOP, EQ, MEDIUM, 1, 6;
            endofverify;
        endofsts;
        sts NARROW;
            verifytbl 1;
                verify 1, SS-TCRDEM.AGC_LOOP, EQ, NARROW, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

ctl SS-TCRDEM.VITERBI_DECODE, 0x00, ; /* (6) */
    param 1, s, , S, ;
        sts ON(ESA);
            verifytbl 1;
                verify 1, SS-TCRDEM.VITERBI_DECODE, EQ, ON(ESA), 1, 6;
            endofverify;
        endofsts;
        sts ON(JPL);
            verifytbl 1;
                verify 1, SS-TCRDEM.VITERBI_DECODE, EQ, ON(JPL), 1, 6;
            endofverify;
        endofsts;
        sts ON(CCSDS);
            verifytbl 1;
                verify 1, SS-TCRDEM.VITERBI_DECODE, EQ, ON(CCSDS), 1, 6;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, SS-TCRDEM.VITERBI_DECODE, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

ctl SS-TCRDEM.FILTER_STYLE, 0x00, ; /* (8) */
     param 1, s, , S, ;
        sts ROOT_NYQ;
            verifytbl 1;
                verify 1, SS-TCRDEM.FILTER_STYLE, EQ, ROOT_NYQ, 1, 6;
            endofverify;
        endofsts;
        sts LINEAR_PHASE;
            verifytbl 1;
                verify 1, SS-TCRDEM.FILTER_STYLE, EQ, LINEAR_PHASE, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

ctl SS-TCRDEM.DATA_MODE, 0x00, ; /* (9) */
    param 1, s, , S, ;
        sts BiPH_L;
            verifytbl 1;
                verify 1, SS-TCRDEM.DATA_MODE, EQ, BiPH_L, 1, 6;
            endofverify;
        endofsts;
        sts BiPH_M;
            verifytbl 1;
                verify 1, SS-TCRDEM.DATA_MODE, EQ, BiPH_M, 1, 6;
            endofverify;
        endofsts;
        sts BiPH_S;
            verifytbl 1;
                verify 1, SS-TCRDEM.DATA_MODE, EQ, BiPH_S, 1, 6;
            endofverify;
        endofsts;
        sts NRZ_L;
            verifytbl 1;
                verify 1, SS-TCRDEM.DATA_MODE, EQ, NRZ_L, 1, 6;
            endofverify;
        endofsts;
        sts NRZ_M;
            verifytbl 1;
                verify 1, SS-TCRDEM.DATA_MODE, EQ, NRZ_M, 1, 6;
            endofverify;
        endofsts;
        sts NRZ_S;
            verifytbl 1;
                verify 1, SS-TCRDEM.DATA_MODE, EQ, NRZ_S, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

//ctl SS-TCRDEM.TLM_ROUTE, 0x00, ; /* (10) */
//    param 1, s, , S, ;
//        sts RD;
//            verifytbl 1;
//                verify 1, SS-TCRDEM.TLM_ROUTE, EQ, RD, 1, 6;
//            endofverify;
//        endofsts;
//        sts RX;
//            verifytbl 1;
//                verify 1, SS-TCRDEM.TLM_ROUTE, EQ, RX, 1, 6;
//            endofverify;
//        endofsts;
//    endofparam;
//end;

ctl SS-TCRDEM.BIT_LOOP, 0x00, ; /* (11) */
     param 1, s, , S, ;
        sts NARROW;
            verifytbl 1;
                verify 1, SS-TCRDEM.BIT_LOOP, EQ, NARROW, 1, 6;
            endofverify;
        endofsts;
        sts MEDIUM;
            verifytbl 1;
                verify 1, SS-TCRDEM.BIT_LOOP, EQ, MEDIUM, 1, 6;
            endofverify;
        endofsts;
        sts WIDE;
            verifytbl 1;
                verify 1, SS-TCRDEM.BIT_LOOP, EQ, WIDE, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

ctl SS-TCRDEM.SUB_CARR_LOOP, 0x00, ; /* (12) */
     param 1, s, , S, ;
        sts NARROW;
            verifytbl 1;
                verify 1, SS-TCRDEM.SUB_CARR_LOOP, EQ, NARROW, 1, 6;
            endofverify;
        endofsts;
        sts MEDIUM;
            verifytbl 1;
                verify 1, SS-TCRDEM.SUB_CARR_LOOP, EQ, MEDIUM, 1, 6;
            endofverify;
        endofsts;
        sts WIDE;
            verifytbl 1;
                verify 1, SS-TCRDEM.SUB_CARR_LOOP, EQ, WIDE, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

ctl SS-TCRDEM.TONE_FREQ, 0x00, ; /* (18) */
    param 1, s, , S, ;
        sts 100kHz;
            verifytbl 1;
                verify 1, SS-TCRDEM.TONE_FREQ, EQ, 100kHz, 1, 6;
            endofverify;
        endofsts;
        sts 500kHz;
            verifytbl 1;
                verify 1, SS-TCRDEM.TONE_FREQ, EQ, 500kHz, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

ctl SS-TCRDEM.1_2WAY_MODE, 0x00, ; /* (19) */
    param 1, s, , S, ;
        sts 1WAY;
            verifytbl 1;
                verify 1, SS-TCRDEM.1_2WAY_MODE, EQ, 1WAY, 1, 6;
            endofverify;
        endofsts;
        sts 2WAY;
            verifytbl 1;
                verify 1, SS-TCRDEM.1_2WAY_MODE, EQ, 2WAY, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

ctl SS-TCRDEM.AID_MODE, 0x00, ; /* (20) */
    param 1, s, , S, ;
        sts ON;
            verifytbl 1;
                verify 1, SS-TCRDEM.AID_MODE, EQ, ON, 1, 6;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, SS-TCRDEM.AID_MODE, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

ctl SS-TCRDEM.SAMPLE, 0x00, ; /* (21) */
    param 1, s, , S, ;
        sts 1/60;
            verifytbl 1;
                verify 1, SS-TCRDEM.SAMPLE, EQ, 1/60, 1, 6;
            endofverify;
        endofsts;
        sts 1/20;
            verifytbl 1;
                verify 1, SS-TCRDEM.SAMPLE, EQ, 1/20, 1, 6;
            endofverify;
        endofsts;
        sts 1/10;
            verifytbl 1;
                verify 1, SS-TCRDEM.SAMPLE, EQ, 1/10, 1, 6;
            endofverify;
        endofsts;
        sts 1/2;
            verifytbl 1;
                verify 1, SS-TCRDEM.SAMPLE, EQ, 1/2, 1, 6;
            endofverify;
        endofsts;
        sts 1;
            verifytbl 1;
                verify 1, SS-TCRDEM.SAMPLE, EQ, 1, 1, 6;
            endofverify;
        endofsts;
        sts 10;
            verifytbl 1;
                verify 1, SS-TCRDEM.SAMPLE, EQ, 10, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

ctl SS-TCRDEM.RNG_PLL, 0x00, ; /* (22) */
    param 1, s, , S, ;
        sts NARROW;
            verifytbl 1;
                verify 1, SS-TCRDEM.RNG_PLL, EQ, NARROW, 1, 6;
            endofverify;
        endofsts;
        sts MEDIUM;
            verifytbl 1;
                verify 1, SS-TCRDEM.RNG_PLL, EQ, MEDIUM, 1, 6;
            endofverify;
        endofsts;
        sts WIDE;
            verifytbl 1;
                verify 1, SS-TCRDEM.RNG_PLL, EQ, WIDE, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

ctl SS-TCRDEM.TRAPON_RATIO, 0x00, ; /* (23) */
    param 1, s, , S, ;
        sts INCOH;
            verifytbl 1;
                verify 1, SS-TCRDEM.TRAPON_RATIO, EQ, INCOH, 1, 6;
            endofverify;
        endofsts;
        sts 240/221;
            verifytbl 1;
                verify 1, SS-TCRDEM.TRAPON_RATIO, EQ, 240/221, 1, 6;
            endofverify;
        endofsts;
        sts 900/221;
            verifytbl 1;
                verify 1, SS-TCRDEM.TRAPON_RATIO, EQ, 900/221, 1, 6;
            endofverify;
        endofsts;
        sts 880/749;
            verifytbl 1;
                verify 1, SS-TCRDEM.TRAPON_RATIO, EQ, 880/749, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

ctl SS-TCRDEM.RNG_CONT, 0x00, ; /* (24) */
    param 1, s, , S, ;
        sts START;
            verifytbl 1;
                verify 1, SS-TCRDEM.RNG_CONT, EQ, START, 1, 6;
            endofverify;
        endofsts;
        sts STOP;
            verifytbl 1;
                verify 1, SS-TCRDEM.RNG_CONT, EQ, STOP, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

ctl SS-TCRDEM.PWB_RESET_BB_I/F, 0x00, ; /* (30) */
    param 1, , , , ;
        noprm;
        endofnoprm;
    endofparam;
end;

ctl SS-TCRDEM.PWB_RESET_RNG_MODEM, 0x00, ; /* (30) */
    param 1, , , , ; 
        noprm;
        endofnoprm;
    endofparam;
end;

ctl SS-TCRDEM.PWB_RESET_TLM, 0x00, ; /* (30) */
    param 1, , , , ;
        noprm;
        endofnoprm;
    endofparam;
end;

ctl SS-TCRDEM.PWB_RESET_DEM, 0x00, ; /* (30) */
    param 1, , , , ;
        noprm;    
        endofnoprm;
    endofparam;
end;

ctl SS-TCRDEM.OPERATION, 0x00, ; /* (32) */
    param 1, s, , S, ;
        sts OPR;
            verifytbl 1;
                verify 1, SS-TCRDEM.OPERATION, EQ, OPR, 1, 6;
            endofverify;
        endofsts;
        sts CAL;
            verifytbl 1;
                verify 1, SS-TCRDEM.OPERATION, EQ, CAL, 1, 6;
            endofverify;
        endofsts;
   endofparam;
end;

ctl SS-TCRDEM.RNG_MOD_INDEX, 0x00, ; /* (38) */
    param 1, f, 1.2, A, 1.2;
        val 0.00, 1.50;
            verifytbl 1;
                verify 1, SS-TCRDEM.RNG_MOD_INDEX, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

ctl SS-TCRDEM.TLM_MOD_INDEX, 0x00, ; /* (38) */
    param 1, f, 1.2, A, 1.2;
        val 0.00, 1.50;
            verifytbl 1;
                verify 1, SS-TCRDEM.TLM_MOD_INDEX, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

ctl SS-TCRDEM.BIT_RATE, 0x00, ; /* (39) (40) */
    param 1, f, 7.3, A, 7.3;
        val 100.000, 2400000.000;
            verifytbl 1;
                verify 1, SS-TCRDEM.BIT_RATE, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

ctl SS-TCRDEM.SUB_CARR, 0x00, ; /* (41) (42) */
    param 1, f, 7.3, A, 7.3;
        val 0.001, 2400000.000;
            verifytbl 1;
                verify 1, SS-TCRDEM.SUB_CARR, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

ctl SS-TCRDEM.IF_CENTER_FREQ, 0x00, ; /* (43) */
    param 1, f, 2.2, A, 2.2;
        val 66.00, 74.00;
            verifytbl 1;
                verify 1, SS-TCRDEM.IF_CENTER_FREQ, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

ctl SS-TCRDEM.REF_FREQ_UP, 0x00, ; /* (44) (45) */
    param 1, f, 10.1, A, 10.1;
        val 2025000000.0, 2120000000.0;
            verifytbl 1;
                verify 1, SS-TCRDEM.REF_FREQ_UP, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

ctl SS-TCRDEM.REF_FREQ_DOWN, 0x00,  ; /* (46) (47) */
    param 1, f, 10.1, A, 10.1;
        val 2200000000.0, 2300000000.0;
            verifytbl 1;
                verify 1, SS-TCRDEM.REF_FREQ_DOWN, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

ctl SS-TCRDEM.INTEG_TIME, 0x00, ;  /* (53) */
    param 1, u, 2, B, 2;
        val 1, 30;
            verifytbl 1;
                verify 1, SS-TCRDEM.INTEG_TIME, EQ, *, 1, 5;
            endofverify;
        endofval;
    endofparam;
end;


ctl SS-TCRDEM.PREDGET, 0x00, ;
    param 1, P, 14, Z, ;
        sts *;
        endofsts;
    endofparam;
end;

ctl SS-TCRDEM.TIME_OFFSET, 0x00, ;
    param 1, s, 6, Z, ;
        sts *;
            verifytbl 1;
                verify 1, SS-TCRDEM.TIME_OFFSET, EQ, *, 1, 5;
            endofverify;
        endofsts;
    endofparam;
end;

ctl SS-TCRDEM.FREQ_OFFSET, 0x00, ;
    param 1, d, 9, B, 9;
        val -10000000, +10000000;
            verifytbl 1;
                verify 1, SS-TCRDEM.FREQ_OFFSET, EQ, *, 1, 5;
            endofverify;
        endofval;
    endofparam;
end;

ctl SS-TCRDEM.DOPP_FREQ, 0x00, ;
    param 1, d, 9, B, 9;
        val -10000000, +10000000;
            verifytbl 1;
                verify 1, SS-TCRDEM.DOPP_FREQ, EQ, *, 1, 5;
            endofverify;
        endofval;
    endofparam;
end;

ctl SS-TCRDEM.DIFF_CODING, 0x00, ; /* (7) */
    param 1, s, , S, ;
      sts ON;
        verifytbl 1;
           verify 1, SS-TCRDEM.DIFF_CODING, EQ, ON, 1, 6;
        endofverify;
      endofsts;
      sts OFF;
        verifytbl 1;
           verify 1, SS-TCRDEM.DIFF_CODING, EQ, OFF, 1, 6;
        endofverify;
      endofsts;
    endofparam;
end;

//S-TCRDEM.LEAP, 0x00, ; /* (10-1) */
//    param 1, s, , S, ;
//      sts ON;
//        verifytbl 1;
//           verify 1, SS-TCRDEM.LEAP, EQ, ON, 1, 6;
//        endofverify;
//      endofsts;
//      sts OFF;
//        verifytbl 1;
//           verify 1, SS-TCRDEM.LEAP, EQ, OFF, 1, 6;
//        endofverify;
//      endofsts;
//    endofparam;
//end;

//S-TCRDEM.LEAP_YEAR, 0x00, ; /* (10-2) */
//    param 1, s, , S, ;
//      sts ON;
//        verifytbl 1;
//           verify 1, SS-TCRDEM.LEAP_YEAR, EQ, ON, 1, 6;
//        endofverify;
//      endofsts;
//      sts OFF;
//        verifytbl 1;
//           verify 1, SS-TCRDEM.LEAP_YEAR, EQ, OFF, 1, 6;
//        endofverify;
//      endofsts;
//    endofparam;
//end;

//S-TCRDEM.LEAP_SECOND, 0x00, ; /* (10-3) */
//    param 1, s, , S, ;
//      sts ON;
//        verifytbl 1;
//           verify 1, SS-TCRDEM.LEAP_SECOND, EQ, ON, 1, 6;
//        endofverify;
//      endofsts;
//      sts OFF;
//        verifytbl 1;
//           verify 1, SS-TCRDEM.LEAP_SECOND, EQ, OFF, 1, 6;
//        endofverify;
//      endofsts;
//    endofparam;
//end;

//ctl SS-TCRDEM.BER_CONT_SYNC, 0x00, ; /* (13) */
//    param 1, s, , S, ;
//        sts SYNC;
//            verifytbl 1;
//                verify 1, SS-TCRDEM.BER_CONT_SYNC, EQ, SYNC, 1, 6;
//            endofverify;
//        endofsts;
//    endofparam;
//end;

//ctl SS-TCRDEM.BER_CONT, 0x00, ; /* (13) */
//     param 1, s, , S, ;
//        sts NORMAL;
//            verifytbl 1;
//                verify 1, SS-TCRDEM.BER_CONT, EQ, NORMAL, 1, 6;
//            endofverify;
//        endofsts;
//        sts INVERT;
//            verifytbl 1;
//                verify 1, SS-TCRDEM.BER_CONT, EQ, INVERT, 1, 6;
//            endofverify;
//        endofsts;
//        sts FRAME;
//            verifytbl 1;
//                verify 1, SS-TCRDEM.BER_CONT, EQ, FRAME, 1, 6;
//            endofverify;
//        endofsts;
//        sts FRAME-RS;
//            verifytbl 1;
//                verify 1, SS-TCRDEM.BER_CONT, EQ, FRAME-RS, 1, 6;
//           endofverify;
//        endofsts;
//    endofparam;
//end;

//ctl SS-TCRDEM.BER_CONT_START, 0x00, ; /* (13) */
//    param 1, s, , S, ;
//        sts START;
//            verifytbl 1;
//                verify 1, SS-TCRDEM.BER_CONT_START, EQ, START, 1, 6;
//            endofverify;
//        endofsts;
//        sts STOP;
//            verifytbl 1;
//                verify 1, SS-TCRDEM.BER_CONT_START, EQ, STOP, 1, 6;
//            endofverify;
//        endofsts;
//    endofparam;
//end;

//ctl SS-TCRDEM.FER_CONT_SYNC, 0x00, ; /* (14) */
//     param 1, s, , S, ;
//        sts SYNC;
//            verifytbl 1;
//                verify 1, SS-TCRDEM.FER_CONT_SYNC, EQ, SYNC, 1, 6;
//            endofverify;
//        endofsts;
//        sts ASYNC;
//            verifytbl 1;
//                verify 1, SS-TCRDEM.FER_CONT_SYNC, EQ, ASYNC, 1, 6;
//            endofverify;
//        endofsts;
//    endofparam;
//end;

//ctl SS-TCRDEM.FER_CONT_START, 0x00, ; /* (14) */
//    param 1, s, , S, ;
//        sts START;
//            verifytbl 1;
//                verify 1, SS-TCRDEM.FER_CONT_START, EQ, START, 1, 6;
//            endofverify;
//        endofsts;
//        sts STOP;
//            verifytbl 1;
//                verify 1, SS-TCRDEM.FER_CONT_START, EQ, STOP, 1, 6;
//            endofverify;
//        endofsts;
//    endofparam;
//end;

ctl SS-TCRDEM.RS_CODING, 0x00, ; /* (15) */
    param 1, s, , S, ;
        sts ON;
            verifytbl 1;
                verify 1, SS-TCRDEM.RS_CODING, EQ, ON, 1, 6;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, SS-TCRDEM.RS_CODING, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

ctl SS-TCRDEM.RANDOMIZE_RTN_FWD, 0x00, ; /* (15) */
    param 1, s, , S, ;
        sts RTN;
            verifytbl 1;
                verify 1, SS-TCRDEM.RANDOMIZE_RTN_FWD, EQ, RTN, 1, 6;
            endofverify;
        endofsts;
//        sts FWD;
//            verifytbl 1;
//                verify 1, SS-TCRDEM.RANDOMIZE_RTN_FWD, EQ, FWD, 1, 6;
//            endofverify;
//        endofsts;
    endofparam;
end;

ctl SS-TCRDEM.RANDOMIZE_ON_OFF, 0x00, ; /* (15) */
    param 1, s, , S, ;
        sts ON;
            verifytbl 1;
                verify 1, SS-TCRDEM.RANDOMIZE_ON_OFF, EQ, ON, 1, 6;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, SS-TCRDEM.RANDOMIZE_ON_OFF, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

ctl SS-TCRDEM.INTERLEAVE, 0x00, ; /* (16) */
    param 1, s, , S, ;
        sts SHORT;
            verifytbl 1;
                verify 1, SS-TCRDEM.INTERLEAVE, EQ, SHORT, 1, 6;
            endofverify;
        endofsts;
        sts NORMAL;
            verifytbl 1;
                verify 1, SS-TCRDEM.INTERLEAVE, EQ, NORMAL, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

ctl SS-TCRDEM.INTERLEAVE_NUM, 0x00, ; /* (16) */
    param 1, s, , S, ;
        sts 1;
            verifytbl 1;
                verify 1, SS-TCRDEM.INTERLEAVE_NUM, EQ, 1, 1, 6;
            endofverify;
        endofsts;
        sts 2;
            verifytbl 1;
                verify 1, SS-TCRDEM.INTERLEAVE_NUM, EQ, 2, 1, 6;
            endofverify;
        endofsts;
        sts 3;
            verifytbl 1;
                verify 1, SS-TCRDEM.INTERLEAVE_NUM, EQ, 3, 1, 6;
            endofverify;
        endofsts;
        sts 4;
            verifytbl 1;
                verify 1, SS-TCRDEM.INTERLEAVE_NUM, EQ, 4, 1, 6;
            endofverify;
        endofsts;
        sts 5;
            verifytbl 1;
                verify 1, SS-TCRDEM.INTERLEAVE_NUM, EQ, 5, 1, 6;
            endofverify;
        endofsts;
    endofparam;
//  param 1, u, 1, A, 1;
//      val 1, 5;
//          verifytbl 1;
//              verify 1, SS-TCRDEM.INTERLEAVE_NUM, EQ, *, 1, 6;
//          endofverify;
//      endofval;
//  endofparam;
end;

ctl SS-TCRDEM.RS/CRC, 0x00, ; /* (17) */
/* RSの制御はFCの特殊処理で連動。HRS,SGもFCでパラメータに応じて設定する */
    param 1, s, , S, ;
        sts RS_ON/CRC_OFF;
            verifytbl 1*2;
                verify 1, SS-TCRDEM.RS_CODING, EQ, ON , 1, 6;
                verify 2, SS-TCRDEM.CRC      , EQ, OFF, 1, 6;
            endofverify;
        endofsts;
        sts RS_OFF/CRC_ON;
            verifytbl 1*2;
                verify 1, SS-TCRDEM.RS_CODING, EQ, OFF, 1, 6;
                verify 2, SS-TCRDEM.CRC      , EQ, ON , 1, 6;
            endofverify;
        endofsts;
        sts RS_OFF/CRC_OFF;
            verifytbl 1*2;
                verify 1, SS-TCRDEM.RS_CODING, EQ, OFF, 1, 6;
                verify 2, SS-TCRDEM.CRC      , EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

//ctl SS-TCRDEM.HRS, 0x00, ; /* (17) */
//    param 1, s, , S, ;
//        sts ON;
//            verifytbl 1;
//                verify 1, SS-TCRDEM.HRS, EQ, ON, 1, 6;
//            endofverify;
//        endofsts;
//        sts OFF;
//            verifytbl 1;
//                verify 1, SS-TCRDEM.HRS, EQ, OFF, 1, 6;
//            endofverify;
//        endofsts;
//    endofparam;
//end;

//ctl SS-TCRDEM.SERVICE_GRADE, 0x00, ; /* (17) */
//    param 1, u, 1, A, 1;
//        val 2, 3;
//            verifytbl 1;
//                verify 1, SS-TCRDEM.SERVICE_GRADE, EQ, *, 1, 6;
//            endofverify;
//        endofval;
//    endofparam;
//end;

//ctl SS-TCRDEM.RS_COUNT_CLEAR, 0x00, ; /* (31) */
//     param 1, s, , S, ;
//        sts COUNT_CLEAR;
//            verifytbl 1;
//                verify 1, SS-TCRDEM.RS_COUNT_CLEAR, EQ, COUNT_CLEAR, 1, 6;
//            endofverify;
//        endofsts;
//        sts NORMAL;
//            verifytbl 1;
//                verify 1, SS-TCRDEM.RS_COUNT_CLEAR, EQ, NORMAL, 1, 6;
//            endofverify;
//       endofsts;
//    endofparam;
//end;


ctl SS-TCRDEM.FRAME_PACKING, 0x00, ; /* (37) */
    param 1, u, 3, B, 3;
        val 1, 256;
            verifytbl 1;
                verify 1, SS-TCRDEM.FRAME_PACKING, EQ, *, 1, 5;
            endofverify;
        endofval;
    endofparam;
end;


ctl SS-TCRDEM.FRAME_WORD_LEN, 0x00, ; /* (48) */
    param 1, u, 5, A, 5;
        val 0, 65535;
            verifytbl 1;
                verify 1, SS-TCRDEM.FRAME_WORD_LEN, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

ctl SS-TCRDEM.FRAME_SYNC_PATTERN, 0x00, ; /* (49) */
    param 1, x, 10, A, 10;
        val 0X00000000, 0XFFFFFFFF;
            verifytbl 1;
                verify 1, SS-TCRDEM.FRAME_SYNC_PATTERN, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

ctl SS-TCRDEM.ERR_PERMIT, 0x00, ; /* (50) */
    param 1, u, 1, A, 1;
        val 0, 9;
            verifytbl 1;
                verify 1, SS-TCRDEM.ERR_PERMIT, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

ctl SS-TCRDEM.SEARCH_TO_LOCK, 0x00, ; /* (50) */
    param 1, u, 2, A, 2;
        val 0, 15;
            verifytbl 1;
                verify 1, SS-TCRDEM.SEARCH_TO_LOCK, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

ctl SS-TCRDEM.LOCK_TO_SEARCH, 0x00, ; /* (50) */
    param 1, u, 2, A, 2;
        val 0, 15;
            verifytbl 1;
                verify 1, SS-TCRDEM.LOCK_TO_SEARCH, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

ctl SS-TCRDEM.FRAME_SYNC_LEN, 0x00, ; /* (50) */
    param 1, u, 2, A, 2;
        val 0, 32;
            verifytbl 1;
                verify 1, SS-TCRDEM.FRAME_SYNC_LEN, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

//ctl SS-TCRDEM.DATA_INPUT, 0x00, ; /* (51) */
//    param 1, s, , S, ;
//        sts RS422;
//            verifytbl 1;
//                verify 1, SS-TCRDEM.DATA_INPUT, EQ, RS422, 1, 6;
//            endofverify;
//        endofsts;
//        sts IF;
//            verifytbl 1;
//                verify 1, SS-TCRDEM.DATA_INPUT, EQ, IF, 1, 6;
//            endofverify;
//        endofsts;
//    endofparam;
//end;

/*  SS TCR RNG MODとしてSIDE TONE方式が加わることによる変更 */
ctl SS-TCRDEM.RNG_MODE, 0x00, ; /* (52) */
    param 1, s, , S, ;
        sts PN_CODE;
            verifytbl 1;
                verify 1, SS-TCRDEM.RNG_MODE, EQ, PN_CODE, 1, 6;
            endofverify;
        endofsts;
        sts SIDE_TONE;
            verifytbl 1;
                verify 1, SS-TCRDEM.RNG_MODE, EQ, SIDE_TONE, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

ctl SS-TCRDEM.SUB_ID_WORD_LOC, 0x00, ; /* (68) */
    param 1, u, 4, A, 4;
        val 0, 1279;
            verifytbl 1;
                verify 1, SS-TCRDEM.SUB_ID_WORD_LOC, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

ctl SS-TCRDEM.SUB_FRAME_WORD_LEN, 0x00, ; /* (69) */
    param 1, u, 4, A, 4;
        val 0, 2048;
            verifytbl 1;
                verify 1, SS-TCRDEM.SUB_FRAME_WORD_LEN, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

ctl SS-TCRDEM.SUB_SEARCH_TO_LOCK, 0x00, ; /* (69) */
    param 1, u, 2, A, 2;
        val 0, 15;
            verifytbl 1;
                verify 1, SS-TCRDEM.SUB_SEARCH_TO_LOCK, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

ctl SS-TCRDEM.SUB_LOCK_TO_SEARCH, 0x00, ; /* (69) */
    param 1, u, 2, A, 2;
        val 0, 15;
            verifytbl 1;
                verify 1, SS-TCRDEM.SUB_LOCK_TO_SEARCH, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

ctl SS-TCRDEM.SUB_ID_BIT_LEN, 0x00, ; /* (70) */
    param 1, u, 2, A, 2;
        val 0, 16;
            verifytbl 1;
                verify 1, SS-TCRDEM.SUB_ID_BIT_LEN, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

ctl SS-TCRDEM.SUB_ID_BIT_LOC, 0x00, ; /* (70) */
    param 1, u, 2, A, 2;
        val 0, 15;
            verifytbl 1;
                verify 1, SS-TCRDEM.SUB_ID_BIT_LOC, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/*** 2011-11-04 S帯BBE換装対応　追加 */
//ctl SS-TCRDEM.AID_MODE, 0x00, ; /* FC用制御 */
//    param 1, s, , S, ;
//        sts ON;
//            verifytbl 1;
//                verify 1, SS-TCRDEM.AID_MODE, EQ, ON, 1, 6;
//            endofverify;
//        endofsts;
//        sts OFF;
//            verifytbl 1;
//                verify 1, SS-TCRDEM.AID_MODE, EQ, OFF, 1, 6;
//            endofverify;
//        endofsts;
//    endofparam;
//end;

//ctl SS-TCRDEM.1_2WAY_MODE, 0x00, ; /* FC用制御 */
//    param 1, s, , S, ;
//        sts 1WAY;
//            verifytbl 1;
//                verify 1, SS-TCRDEM.1_2WAY_MODE, EQ, 1WAY, 1, 6;
//            endofverify;
//        endofsts;
//        sts 2WAY;
//            verifytbl 1;
//                verify 1, SS-TCRDEM.1_2WAY_MODE, EQ, 2WAY, 1, 6;
//            endofverify;
//        endofsts;
//    endofparam;
//end;


// ##### 2011/02/02 UDSC-KEISANKI KANSOU -START- ######
// ctl STLMIN.TLM_PASS_INIT, 0x00, ;
//    param 1, , , , ;
//	    noprm;
//       endofnoprm;
//	endofparam;
//end;
//
//ctl STLMIN.TLM_PASS_CHG, 0x00, ;
//    param 1, , , , ;
//	    noprm;
//        endofnoprm;
//	endofparam;
//end;
//
//ctl STLMIN.TLM_PASS_END, 0x00, ;
//    param 1, , , , ;
//	    noprm;
//        endofnoprm;
//	endofparam;
//end;

ctl STLMIN.TLM_START, 0x00, ;
    param 1, s, 15, Z, ;
		sts *;
        endofsts;
	endofparam;
end;

ctl STLMIN.TLM_END, 0x00, ;
    param 1, u, 3, A, 3;
        val 0, 255;
        endofval;
	endofparam;
end;

ctl STLMIN.SIMTLM_START, 0x00, ;
    param 1, u, 3, A, 3;
        val 0, 255;
        endofval;
	endofparam;
end;

ctl STLMIN.SIMTLM_END, 0x00, ;
    param 1, u, 3, A, 3;
        val 0, 255;
        endofval;
	endofparam;
end;

ctl STLMIN.TISIMTLM_START, 0x00, ;
    param 1, u, 3, A, 3;
        val 0, 255;
        endofval;
	endofparam;
end;

ctl STLMIN.TISIMTLM_END, 0x00, ;
    param 1, u, 3, A, 3;
        val 0, 255;
        endofval;
	endofparam;
end;

//ctl STLMIN.H2SMACS_TLM_START, 0x00, ;
//    param 1, u, 3, A, 3;
//        val 0, 255;
//        endofval;
//	endofparam;
//end;

//ctl STLMIN.H2SMACS_TLM_END, 0x00, ;
//    param 1, u, 3, A, 3;
//        val 0, 255;
//        endofval;
//	endofparam;
//end;

ctl STLMIN.SHUTDOWN, 0x00, ;
    param 1, , , , ;
	    noprm;
        endofnoprm;
	endofparam;
end;

ctl STLMIN.RESTART, 0x00, ;
    param 1, , , , ;
	    noprm;
        endofnoprm;
	endofparam;
end;



/**************************************** 2012更新(RD対応)　ここから */
ctl STLMIN.RD_TLM_START, 0x00, ;
    param 1, s, 15, Z, ;
		sts *;
        endofsts;
	endofparam;
end;

ctl STLMIN.RD_TLM_END, 0x00, ;
    param 1, u, 3, A, 3;
        val 0, 255;
        endofval;
	endofparam;
end;

ctl STLMIN.RD_SIMTLM_START, 0x00, ;
    param 1, u, 3, A, 3;
        val 0, 255;
        endofval;
	endofparam;
end;

ctl STLMIN.RD_SIMTLM_END, 0x00, ;
    param 1, u, 3, A, 3;
        val 0, 255;
        endofval;
	endofparam;
end;

ctl STLMIN.RD_TISIMTLM_START, 0x00, ;
    param 1, u, 3, A, 3;
        val 0, 255;
        endofval;
	endofparam;
end;

ctl STLMIN.RD_TISIMTLM_END, 0x00, ;
    param 1, u, 3, A, 3;
        val 0, 255;
        endofval;
	endofparam;
end;

ctl STLMIN.TLM_SELECT, 0x00,;
    param 1, s, , S, ;
        sts RD;
        endofsts;
        sts TCR;
        endofsts;
	endofparam;
end;

/**************************************** 2012更新(RD対応)　ここまで */
/* S-TXIFSW 制御 */

/************************************************* 2011更新　ここから */

/***** USC/UDSC送受信設備更新による修正 S帯送信IF信号切替盤削除 ここから  2017/08/04 as-04 *****/
/*****  S帯送信IF信号切替盤 *****/

//ctl S-TXIFSW.RSEL_MOD_SEL, 0x00, ; /* SS-TCR ROUTE/PM MOD ROUTE */
//    param 1, s, , S, ;
//        sts SS-TCR;
//            verifytbl 1;
//                verify 1, S-TXIFSW.RSEL_MOD_SEL, EQ, SS-TCR, 1, 6;
//            endofverify;
//        endofsts;
//        sts PM_MOD;
//            verifytbl 1;
//                verify 1, S-TXIFSW.RSEL_MOD_SEL, EQ, PM_MOD, 1, 6;
//            endofverify;
//        endofsts;
//    endofparam;
//end;

//ctl S-TXIFSW.RSEL_ROUTE_SEL, 0x00, ; /* TX ROUTE/CAL ROUTE */
//    param 1, s, , S, ;
//        sts S-U/C;
//            verifytbl 1;
//                verify 1, S-TXIFSW.RSEL_ROUTE_SEL, EQ, S-U/C, 1, 6;
//            endofverify;
//        endofsts;
//        sts CAL;
//           verifytbl 1;
//               verify 1, S-TXIFSW.RSEL_ROUTE_SEL, EQ, CAL, 1, 6;
//           endofverify;
//       endofsts;
//    endofparam;
//end;

/***** USC/UDSC送受信設備更新による修正 S帯送信IF信号切替盤削除 ここまで  2017/08/04 as-04 *****/


/*****  S帯受信IF信号切替盤 *****/

ctl S-RXIFSW.DIVD_ROUTE_SEL, 0x00, ; /* S/S ROUTE/S/X ROUTE */
    param 1, s, , S, ;
        sts S-D/C;
            verifytbl 1;
                verify 1, S-RXIFSW.DIVD_ROUTE_SEL, EQ, S-D/C, 1, 6;
            endofverify;
        endofsts;
        sts X-D/C;
            verifytbl 1;
                verify 1, S-RXIFSW.DIVD_ROUTE_SEL, EQ, X-D/C, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;


/************************************************ 2011更新　ここまで */


/****** THE END OF FILE *****************************************/

/* 装置番号：176（USC34)                                       */
/*         ：144（UDSC64)                                      */
/* 装置名称：DSNTCR                                            */
/*                                                             */
/* 本制御データベースは、USC34、UDSC64共通で使用する。         */
/*                                                             */
/* Create:2013/07/31                                           */
/* 変更履歴 :                                                  */
/* 2013/08/19  PWB_RESET:RESETが定義されていないので定義した。 */
/*             PWB_OFF:パラメータなしを定義                    */
/* 2013/08/23  制御パラメータが整数のもの対する修正            */
/*             RESET,CLEARの制御がnoparamとなっているものを修正*/
/* 2013/08/23  初期値変更*/
/* 2013/08/27 SIM_FILE_GETを二つ(OPE/LAB)に分割                */
/* 2013/08/28 AGCループバンド,キャリアループバンドの未使用削除 */
/* 2013/08/30 浮動小数点型のデータの定義文修正                 */
/* 2013/09/02 設定値の変更                 */
/* 2013/09/06 MOD_INDEX->0.20から1.50を0.0から1.50へ再度変更   */

/* 共通部 */

/* control */
/* DSN-MODEM_COMMON */

/* No.1 */
/* MODEM PWBをリセット */
/* 1h:RESET */
ctl DSNTCR.PWB_RESET, 0x00, ;
    param 1, s, ,S, ;
        sts RESET;
        endofsts;
    endofparam;
end;

/* No.2 */
/* 閏年、閏秒をON/OFF */
/* 0h：閏年OFF,閏秒OFF 1h : 閏年ON,閏秒OFF 2h : 閏年OFF,閏秒ON 3h : 閏年ON,閏秒ON */
ctl DSNTCR.LEAP_YEAR/SECOND, 0x00, ;
    param 1, s, , S, ;
      sts Y:OFF/S:OFF;
        verifytbl 1;
           verify 1, DSNTCR.LEAP_YEAR/SECOND, EQ, Y:OFF/S:OFF, 1, 6;
        endofverify;
      endofsts;
      sts Y:ON/S:OFF;
        verifytbl 1;
           verify 1, DSNTCR.LEAP_YEAR/SECOND, EQ, Y:ON/S:OFF, 1, 6;
        endofverify;
      endofsts;
      sts Y:OFF/S:ON;
        verifytbl 1;
           verify 1, DSNTCR.LEAP_YEAR/SECOND, EQ, Y:OFF/S:ON, 1, 6;
        endofverify;
      endofsts;
      sts Y:ON/S:ON;
        verifytbl 1;
           verify 1, DSNTCR.LEAP_YEAR/SECOND, EQ, Y:ON/S:ON, 1, 6;
        endofverify;
      endofsts;
    endofparam;
end;

/* No.3 */
/* 電源OFF制御 */
ctl DSNTCR.POWER_OFF, 0x00, ;
    param 1, , , , ;
        noprm;
        endofnoprm;
    endofparam;
end;


/* No.4 */
/* ファイル取得要求（アンテナ予報値） */


/*        */
/* 変調部 */
/*        */

/*No.1*/
/*送信IF出力ON/OFF*/
ctl DSNTCR.TX_IF_OUTPUT, 0x00, ; 
    param 1, s, , S, ;
        sts ON;
            verifytbl 1;
                verify 1, DSNTCR.TX_IF_OUTPUT, EQ, ON, 1, 6;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, DSNTCR.TX_IF_OUTPUT, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/*No.2*/
/*送信IF変調ON/OFF*/
ctl DSNTCR.TX_IF_MODULATION, 0x00, ;
    param 1, s, , S, ;
        sts ON;
            verifytbl 1;
                verify 1, DSNTCR.TX_IF_MODULATION, EQ, ON, 1, 6;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, DSNTCR.TX_IF_MODULATION, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/*No.3*/
/*送信IF中心周波数*/
ctl DSNTCR.TX_IF_FREQ, 0x00, ; 
    param 1, f, 2.2, A, 2.2;
        val 66.00, 74.00;
            verifytbl 1;
                verify 1, DSNTCR.TX_IF_FREQ, EQ, *, 1, 60;  
            endofverify;
        endofval;
    endofparam;
end;


/*No.4*/
/*送信キャリアスイープのON/OFF*/
ctl DSNTCR.TX_CARR_SWP, 0x00, ; 
    param 1, s, , S, ;
      sts ON;
        verifytbl 1;
           verify 1, DSNTCR.TX_CARR_SWP, EQ, ON, 1, 6;
        endofverify;
      endofsts;
      sts OFF;
        verifytbl 1;
           verify 1, DSNTCR.TX_CARR_SWP, EQ, OFF, 1, 6;
        endofverify;
      endofsts;
    endofparam;
end;

/*No.5*/
/*送信キャリアスイープ方法*/
ctl DSNTCR.TX_CARR_SWP_MODE, 0x00, ;
    param 1, s, , S, ;
      sts INITIALIZE;
        verifytbl 1;
           verify 1, DSNTCR.TX_CARR_SWP_MODE, EQ, INITIALIZE, 1, 6;
        endofverify;
      endofsts;
      sts +TRIANGLE;
        verifytbl 1;
           verify 1, DSNTCR.TX_CARR_SWP_MODE, EQ, +TRIANGLE, 1, 6;
        endofverify;
      endofsts;
      sts -TRIANGLE;
        verifytbl 1;
           verify 1, DSNTCR.TX_CARR_SWP_MODE, EQ, -TRIANGLE, 1, 6;
        endofverify;
      endofsts;
      sts +-TRIANGLE;
        verifytbl 1;
           verify 1, DSNTCR.TX_CARR_SWP_MODE, EQ, +-TRIANGLE, 1, 6;
        endofverify;
      endofsts;
      sts -+TRIANGLE;
        verifytbl 1;
           verify 1, DSNTCR.TX_CARR_SWP_MODE, EQ, -+TRIANGLE, 1, 6;
        endofverify;
      endofsts;
      sts RESET;
        verifytbl 1;
           verify 1, DSNTCR.TX_CARR_SWP_MODE, EQ, RESET, 1, 6;
        endofverify;
      endofsts;
      sts +SAW;
        verifytbl 1;
           verify 1, DSNTCR.TX_CARR_SWP_MODE, EQ, +SAW, 1, 6;
        endofverify;
      endofsts;
      sts -SAW;
        verifytbl 1;
           verify 1, DSNTCR.TX_CARR_SWP_MODE, EQ, -SAW, 1, 6;
        endofverify;
      endofsts;
      sts +-SAW;
        verifytbl 1;
           verify 1, DSNTCR.TX_CARR_SWP_MODE, EQ, +-SAW, 1, 6;
        endofverify;
      endofsts;
      sts -+SAW;
        verifytbl 1;
           verify 1, DSNTCR.TX_CARR_SWP_MODE, EQ, -+SAW, 1, 6;
        endofverify;
      endofsts;
      sts STOP;
        verifytbl 1;
           verify 1, DSNTCR.TX_CARR_SWP_MODE, EQ, STOP, 1, 6;
        endofverify;
      endofsts;
    endofparam;
end;

/*No.6*/
/*送信キャリアスイープバンド*/
ctl DSNTCR.TX_CARR_SWP_BAND, 0x00, ;
    param 1, f, 7.4, L, 7.4;
      val 0.0000, 1200000.0000;
            verifytbl 1;
                verify 1, DSNTCR.TX_CARR_SWP_BAND, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/*No.7*/
/*送信キャリアスイープ時間*/
ctl DSNTCR.TX_CARR_SWP_TIME, 0x00, ;
    param 1, f, 6.3, A, 6.3;
        val 1.000, 100000.000;
            verifytbl 1;
                verify 1, DSNTCR.TX_CARR_SWP_TIME, EQ, *, 1, 6; 
            endofverify;
        endofval;
    endofparam;
end;

/*No.8*/
/*試験用送信ドップラON/OFF*/
ctl DSNTCR.TX_IF_TST_DOPP, 0x00, ; 
    param 1, s, , S, ;
      sts ON;
        verifytbl 1;
           verify 1, DSNTCR.TX_IF_TST_DOPP, EQ, ON, 1, 6;
        endofverify;
      endofsts;
      sts OFF;
        verifytbl 1;
           verify 1, DSNTCR.TX_IF_TST_DOPP, EQ, OFF, 1, 6;
        endofverify;
      endofsts;
    endofparam;
end;

/*No.9*/
/*試験用送信ドップラ周波数*/
ctl DSNTCR.TX_IF_TST_DOPP_F, 0x00, ;
    param 1, d, 8, A, 8;
        val -4000000, +4000000;
            verifytbl 1;
                verify 1, DSNTCR.TX_IF_TST_DOPP_F, EQ, *, 1, 5;
            endofverify;
        endofval;
    endofparam;
end;

/*No.10*/
/*送信キャリアスイープサイクル数*/
ctl DSNTCR.TX_CARR_SWP_CYCLE, 0x00, ;
    param 1, u, 3, A, 3;
        val 1, 999;
            verifytbl 1;
                verify 1, DSNTCR.TX_CARR_SWP_CYCLE, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/*No.15*/
/*送信変調形式*/
ctl DSNTCR.TX_MOD_FORMAT, 0x00, ; 
    param 1, s, , S, ;
          sts PCM-PSK-PM_INC;
              verifytbl 1;
                  verify 1, DSNTCR.TX_MOD_FORMAT, EQ, PCM-PSK-PM_INC, 1, 6;
              endofverify;
          endofsts;
          sts PCM-PSK-PM_COH;
              verifytbl 1;
                  verify 1, DSNTCR.TX_MOD_FORMAT, EQ, PCM-PSK-PM_COH, 1, 6;
              endofverify;
          endofsts;
          sts PCM-PM;
              verifytbl 1;
                  verify 1, DSNTCR.TX_MOD_FORMAT, EQ, PCM-PM, 1, 6;
              endofverify;
          endofsts;
     endofparam;
end;

/*No.16*/
/*送信サブキャリア周波数*/
ctl DSNTCR.TX_SC_FREQ, 0x00, ;
    param 1, f, 7.4, L, 7.4;
      val 0.0001, 1200000.0000;
            verifytbl 1;
                verify 1, DSNTCR.TX_SC_FREQ, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/*No.17*/
/*変調形式がPCM-PSK-PM(COH)時のシンボルレート用サブキャリア周波数分周比*/
ctl DSNTCR.TX_SC_FREQ_N, 0x00, ;
    param 1, s, , S, ;
        sts N=11;
            verifytbl 1;
                verify 1, DSNTCR.TX_SC_FREQ_N, EQ, N=11, 1, 6;
            endofverify;
        endofsts;
        sts N=10;
            verifytbl 1;
                verify 1, DSNTCR.TX_SC_FREQ_N, EQ, N=10, 1, 6;
            endofverify;
        endofsts;
        sts N=9;
            verifytbl 1;
                verify 1, DSNTCR.TX_SC_FREQ_N, EQ, N=9, 1, 6;
            endofverify;
        endofsts;
        sts N=8;
            verifytbl 1;
                verify 1, DSNTCR.TX_SC_FREQ_N, EQ, N=8, 1, 6;
            endofverify;
        endofsts;
        sts N=7;
            verifytbl 1;
                verify 1, DSNTCR.TX_SC_FREQ_N, EQ, N=7, 1, 6;
            endofverify;
        endofsts;
        sts N=6;
            verifytbl 1;
                verify 1, DSNTCR.TX_SC_FREQ_N, EQ, N=6, 1, 6;
            endofverify;
        endofsts;
        sts N=5;
            verifytbl 1;
                verify 1, DSNTCR.TX_SC_FREQ_N, EQ, N=5, 1, 6;
            endofverify;
        endofsts;
        sts N=4;
            verifytbl 1;
                verify 1, DSNTCR.TX_SC_FREQ_N, EQ, N=4, 1, 6;
            endofverify;
        endofsts;
        sts N=3;
            verifytbl 1;
                verify 1, DSNTCR.TX_SC_FREQ_N, EQ, N=3, 1, 6;
            endofverify;
        endofsts;
        sts N=2;
            verifytbl 1;
                verify 1, DSNTCR.TX_SC_FREQ_N, EQ, N=2, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/*No.18*/
/*送信ビットレート(変調形式がPCM-PM、PCM-PSK-PM(INCOH)用) */
ctl DSNTCR.TX_BIT_RATE, 0x00, ;
  param 1, f, 6.4, L, 6.4;     
      val 1.0000, 600000.0000; 
            verifytbl 1;
                verify 1, DSNTCR.TX_BIT_RATE, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;       

/*  No. 19 */
/* 送信変調度 2013/08/23初期値変更*/
/*                  9/06          */ 
ctl DSNTCR.TX_MOD_INDEX, 0x00, ;
    param 1, f, 1.2, A, 1.2;
        val 0.0, 1.50;
            verifytbl 1;
                verify 1, DSNTCR.TX_MOD_INDEX, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/*No.20*/
/*出力データルート*/
ctl DSNTCR.TX_DATA_ROUTE, 0x00, ; 
    param 1, s, , S, ;
      sts SIM;
        verifytbl 1;
           verify 1, DSNTCR.TX_DATA_ROUTE, EQ, SIM, 1, 6;
        endofverify;
      endofsts;
      sts CMD;
        verifytbl 1;
           verify 1, DSNTCR.TX_DATA_ROUTE, EQ, CMD, 1, 6;
        endofverify;
      endofsts;
    endofparam;
end;

/*No.21*/
/*送信サブキャリア波形の形式*/
ctl DSNTCR.TX_SC_WAVE_FORM, 0x00, ; 
    param 1, s, , S, ;
      sts SIN;
        verifytbl 1;
           verify 1, DSNTCR.TX_SC_WAVE_FORM, EQ, SIN, 1, 6;
        endofverify;
      endofsts;
      sts SQUARE;
        verifytbl 1;
           verify 1, DSNTCR.TX_SC_WAVE_FORM, EQ, SQUARE, 1, 6;
        endofverify;
      endofsts;
    endofparam;
end;

/*  No. 22 */
/* 送信データ出力形式 */
ctl DSNTCR.TX_DATA_FORMAT, 0x00, ;
    param 1, s, , S, ;
        sts NRZ-L;
            verifytbl 1;
                verify 1, DSNTCR.TX_DATA_FORMAT, EQ, NRZ-L, 1, 6;
            endofverify;
        endofsts;
        sts NRZ-M;
            verifytbl 1;
                verify 1, DSNTCR.TX_DATA_FORMAT, EQ, NRZ-M, 1, 6;
            endofverify;
        endofsts;
        sts NRZ-S;
            verifytbl 1;
                verify 1, DSNTCR.TX_DATA_FORMAT, EQ, NRZ-S, 1, 6;
            endofverify;
        endofsts;
        sts BIPH-L;
            verifytbl 1;
                verify 1, DSNTCR.TX_DATA_FORMAT, EQ, BIPH-L, 1, 6;
            endofverify;
        endofsts;
        sts BIPH-M;
            verifytbl 1;
                verify 1, DSNTCR.TX_DATA_FORMAT, EQ, BIPH-M, 1, 6;
            endofverify;
        endofsts;
        sts BIPH-S;
            verifytbl 1;
                verify 1, DSNTCR.TX_DATA_FORMAT, EQ, BIPH-S, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/*  No. 23 */
/* 送信フィルタ形式 */
ctl DSNTCR.TX_FILTER_STYLE, 0x00, ;
    param 1, s, , S, ;
        sts LINEAR_PHASE;
            verifytbl 1;
                verify 1, DSNTCR.TX_FILTER_STYLE, EQ, LINEAR_PHASE, 1, 6;
            endofverify;
        endofsts;
        sts SQUARE;
            verifytbl 1;
                verify 1, DSNTCR.TX_FILTER_STYLE, EQ, SQUARE, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/*  No. 24 */
/*送信サブキャリアスイープON/OFF*/
ctl DSNTCR.TX_SC_SWP, 0x00, ; 
    param 1, s, , S, ;
      sts ON;
        verifytbl 1;
           verify 1, DSNTCR.TX_SC_SWP, EQ, ON, 1, 6;
        endofverify;
      endofsts;
      sts OFF;
        verifytbl 1;
           verify 1, DSNTCR.TX_SC_SWP, EQ, OFF, 1, 6;
        endofverify;
      endofsts;
    endofparam;
end;

/*No.25*/
/*送信サブキャリアスイープ方法*/
ctl DSNTCR.TX_SC_SWP_MODE, 0x00, ;
    param 1, s, , S, ;
      sts INITIALIZE;
        verifytbl 1;
           verify 1, DSNTCR.TX_SC_SWP_MODE, EQ, INITIALIZE, 1, 6;
        endofverify;
      endofsts;
      sts +TRIANGLE;
        verifytbl 1;
           verify 1, DSNTCR.TX_SC_SWP_MODE, EQ, +TRIANGLE, 1, 6;
        endofverify;
      endofsts;
      sts -TRIANGLE;
        verifytbl 1;
           verify 1, DSNTCR.TX_SC_SWP_MODE, EQ, -TRIANGLE, 1, 6;
        endofverify;
      endofsts;
      sts +-TRIANGLE;
        verifytbl 1;
           verify 1, DSNTCR.TX_SC_SWP_MODE, EQ, +-TRIANGLE, 1, 6;
        endofverify;
      endofsts;
      sts -+TRIANGLE;
        verifytbl 1;
           verify 1, DSNTCR.TX_SC_SWP_MODE, EQ, -+TRIANGLE, 1, 6;
        endofverify;
      endofsts;
      sts RESET;
        verifytbl 1;
           verify 1, DSNTCR.TX_SC_SWP_MODE, EQ, RESET, 1, 6;
        endofverify;
      endofsts;
      sts +SAW;
        verifytbl 1;
           verify 1, DSNTCR.TX_SC_SWP_MODE, EQ, +SAW, 1, 6;
        endofverify;
      endofsts;
      sts -SAW;
        verifytbl 1;
           verify 1, DSNTCR.TX_SC_SWP_MODE, EQ, -SAW, 1, 6;
        endofverify;
      endofsts;
      sts +-SAW;
        verifytbl 1;
           verify 1, DSNTCR.TX_SC_SWP_MODE, EQ, +-SAW, 1, 6;
        endofverify;
      endofsts;
      sts -+SAW;
        verifytbl 1;
           verify 1, DSNTCR.TX_SC_SWP_MODE, EQ, -+SAW, 1, 6;
        endofverify;
      endofsts;
      sts STOP;
        verifytbl 1;
           verify 1, DSNTCR.TX_SC_SWP_MODE, EQ, STOP, 1, 6;
        endofverify;
      endofsts;
    endofparam;
end;

/*No.26*/
/*送信サブキャリアスイープバンド*/
ctl DSNTCR.TX_SC_SWP_BAND, 0x00, ;
  param 1, f, 5.4, L, 5.4;
      val 0.0000, 10000.0000;
            verifytbl 1;
                verify 1, DSNTCR.TX_SC_SWP_BAND, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/*No.27*/
/*送信サブキャリアスイープ時間   2013/08/23 */
ctl DSNTCR.TX_SC_SWP_TIME, 0x00, ;
    param 1, f, 4.3, L, 4.3;
        val 1.000, 1000.000;
            verifytbl 1;
                verify 1, DSNTCR.TX_SC_SWP_TIME, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/*No.28*/
/*送信サブキャリアスイープサイクル時間*/
ctl DSNTCR.TX_SC_SWP_CYCLE, 0x00, ;
    param 1, u, 3, A, 3;
        val 1, 999;
            verifytbl 1;
                verify 1, DSNTCR.TX_SC_SWP_CYCLE, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/*  No. 33 */
/* PLOP */
ctl DSNTCR.PLOP, 0x00, ;
    param 1, s, , S, ;
        sts PLOP-1;
            verifytbl 1;
                verify 1, DSNTCR.PLOP, EQ, PLOP-1, 1, 6;
            endofverify;
        endofsts;
        sts PLOP-2;
            verifytbl 1;
                verify 1, DSNTCR.PLOP, EQ, PLOP-2, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/*  No. 34 */
/* ACQのパターン */
ctl DSNTCR.ACQ_PATTERN, 0x00, ;
    param 1, s, , S, ;
        sts 11;
            verifytbl 1;
                verify 1, DSNTCR.ACQ_PATTERN, EQ, 11, 1, 6;
            endofverify;
        endofsts;
        sts 10;
            verifytbl 1;
                verify 1, DSNTCR.ACQ_PATTERN, EQ, 10, 1, 6;
            endofverify;
        endofsts;
        sts 01;
            verifytbl 1;
                verify 1, DSNTCR.ACQ_PATTERN, EQ, 01, 1, 6;
            endofverify;
        endofsts;
        sts 00;
            verifytbl 1;
                verify 1, DSNTCR.ACQ_PATTERN, EQ, 00, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/*  No. 35 */
/* ACQのビット数 */
ctl DSNTCR.ACQ_LENGTH, 0x00, ;
    param 1, u, 4, A, 4;
        val 0, 1024;
            verifytbl 1;
                verify 1, DSNTCR.ACQ_LENGTH, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/*  No. 36 */
/* OPTION1のパターン */
ctl DSNTCR.OPTION1_PATTERN, 0x00, ;
    param 1, s, , S, ;
        sts 11;
            verifytbl 1;
                verify 1, DSNTCR.OPTION1_PATTERN, EQ, 11, 1, 6;
            endofverify;
        endofsts;
        sts 10;
            verifytbl 1;
                verify 1, DSNTCR.OPTION1_PATTERN, EQ, 10, 1, 6;
            endofverify;
        endofsts;
        sts 01;
            verifytbl 1;
                verify 1, DSNTCR.OPTION1_PATTERN, EQ, 01, 1, 6;
            endofverify;
        endofsts;
        sts 00;
            verifytbl 1;
                verify 1, DSNTCR.OPTION1_PATTERN, EQ, 00, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/*  No. 37 */
/* OPTIO1のビット数 */
ctl DSNTCR.OPTION1_LENGTH, 0x00, ;
    param 1, u, 4, A, 4;
        val 0, 1024;
            verifytbl 1;
                verify 1, DSNTCR.OPTION1_LENGTH, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/*  No. 38 */
/* OPTION2のパターン */
ctl DSNTCR.OPTION2_PATTERN, 0x00, ;
    param 1, s, , S, ;
        sts 11;
            verifytbl 1;
                verify 1, DSNTCR.OPTION2_PATTERN, EQ, 11, 1, 6;
            endofverify;
        endofsts;
        sts 10;
            verifytbl 1;
                verify 1, DSNTCR.OPTION2_PATTERN, EQ, 10, 1, 6;
            endofverify;
        endofsts;
        sts 01;
            verifytbl 1;
                verify 1, DSNTCR.OPTION2_PATTERN, EQ, 01, 1, 6;
            endofverify;
        endofsts;
        sts 00;
            verifytbl 1;
                verify 1, DSNTCR.OPTION2_PATTERN, EQ, 00, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/*  No. 39 */
/* OPTION2のビット数 */
ctl DSNTCR.OPTION2_LENGTH, 0x00, ;
    param 1, u, 4, A, 4;
        val 0, 1024;
            verifytbl 1;
                verify 1, DSNTCR.OPTION2_LENGTH, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/*  No. 40 */
/* スタートシーケンスパターン */
ctl DSNTCR.START_SEQ_PATTERN, 0x00, ;
    param 1, x, 18, L, 18;
        val 0x0000000000000000, 0xFFFFFFFFFFFFFFFF;
            verifytbl 1;
                verify 1, DSNTCR.START_SEQ_PATTERN, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/*  No. 41 */
/* スタートシーケンスパターン長 */
ctl DSNTCR.START_SEQ_LENGTH, 0x00, ;
    param 1, u, 2, L, 2;
        val 8, 64;
            verifytbl 1;
                verify 1, DSNTCR.START_SEQ_LENGTH, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/*  No. 42 */
/* テイルシーケンスパターン */
ctl DSNTCR.TAIL_SEQ_PATTERN, 0x00, ;
    param 1, x, 18, L, 18;
        val 0x0000000000000000, 0xFFFFFFFFFFFFFFFF;
            verifytbl 1;
                verify 1, DSNTCR.TAIL_SEQ_PATTERN, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/*  No.43 */
/* テイルシーケンスパターン長 */
ctl DSNTCR.TAIL_SEQ_LENGTH, 0x00, ;
    param 1, u, 2, L, 2;
        val 0, 64;
            verifytbl 1;
                verify 1, DSNTCR.TAIL_SEQ_LENGTH, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/*No.44*/
/*CMDデータ源泉*/
ctl DSNTCR.CMD_DATA_SOURCE, 0x00, ;
    param 1, s, , S, ;
        sts PN_9;
            verifytbl 1;
                verify 1, DSNTCR.CMD_DATA_SOURCE, EQ, PN_9, 1, 6;
            endofverify;
        endofsts;
        sts PN_15;
            verifytbl 1;
                verify 1, DSNTCR.CMD_DATA_SOURCE, EQ, PN_15, 1, 6;
            endofverify;
        endofsts;
        sts ZERO;
            verifytbl 1;
                verify 1, DSNTCR.CMD_DATA_SOURCE, EQ, ZERO, 1, 6;
            endofverify;
        endofsts;
        sts DOT;
            verifytbl 1;
                verify 1, DSNTCR.CMD_DATA_SOURCE, EQ, DOT, 1, 6;
            endofverify;
        endofsts;
        sts LAN;
            verifytbl 1;
                verify 1, DSNTCR.CMD_DATA_SOURCE, EQ, LAN, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/*No.49*/
/*SIMの符号化モードを設定する*/
ctl DSNTCR.SIM_ENCODE_MODE, 0x00, ;
    param 1, s, , S, ;
        sts TURBO;
            verifytbl 1;
                verify 1, DSNTCR.SIM_ENCODE_MODE, EQ, TURBO, 1, 6;
            endofverify;
        endofsts;
        sts ESA;
            verifytbl 1;
                verify 1, DSNTCR.SIM_ENCODE_MODE, EQ, ESA, 1, 6;
            endofverify;
        endofsts;
        sts JPL;
            verifytbl 1;
                verify 1, DSNTCR.SIM_ENCODE_MODE, EQ, JPL, 1, 6;
            endofverify;
        endofsts;
        sts CCSDS;
            verifytbl 1;
                verify 1, DSNTCR.SIM_ENCODE_MODE, EQ, CCSDS, 1, 6;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, DSNTCR.SIM_ENCODE_MODE, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/*No.50*/
/*SIMターボ符号化用のデータの源泉*/
ctl DSNTCR.SIM_TB_DATA_SRC, 0x00, ;
    param 1, s, , S, ;
        sts FILE_SINGLE;
            verifytbl 1;
                verify 1, DSNTCR.SIM_TB_DATA_SRC, EQ, FILE_SINGLE, 1, 6;
            endofverify;
        endofsts;
        sts FILE_REPEAT;
            verifytbl 1;
                verify 1, DSNTCR.SIM_TB_DATA_SRC, EQ, FILE_REPEAT, 1, 6;
            endofverify;
        endofsts;
        sts FRAME-DOT;
            verifytbl 1;
                verify 1, DSNTCR.SIM_TB_DATA_SRC, EQ, FRAME-DOT, 1, 6;
            endofverify;
        endofsts;
        sts FRAME-PN;
            verifytbl 1;
                verify 1, DSNTCR.SIM_TB_DATA_SRC, EQ, FRAME-PN, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/*No.51*/
/*SIMターボ符号化用のブロック長*/
ctl DSNTCR.SIM_TB_BLK_LEN, 0x00, ;
    param 1, s, , S, ;
        sts 8920bits;
            verifytbl 1;
                verify 1, DSNTCR.SIM_TB_BLK_LEN, EQ, 8920bits, 1, 6;
            endofverify;
        endofsts;
        sts 7136bits;
            verifytbl 1;
                verify 1, DSNTCR.SIM_TB_BLK_LEN, EQ, 7136bits, 1, 6;
            endofverify;
        endofsts;
        sts 3568bits;
            verifytbl 1;
                verify 1, DSNTCR.SIM_TB_BLK_LEN, EQ, 3568bits, 1, 6;
            endofverify;
        endofsts;
        sts 1784bits;
            verifytbl 1;
                verify 1, DSNTCR.SIM_TB_BLK_LEN, EQ, 1784bits, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/*NO.52*/
/*SIMターボ符号化用の符号化率*/
ctl DSNTCR.SIM_TB_CODE_RATE, 0x00, ;
    param 1, s, , S, ;
        sts 1/6;
            verifytbl 1;
                verify 1, DSNTCR.SIM_TB_CODE_RATE, EQ, 1/6, 1, 6;
            endofverify;
        endofsts;
        sts 1/4;
            verifytbl 1;
                verify 1, DSNTCR.SIM_TB_CODE_RATE, EQ, 1/4, 1, 6;
            endofverify;
        endofsts;
        sts 1/3;
            verifytbl 1;
                verify 1, DSNTCR.SIM_TB_CODE_RATE, EQ, 1/3, 1, 6;
            endofverify;
        endofsts;
        sts 1/2;
            verifytbl 1;
                verify 1, DSNTCR.SIM_TB_CODE_RATE, EQ, 1/2, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/*No.53*/
/*SIMターボ符号化用のランダマイズ*/
ctl DSNTCR.SIM_TB_RANDOMIZE, 0x00, ; 
    param 1, s, , S, ;
      sts ON;
        verifytbl 1;
           verify 1, DSNTCR.SIM_TB_RANDOMIZE, EQ, ON, 1, 6;
        endofverify;
      endofsts;
      sts OFF;
        verifytbl 1;
           verify 1, DSNTCR.SIM_TB_RANDOMIZE, EQ, OFF, 1, 6;
        endofverify;
      endofsts;
    endofparam;
end;

/*No.54*/
/*SIMターボ符号化用のCRC*/
ctl DSNTCR.SIM_TB_CRC, 0x00, ; 
    param 1, s, , S, ;
      sts ON;
        verifytbl 1;
           verify 1, DSNTCR.SIM_TB_CRC, EQ, ON, 1, 6;
        endofverify;
      endofsts;
      sts OFF;
        verifytbl 1;
           verify 1, DSNTCR.SIM_TB_CRC, EQ, OFF, 1, 6;
        endofverify;
      endofsts;
    endofparam;
end;

/*  No. 60 */
/* SIMサービスグレード */
ctl DSNTCR.SIM_SERVICEGRADE, 0x00, ;
    param 1, s, , S, ;
        sts 3H;
            verifytbl 1;
                verify 1, DSNTCR.SIM_SERVICEGRADE, EQ, 3H, 1, 6;
            endofverify;
        endofsts;
        sts 3;
            verifytbl 1;
                verify 1, DSNTCR.SIM_SERVICEGRADE, EQ, 3, 1, 6;
            endofverify;
        endofsts;
        sts 2;
            verifytbl 1;
                verify 1, DSNTCR.SIM_SERVICEGRADE, EQ, 2, 1, 6;
            endofverify;
        endofsts;
        sts -;
            verifytbl 1;
                verify 1, DSNTCR.SIM_SERVICEGRADE, EQ, -, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/*  No. 61 */
/* SIMインタリーブ長 */
ctl DSNTCR.SIM_INTERLEAVE, 0x00, ;
    param 1, s, , S, ;
        sts SHORT5;
            verifytbl 1;
                verify 1, DSNTCR.SIM_INTERLEAVE, EQ, SHORT5, 1, 6;
            endofverify;
        endofsts;
        sts SHORT4;
            verifytbl 1;
                verify 1, DSNTCR.SIM_INTERLEAVE, EQ, SHORT4, 1, 6;
            endofverify;
        endofsts;
        sts SHORT3;
            verifytbl 1;
                verify 1, DSNTCR.SIM_INTERLEAVE, EQ, SHORT3, 1, 6;
            endofverify;
        endofsts;
        sts SHORT2;
            verifytbl 1;
                verify 1, DSNTCR.SIM_INTERLEAVE, EQ, SHORT2, 1, 6;
            endofverify;
        endofsts;
        sts SHORT1;
            verifytbl 1;
                verify 1, DSNTCR.SIM_INTERLEAVE, EQ, SHORT1, 1, 6;
            endofverify;
        endofsts;
        sts NORMAL5;
            verifytbl 1;
                verify 1, DSNTCR.SIM_INTERLEAVE, EQ, NORMAL5, 1, 6;
            endofverify;
        endofsts;
        sts NORMAL4;
            verifytbl 1;
                verify 1, DSNTCR.SIM_INTERLEAVE, EQ, NORMAL4, 1, 6;
            endofverify;
        endofsts;
        sts NORMAL3;
            verifytbl 1;
                verify 1, DSNTCR.SIM_INTERLEAVE, EQ, NORMAL3, 1, 6;
            endofverify;
        endofsts;
        sts NORMAL2;
            verifytbl 1;
                verify 1, DSNTCR.SIM_INTERLEAVE, EQ, NORMAL2, 1, 6;
            endofverify;
        endofsts;
        sts NORMAL1;
            verifytbl 1;
                verify 1, DSNTCR.SIM_INTERLEAVE, EQ, NORMAL1, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/*  No. 62 */
/* SIMフレーム長 */
ctl DSNTCR.SIM_FRAME_LENGTH, 0x00, ;
    param 1, u, 4, A, 4;
        val 8, 2048;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FRAME_LENGTH, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/*  No. 63 */
/* SIMフレームシンクパターン長 */
ctl DSNTCR.SIM_FSYNC_LENGTH, 0x00, ;
    param 1, u, 1, A, 1;
        val 1, 4;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FSYNC_LENGTH, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/*  No. 64 */
/* SIMフレームシンクパターン */
ctl DSNTCR.SIM_FSYNC_PATTERN, 0x00, ;
    param 1, x, 10, A, 10;
        val 0X00000000, 0XFFFFFFFF;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FSYNC_PATTERN, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/*  No. 65 */
/* SIMデータの源泉 */
ctl DSNTCR.SIM_DATA_SOURCE, 0x00, ;
    param 1, s, , S, ;
        sts FILE_SINGLE;
            verifytbl 1;
                verify 1, DSNTCR.SIM_DATA_SOURCE, EQ, FILE_SINGLE, 1, 6;
            endofverify;
        endofsts;
        sts FILE_REPEAT;
            verifytbl 1;
                verify 1, DSNTCR.SIM_DATA_SOURCE, EQ, FILE_REPEAT, 1, 6;
            endofverify;
        endofsts;
        sts FRAME-ZERO;
            verifytbl 1;
                verify 1, DSNTCR.SIM_DATA_SOURCE, EQ, FRAME-ZERO, 1, 6;
            endofverify;
        endofsts;
        sts FRAME-PN;
            verifytbl 1;
                verify 1, DSNTCR.SIM_DATA_SOURCE, EQ, FRAME-PN, 1, 6;
            endofverify;
        endofsts;
        sts PN_9;
            verifytbl 1;
                verify 1, DSNTCR.SIM_DATA_SOURCE, EQ, PN_9, 1, 6;
            endofverify;
        endofsts;
        sts PN_15;
            verifytbl 1;
                verify 1, DSNTCR.SIM_DATA_SOURCE, EQ, PN_15, 1, 6;
            endofverify;
        endofsts;
        sts ZERO;
            verifytbl 1;
                verify 1, DSNTCR.SIM_DATA_SOURCE, EQ, ZERO, 1, 6;
            endofverify;
        endofsts;
        sts DOT;
            verifytbl 1;
                verify 1, DSNTCR.SIM_DATA_SOURCE, EQ, DOT, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/*  No. 66 */
/* SIMランダマイズのON/OFF */
ctl DSNTCR.SIM_RANDOMIZE, 0x00, ;
	param 1, s, , S, ;
        sts ON;
            verifytbl 1;
                verify 1, DSNTCR.SIM_RANDOMIZE, EQ, ON, 1, 6;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, DSNTCR.SIM_RANDOMIZE, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/*  No. 67 */
/* SIMサブフレーム長 2013/08/23初期値変更*/
/*                   0からの入力に戻す 09/06 */
ctl DSNTCR.SIM_SUBFRAME_LEN, 0x00, ;
    param 1, u, 4, A, 4;
        val 0, 2048;
            verifytbl 1;
                verify 1, DSNTCR.SIM_SUBFRAME_LEN, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/*  No. 68 */
/* SIM IDの位置 */
ctl DSNTCR.SIM_WORD_LOC, 0x00, ;
    param 1, u, 4, A, 4;
        val 0, 2047;
            verifytbl 1;
                verify 1, DSNTCR.SIM_WORD_LOC, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/*  No. 69 */
/* SIM IDのビット位置 */
ctl DSNTCR.SIM_ID_BIT_LOC, 0x00, ;
    param 1, u, 2, A, 2;
        val 0, 15;
            verifytbl 1;
                verify 1, DSNTCR.SIM_ID_BIT_LOC, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/*  No. 70 */
/* SIM ID長 */
ctl DSNTCR.SIM_ID_LENGTH, 0x00, ;
    param 1, u, 2, A, 2;
        val 0, 16;
            verifytbl 1;
                verify 1, DSNTCR.SIM_ID_LENGTH, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/*  No. 71 */
/* SIMファイル再生ON/OFF */
ctl DSNTCR.SIM_FILE_OUTPUT, 0x00, ;
	param 1, s, , S, ;
        sts FILE20;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_OUTPUT, EQ, FILE20, 1, 6;
            endofverify;
        endofsts;
        sts FILE19;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_OUTPUT, EQ, FILE19, 1, 6;
            endofverify;
        endofsts;
        sts FILE18;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_OUTPUT, EQ, FILE18, 1, 6;
            endofverify;
        endofsts;
        sts FILE17;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_OUTPUT, EQ, FILE17, 1, 6;
            endofverify;
        endofsts;
        sts FILE16;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_OUTPUT, EQ, FILE16, 1, 6;
            endofverify;
        endofsts;
        sts FILE15;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_OUTPUT, EQ, FILE15, 1, 6;
            endofverify;
        endofsts;
        sts FILE14;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_OUTPUT, EQ, FILE14, 1, 6;
            endofverify;
        endofsts;
        sts FILE13;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_OUTPUT, EQ, FILE13, 1, 6;
            endofverify;
        endofsts;
        sts FILE12;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_OUTPUT, EQ, FILE12, 1, 6;
            endofverify;
        endofsts;
        sts FILE11;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_OUTPUT, EQ, FILE11, 1, 6;
            endofverify;
        endofsts;
        sts FILE10;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_OUTPUT, EQ, FILE10, 1, 6;
            endofverify;
        endofsts;
        sts FILE9;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_OUTPUT, EQ, FILE9, 1, 6;
            endofverify;
        endofsts;
        sts FILE8;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_OUTPUT, EQ, FILE8, 1, 6;
            endofverify;
        endofsts;
        sts FILE7;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_OUTPUT, EQ, FILE7, 1, 6;
            endofverify;
        endofsts;
        sts FILE6;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_OUTPUT, EQ, FILE6, 1, 6;
            endofverify;
        endofsts;
        sts FILE5;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_OUTPUT, EQ, FILE5, 1, 6;
            endofverify;
        endofsts;
        sts FILE4;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_OUTPUT, EQ, FILE4, 1, 6;
            endofverify;
        endofsts;
        sts FILE3;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_OUTPUT, EQ, FILE3, 1, 6;
            endofverify;
        endofsts;
        sts FILE2;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_OUTPUT, EQ, FILE2, 1, 6;
            endofverify;
        endofsts;
        sts FILE1;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_OUTPUT, EQ, FILE1, 1, 6;
            endofverify;
        endofsts;
        sts STOP;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_OUTPUT, EQ, STOP, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/*  No. 72 */
/* SIMファイルをNASから読み込む 2013/08/27分割*/
ctl DSNTCR.SIM_FILE_GET_LAB, 0x00, PREVERIFY_OFF;
    param 1, s, , S, ;
        sts FILE20_LAB;
            prechktbl 1;
                prechk 1, DSNTCR.SIM_FILE_OUTPUT, EQ, STOP, 1, 3;
            endofprechk;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_GET_LAB, EQ, FILE20_LAB, 1, 6;
            endofverify;
        endofsts;
        sts FILE19_LAB;
            prechktbl 1;
                prechk 1, DSNTCR.SIM_FILE_OUTPUT, EQ, STOP, 1, 3;
            endofprechk;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_GET_LAB, EQ, FILE19_LAB, 1, 6;
            endofverify;
        endofsts;
        sts FILE18_LAB;
            prechktbl 1;
                prechk 1, DSNTCR.SIM_FILE_OUTPUT, EQ, STOP, 1, 3;
            endofprechk;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_GET_LAB, EQ, FILE18_LAB, 1, 6;
            endofverify;
        endofsts;
        sts FILE17_LAB;
            prechktbl 1;
                prechk 1, DSNTCR.SIM_FILE_OUTPUT, EQ, STOP, 1, 3;
            endofprechk;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_GET_LAB, EQ, FILE17_LAB, 1, 6;
            endofverify;
        endofsts;
        sts FILE16_LAB;
            prechktbl 1;
                prechk 1, DSNTCR.SIM_FILE_OUTPUT, EQ, STOP, 1, 3;
            endofprechk;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_GET_LAB, EQ, FILE16_LAB, 1, 6;
            endofverify;
        endofsts;
        sts FILE15_LAB;
            prechktbl 1;
                prechk 1, DSNTCR.SIM_FILE_OUTPUT, EQ, STOP, 1, 3;
            endofprechk;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_GET_LAB, EQ, FILE15_LAB, 1, 6;
            endofverify;
        endofsts;
        sts FILE14_LAB;
            prechktbl 1;
                prechk 1, DSNTCR.SIM_FILE_OUTPUT, EQ, STOP, 1, 3;
            endofprechk;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_GET_LAB, EQ, FILE14_LAB, 1, 6;
            endofverify;
        endofsts;
        sts FILE13_LAB;
            prechktbl 1;
                prechk 1, DSNTCR.SIM_FILE_OUTPUT, EQ, STOP, 1, 3;
            endofprechk;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_GET_LAB, EQ, FILE13_LAB, 1, 6;
            endofverify;
        endofsts;
        sts FILE12_LAB;
            prechktbl 1;
                prechk 1, DSNTCR.SIM_FILE_OUTPUT, EQ, STOP, 1, 3;
            endofprechk;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_GET_LAB, EQ, FILE12_LAB, 1, 6;
            endofverify;
        endofsts;
        sts FILE11_LAB;
            prechktbl 1;
                prechk 1, DSNTCR.SIM_FILE_OUTPUT, EQ, STOP, 1, 3;
            endofprechk;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_GET_LAB, EQ, FILE11_LAB, 1, 6;
            endofverify;
        endofsts;
        sts FILE10_LAB;
            prechktbl 1;
                prechk 1, DSNTCR.SIM_FILE_OUTPUT, EQ, STOP, 1, 3;
            endofprechk;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_GET_LAB, EQ, FILE10_LAB, 1, 6;
            endofverify;
        endofsts;
        sts FILE9_LAB;
            prechktbl 1;
                prechk 1, DSNTCR.SIM_FILE_OUTPUT, EQ, STOP, 1, 3;
            endofprechk;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_GET_LAB, EQ, FILE9_LAB, 1, 6;
            endofverify;
        endofsts;
        sts FILE8_LAB;
            prechktbl 1;
                prechk 1, DSNTCR.SIM_FILE_OUTPUT, EQ, STOP, 1, 3;
            endofprechk;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_GET_LAB, EQ, FILE8_LAB, 1, 6;
            endofverify;
        endofsts;
        sts FILE7_LAB;
            prechktbl 1;
                prechk 1, DSNTCR.SIM_FILE_OUTPUT, EQ, STOP, 1, 3;
            endofprechk;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_GET_LAB, EQ, FILE7_LAB, 1, 6;
            endofverify;
        endofsts;
        sts FILE6_LAB;
            prechktbl 1;
                prechk 1, DSNTCR.SIM_FILE_OUTPUT, EQ, STOP, 1, 3;
            endofprechk;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_GET_LAB, EQ, FILE6_LAB, 1, 6;
            endofverify;
        endofsts;
        sts FILE5_LAB;
            prechktbl 1;
                prechk 1, DSNTCR.SIM_FILE_OUTPUT, EQ, STOP, 1, 3;
            endofprechk;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_GET_LAB, EQ, FILE5_LAB, 1, 6;
            endofverify;
        endofsts;
        sts FILE4_LAB;
            prechktbl 1;
                prechk 1, DSNTCR.SIM_FILE_OUTPUT, EQ, STOP, 1, 3;
            endofprechk;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_GET_LAB, EQ, FILE4_LAB, 1, 6;
            endofverify;
        endofsts;
        sts FILE3_LAB;
            prechktbl 1;
                prechk 1, DSNTCR.SIM_FILE_OUTPUT, EQ, STOP, 1, 3;
            endofprechk;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_GET_LAB, EQ, FILE3_LAB, 1, 6;
            endofverify;
        endofsts;
        sts FILE2_LAB;
            prechktbl 1;
                prechk 1, DSNTCR.SIM_FILE_OUTPUT, EQ, STOP, 1, 3;
            endofprechk;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_GET_LAB, EQ, FILE2_LAB, 1, 6;
            endofverify;
        endofsts;
        sts FILE1_LAB;
            prechktbl 1;
                prechk 1, DSNTCR.SIM_FILE_OUTPUT, EQ, STOP, 1, 3;
            endofprechk;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_GET_LAB, EQ, FILE1_LAB, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

ctl DSNTCR.SIM_FILE_GET_OPE, 0x00, PREVERIFY_OFF;
    param 1, s, , S, ;
        sts FILE20_OPE;
            prechktbl 1;
                prechk 1, DSNTCR.SIM_FILE_OUTPUT, EQ, STOP, 1, 3;
            endofprechk;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_GET_OPE, EQ, FILE20_OPE, 1, 6;
            endofverify;
        endofsts;
        sts FILE19_OPE;
            prechktbl 1;
                prechk 1, DSNTCR.SIM_FILE_OUTPUT, EQ, STOP, 1, 3;
            endofprechk;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_GET_OPE, EQ, FILE19_OPE, 1, 6;
            endofverify;
        endofsts;
        sts FILE18_OPE;
            prechktbl 1;
                prechk 1, DSNTCR.SIM_FILE_OUTPUT, EQ, STOP, 1, 3;
            endofprechk;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_GET_OPE, EQ, FILE18_OPE, 1, 6;
            endofverify;
        endofsts;
        sts FILE17_OPE;
            prechktbl 1;
                prechk 1, DSNTCR.SIM_FILE_OUTPUT, EQ, STOP, 1, 3;
            endofprechk;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_GET_OPE, EQ, FILE17_OPE, 1, 6;
            endofverify;
        endofsts;
        sts FILE16_OPE;
            prechktbl 1;
                prechk 1, DSNTCR.SIM_FILE_OUTPUT, EQ, STOP, 1, 3;
            endofprechk;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_GET_OPE, EQ, FILE16_OPE, 1, 6;
            endofverify;
        endofsts;
        sts FILE15_OPE;
            prechktbl 1;
                prechk 1, DSNTCR.SIM_FILE_OUTPUT, EQ, STOP, 1, 3;
            endofprechk;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_GET_OPE, EQ, FILE15_OPE, 1, 6;
            endofverify;
        endofsts;
        sts FILE14_OPE;
            prechktbl 1;
                prechk 1, DSNTCR.SIM_FILE_OUTPUT, EQ, STOP, 1, 3;
            endofprechk;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_GET_OPE, EQ, FILE14_OPE, 1, 6;
            endofverify;
        endofsts;
        sts FILE13_OPE;
            prechktbl 1;
                prechk 1, DSNTCR.SIM_FILE_OUTPUT, EQ, STOP, 1, 3;
            endofprechk;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_GET_OPE, EQ, FILE13_OPE, 1, 6;
            endofverify;
        endofsts;
        sts FILE12_OPE;
            prechktbl 1;
                prechk 1, DSNTCR.SIM_FILE_OUTPUT, EQ, STOP, 1, 3;
            endofprechk;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_GET_OPE, EQ, FILE12_OPE, 1, 6;
            endofverify;
        endofsts;
        sts FILE11_OPE;
            prechktbl 1;
                prechk 1, DSNTCR.SIM_FILE_OUTPUT, EQ, STOP, 1, 3;
            endofprechk;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_GET_OPE, EQ, FILE11_OPE, 1, 6;
            endofverify;
        endofsts;
        sts FILE10_OPE;
            prechktbl 1;
                prechk 1, DSNTCR.SIM_FILE_OUTPUT, EQ, STOP, 1, 3;
            endofprechk;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_GET_OPE, EQ, FILE10_OPE, 1, 6;
            endofverify;
        endofsts;
        sts FILE9_OPE;
            prechktbl 1;
                prechk 1, DSNTCR.SIM_FILE_OUTPUT, EQ, STOP, 1, 3;
            endofprechk;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_GET_OPE, EQ, FILE9_OPE, 1, 6;
            endofverify;
        endofsts;
        sts FILE8_OPE;
            prechktbl 1;
                prechk 1, DSNTCR.SIM_FILE_OUTPUT, EQ, STOP, 1, 3;
            endofprechk;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_GET_OPE, EQ, FILE8_OPE, 1, 6;
            endofverify;
        endofsts;
        sts FILE7_OPE;
            prechktbl 1;
                prechk 1, DSNTCR.SIM_FILE_OUTPUT, EQ, STOP, 1, 3;
            endofprechk;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_GET_OPE, EQ, FILE7_OPE, 1, 6;
            endofverify;
        endofsts;
        sts FILE6_OPE;
            prechktbl 1;
                prechk 1, DSNTCR.SIM_FILE_OUTPUT, EQ, STOP, 1, 3;
            endofprechk;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_GET_OPE, EQ, FILE6_OPE, 1, 6;
            endofverify;
        endofsts;
        sts FILE5_OPE;
            prechktbl 1;
                prechk 1, DSNTCR.SIM_FILE_OUTPUT, EQ, STOP, 1, 3;
            endofprechk;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_GET_OPE, EQ, FILE5_OPE, 1, 6;
            endofverify;
        endofsts;
        sts FILE4_OPE;
            prechktbl 1;
                prechk 1, DSNTCR.SIM_FILE_OUTPUT, EQ, STOP, 1, 3;
            endofprechk;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_GET_OPE, EQ, FILE4_OPE, 1, 6;
            endofverify;
        endofsts;
        sts FILE3_OPE;
            prechktbl 1;
                prechk 1, DSNTCR.SIM_FILE_OUTPUT, EQ, STOP, 1, 3;
            endofprechk;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_GET_OPE, EQ, FILE3_OPE, 1, 6;
            endofverify;
        endofsts;
        sts FILE2_OPE;
            prechktbl 1;
                prechk 1, DSNTCR.SIM_FILE_OUTPUT, EQ, STOP, 1, 3;
            endofprechk;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_GET_OPE, EQ, FILE2_OPE, 1, 6;
            endofverify;
        endofsts;
        sts FILE1_OPE;
            prechktbl 1;
                prechk 1, DSNTCR.SIM_FILE_OUTPUT, EQ, STOP, 1, 3;
            endofprechk;
            verifytbl 1;
                verify 1, DSNTCR.SIM_FILE_GET_OPE, EQ, FILE1_OPE, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/*No.78*/
/*送信キャリアドップラ予報値のON/OFF*/
ctl DSNTCR.TX_CARR_DOPP_PRE, 0x00, ; 
    param 1, s, , S, ;
      sts ON;
        verifytbl 1;
           verify 1, DSNTCR.TX_CARR_DOPP_PRE, EQ, ON, 1, 6;
        endofverify;
      endofsts;
      sts OFF;
        verifytbl 1;
           verify 1, DSNTCR.TX_CARR_DOPP_PRE, EQ, OFF, 1, 6;
        endofverify;
      endofsts;
    endofparam;
end;

/*No.79 */
/* 予報値バッファをクリアする。 2013/08/23 */
ctl DSNTCR.PREDICTION_CLEAR, 0x00, ; 
    param 1, s, , S, ;
        sts CLEAR;
        endofsts;
    endofparam;
end;

/*No.80*/
/*送信サブキャリアドップラ予報値のON/OFF*/
ctl DSNTCR.TX_SC_DOPP_PRE, 0x00, ; 
    param 1, s, , S, ;
      sts ON;
        verifytbl 1;
           verify 1, DSNTCR.TX_SC_DOPP_PRE, EQ, ON, 1, 6;
        endofverify;
      endofsts;
      sts OFF;
        verifytbl 1;
           verify 1, DSNTCR.TX_SC_DOPP_PRE, EQ, OFF, 1, 6;
        endofverify;
      endofsts;
    endofparam;
end;


/* 復調部 */

/* control */
/* SS-TCRDEM */

/*No.1*/
/* 受信IF中心周波数を設定する。 */
/* 66.00MHz～74.00MHz(10kHz step) 表示値=電文データ×10000 [Hz] */
ctl DSNTCR.RX_IF_FREQ, 0x00, ;
    param 1, f, 2.2, A, 2.2;
        val 66.00, 74.00;
            verifytbl 1;
                verify 1, DSNTCR.RX_IF_FREQ, EQ, *, 1, 6;  
            endofverify;
        endofval;
    endofparam;
end;

/* No.2 */
/* 受信変調形式を設定する。 */
/* 1h：PCM-PM 3h：PCM-PSK-PM */
ctl DSNTCR.RX_MOD_FORMAT, 0x00, ; 
     param 1, s, , S, ;
        sts PCM-PSK-PM;
            verifytbl 1;
                verify 1, DSNTCR.RX_MOD_FORMAT, EQ, PCM-PSK-PM, 1, 6;
            endofverify;
        endofsts;
        sts PCM-PM;
            verifytbl 1;
                verify 1, DSNTCR.RX_MOD_FORMAT, EQ, PCM-PM, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/ * No. 3 * /
/* 受信サブキャリア周波数 */
/* 100.0000Hz～1200000.0000Hz(0.0001Hz step) 表示値=電文データ/10000 [Hz] */
ctl DSNTCR.RX_SC_FREQ, 0x00, ;
    param 1, f, 7.4, L, 7.4;     
      val 100.0000, 1200000.0000;
            verifytbl 1;
                verify 1, DSNTCR.RX_SC_FREQ, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No.  4 */
/* 受信ビットレート */
/* "1.0000bps～600000.0000bps(0.0001bps step) 表示値=電文データ/10000 [bps] */
ctl DSNTCR.RX_BIT_RATE, 0x00, ;
    param 1, f, 6.4, L, 6.4;                 
        val 1.0000, 600000.0000;
            verifytbl 1;
                verify 1, DSNTCR.RX_BIT_RATE, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No.  5 */
/* 受信データ形式 */
/* 0h：NRZ-L 1h：NRZ-M 2h：NRZ-S 4h：BiΦ-L 5h：BiΦ-M 6h：BiΦ-S */
ctl DSNTCR.RX_DATA_FORMAT, 0x00, ;
    param 1, s, , S, ;
        sts BIPH-S;
            verifytbl 1;
                verify 1, DSNTCR.RX_DATA_FORMAT, EQ, BIPH-S, 1, 6;
            endofverify;
        endofsts;
        sts BIPH-M;
            verifytbl 1;
                verify 1, DSNTCR.RX_DATA_FORMAT, EQ, BIPH-M, 1, 6;
            endofverify;
        endofsts;
        sts BIPH-L;
            verifytbl 1;
                verify 1, DSNTCR.RX_DATA_FORMAT, EQ, BIPH-L, 1, 6;
            endofverify;
        endofsts;
        sts NRZ-S;
            verifytbl 1;
                verify 1, DSNTCR.RX_DATA_FORMAT, EQ, NRZ-S, 1, 6;
            endofverify;
        endofsts;
        sts NRZ-M;
            verifytbl 1;
                verify 1, DSNTCR.RX_DATA_FORMAT, EQ, NRZ-M, 1, 6;
            endofverify;
        endofsts;
        sts NRZ-L;
            verifytbl 1;
                verify 1, DSNTCR.RX_DATA_FORMAT, EQ, NRZ-L, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.  6 */
/* 受信復号化モード */
/* 0h：OFF 1h：VITERBI(CCSDS) 2h：VITERBI(JPL) 3h：VITERBI(ESA) 4h：TURBO */
ctl DSNTCR.RX_DECODE_MODE, 0x00, ; 
    param 1, s, , S, ;
        sts TURBO;
            verifytbl 1;
                verify 1, DSNTCR.RX_DECODE_MODE, EQ, TURBO, 1, 6;
            endofverify;
        endofsts;
        sts ESA;
            verifytbl 1;
                verify 1, DSNTCR.RX_DECODE_MODE, EQ, ESA, 1, 6;
            endofverify;
        endofsts;
        sts JPL;
            verifytbl 1;
                verify 1, DSNTCR.RX_DECODE_MODE, EQ, JPL, 1, 6;
            endofverify;
        endofsts;
        sts CCSDS;
            verifytbl 1;
                verify 1, DSNTCR.RX_DECODE_MODE, EQ, CCSDS, 1, 6;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, DSNTCR.RX_DECODE_MODE, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.  7 */
/* 受信サブキャリア波形の形式 */
/* 0h:SIN 1h:SQUARE */
ctl DSNTCR.RX_SC_WAVE_FORM, 0x00, ; 
    param 1, s, , S, ;
        sts SQUARE;
            verifytbl 1;
                verify 1,DSNTCR.RX_SC_WAVE_FORM, EQ, SQUARE, 1, 6;
            endofverify;
        endofsts;
        sts SIN;
            verifytbl 1;
                verify 1,DSNTCR.RX_SC_WAVE_FORM, EQ, SIN, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.  8 */
/* 受信フィルタ形式 */
/* 0h：LINEAR PHASE 1h：SQUARE */
ctl DSNTCR.RX_FILTER_STYLE, 0x00, ; 
     param 1, s, , S, ;
        sts SQUARE;
            verifytbl 1;
                verify 1, DSNTCR.RX_FILTER_STYLE, EQ, SQUARE, 1, 6;
            endofverify;
        endofsts;
        sts LINEAR_PHASE;
            verifytbl 1;
                verify 1, DSNTCR.RX_FILTER_STYLE, EQ, LINEAR_PHASE, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.  9 */
/* 受信テレメの変調度 */
/* 0.00、0.20rad～1.50rad(0.01rad step) 表示値=電文データ/100 [rad]  2013/08/23*/
ctl DSNTCR.RX_MOD_INDEX, 0x00, ;
    param 1, f, 1.2, A, 1.2;
        val 0.0, 1.50;
            verifytbl 1;
                verify 1, DSNTCR.RX_MOD_INDEX, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No. 14 */
/* キャリアループバンド */
/* "0h：1kHz 1h：560Hz (DSN MODEM未使用、拡張用) 2h：300Hz 3h：180Hz (DSN MODEM未使用、拡張用) 4h：100Hz 5h：56Hz  (DSN MODEM未使用、拡張用) 6h：30Hz 7h：18Hz  (DSN MODEM未使用、拡張用) 8h：10Hz 9h：5.6Hz */
ctl DSNTCR.CARR_LOOP_BAND, 0x00, ;
    param 1, s, , S, ;
        sts 1kHz;
            verifytbl 1;
                verify 1, DSNTCR.CARR_LOOP_BAND, EQ, 1kHz, 1, 6;
            endofverify;
        endofsts;
/*
       sts 560Hz;
            verifytbl 1;
                verify 1, DSNTCR.CARR_LOOP_BAND, EQ, 560Hz, 1, 6;
            endofverify;
        endofsts;
*/
        sts 300Hz;
            verifytbl 1;
                verify 1, DSNTCR.CARR_LOOP_BAND, EQ, 300Hz, 1, 6;
            endofverify;
        endofsts;
/*
        sts 180Hz;
            verifytbl 1;
                verify 1, DSNTCR.CARR_LOOP_BAND, EQ, 180Hz, 1, 6;
            endofverify;
        endofsts;
*/
        sts 100Hz;
            verifytbl 1;
                verify 1, DSNTCR.CARR_LOOP_BAND, EQ, 100Hz, 1, 6;
            endofverify;
        endofsts;
/*
        sts 56Hz;
            verifytbl 1;
                verify 1, DSNTCR.CARR_LOOP_BAND, EQ, 56Hz, 1, 6;
            endofverify;
        endofsts;
*/
        sts 30Hz;
            verifytbl 1;
                verify 1, DSNTCR.CARR_LOOP_BAND, EQ, 30Hz, 1, 6;
            endofverify;
        endofsts;
/*
        sts 18Hz;
            verifytbl 1;
                verify 1, DSNTCR.CARR_LOOP_BAND, EQ, 18Hz, 1, 6;
            endofverify;
        endofsts;
*/
        sts 10Hz;
            verifytbl 1;
                verify 1, DSNTCR.CARR_LOOP_BAND, EQ, 10Hz, 1, 6;
            endofverify;
        endofsts;
        sts 5.6Hz;
            verifytbl 1;
                verify 1, DSNTCR.CARR_LOOP_BAND, EQ, 5.6Hz, 1, 6;
            endofverify;
        endofsts;
        sts 3.0Hz;
            verifytbl 1;
                verify 1, DSNTCR.CARR_LOOP_BAND, EQ, 3.0Hz, 1, 6;
            endofverify;
        endofsts;
        sts 1.8Hz;
            verifytbl 1;
                verify 1, DSNTCR.CARR_LOOP_BAND, EQ, 1.8Hz, 1, 6;
            endofverify;
        endofsts;
        sts 1.0Hz;
            verifytbl 1;
                verify 1, DSNTCR.CARR_LOOP_BAND, EQ, 1.0Hz, 1, 6;
            endofverify;
        endofsts;
        sts 0.56Hz;
            verifytbl 1;
                verify 1, DSNTCR.CARR_LOOP_BAND, EQ, 0.56Hz, 1, 6;
            endofverify;
        endofsts;
        sts 0.30Hz;
            verifytbl 1;
                verify 1, DSNTCR.CARR_LOOP_BAND, EQ, 0.30Hz, 1, 6;
            endofverify;
        endofsts;
        sts 0.18Hz;
            verifytbl 1;
                verify 1, DSNTCR.CARR_LOOP_BAND, EQ, 0.18Hz, 1, 6;
            endofverify;
        endofsts;
        sts 0.10Hz;
            verifytbl 1;
                verify 1, DSNTCR.CARR_LOOP_BAND, EQ, 0.10Hz, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No. 15 */
/* AGCループバンド */
/* 0h：100Hz 1h：56Hz   (DSN MODEM未使用、拡張用) 2h：30Hz 3h：18Hz   (DSN MODEM未使用、拡張用) 4h：10Hz 5h：5.6Hz  (DSN MODEM未使用、拡張用) 6h：3.0Hz 7h：1.8Hz  (DSN MODEM未使用、拡張用) 8h：1.0Hz 9h：0.56Hz Ah：0.30Hz Bh：0.18Hz Ch：0.10Hz Dh：0.056Hz Eh：0.030Hz Fh：0.018Hz 10h：0.010Hz */
ctl DSNTCR.AGC_LOOP_BAND, 0x00, ;
    param 1, s, , S, ;
        sts 100Hz;
            verifytbl 1;
                verify 1, DSNTCR.AGC_LOOP_BAND, EQ, 100Hz, 1, 6;
            endofverify;
        endofsts;
/*
        sts 56Hz;
            verifytbl 1;
                verify 1, DSNTCR.AGC_LOOP_BAND, EQ, 56Hz, 1, 6;
            endofverify;
        endofsts;
*/
        sts 30Hz;
            verifytbl 1;
                verify 1, DSNTCR.AGC_LOOP_BAND, EQ, 30Hz, 1, 6;
            endofverify;
        endofsts;
 /*
       sts 18Hz;
            verifytbl 1;
                verify 1, DSNTCR.AGC_LOOP_BAND, EQ, 18Hz, 1, 6;
            endofverify;
        endofsts;
*/
        sts 10Hz;
            verifytbl 1;
                verify 1, DSNTCR.AGC_LOOP_BAND, EQ, 10Hz, 1, 6;
            endofverify;
        endofsts;
/*
        sts 5.6Hz;
            verifytbl 1;
                verify 1, DSNTCR.AGC_LOOP_BAND, EQ, 5.6Hz, 1, 6;
            endofverify;
        endofsts;
*/
        sts 3.0Hz;
            verifytbl 1;
                verify 1, DSNTCR.AGC_LOOP_BAND, EQ, 3.0Hz, 1, 6;
            endofverify;
        endofsts;
/*
        sts 1.8Hz;
            verifytbl 1;
                verify 1, DSNTCR.AGC_LOOP_BAND, EQ, 1.8Hz, 1, 6;
            endofverify;
        endofsts;
*/
        sts 1.0Hz;
            verifytbl 1;
                verify 1, DSNTCR.AGC_LOOP_BAND, EQ, 1.0Hz, 1, 6;
            endofverify;
        endofsts;
        sts 0.56Hz;
            verifytbl 1;
                verify 1, DSNTCR.AGC_LOOP_BAND, EQ, 0.56Hz, 1, 6;
            endofverify;
        endofsts;
        sts 0.30Hz;
            verifytbl 1;
                verify 1, DSNTCR.AGC_LOOP_BAND, EQ, 0.30Hz, 1, 6;
            endofverify;
        endofsts;
        sts 0.18Hz;
            verifytbl 1;
                verify 1, DSNTCR.AGC_LOOP_BAND, EQ, 0.18Hz, 1, 6;
            endofverify;
        endofsts;
        sts 0.10Hz;
            verifytbl 1;
                verify 1, DSNTCR.AGC_LOOP_BAND, EQ, 0.10Hz, 1, 6;
            endofverify;
        endofsts;
        sts 0.056Hz;
            verifytbl 1;
                verify 1, DSNTCR.AGC_LOOP_BAND, EQ, 0.056Hz, 1, 6;
            endofverify;
        endofsts;
        sts 0.030Hz;
            verifytbl 1;
                verify 1, DSNTCR.AGC_LOOP_BAND, EQ, 0.030Hz, 1, 6;
            endofverify;
        endofsts;
        sts 0.018Hz;
            verifytbl 1;
                verify 1, DSNTCR.AGC_LOOP_BAND, EQ, 0.018Hz, 1, 6;
            endofverify;
        endofsts;
        sts 0.010Hz;
            verifytbl 1;
                verify 1, DSNTCR.AGC_LOOP_BAND, EQ, 0.010Hz, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No. 16 */
/* キャリアPLLループの次数 */
/* 0h：2nd ORDER 1h：3rd ORDER */
ctl DSNTCR.CARR_PLL_MODE, 0x00, ; 
     param 1, s, , S, ;
        sts 2nd_ORDER;
            verifytbl 1;
                verify 1, DSNTCR.CARR_PLL_MODE, EQ, 2nd_ORDER, 1, 6;
            endofverify;
        endofsts;
        sts 3rd_ORDER;
            verifytbl 1;
                verify 1, DSNTCR.CARR_PLL_MODE, EQ, 3rd_ORDER, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No. 17 */
/* キャリア捕捉支援機能のON/OFF */
/* 0h：OFF 1h：AUTO 2h：MANUAL */
ctl DSNTCR.CARR_LOOP_AID, 0x00, ; 
     param 1, s, , S, ;
        sts MANUAL;
            verifytbl 1;
                verify 1, DSNTCR.CARR_LOOP_AID, EQ, MANUAL, 1, 6;
            endofverify;
        endofsts;
        sts AUTO;
            verifytbl 1;
                verify 1, DSNTCR.CARR_LOOP_AID, EQ, AUTO, 1, 6;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, DSNTCR.CARR_LOOP_AID, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No. 18 */
/* キャリアPLLループのリジェクト方式 */
/* 0h：OFF 1h：AUTO 2h：MANUAL */
ctl DSNTCR.CARR_REJECT_MODE, 0x00, ; 
     param 1, s, , S, ;
        sts MANUAL;
            verifytbl 1;
                verify 1, DSNTCR.CARR_REJECT_MODE, EQ, MANUAL, 1, 6;
            endofverify;
        endofsts;
        sts AUTO;
            verifytbl 1;
                verify 1, DSNTCR.CARR_REJECT_MODE, EQ, AUTO, 1, 6;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, DSNTCR.CARR_REJECT_MODE, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No. 19 */
/* REJECT_SETTINGがMANUAL時の秒数 */
/* 1～300s(1s step) */
ctl DSNTCR.REJECT_TIME, 0x00, ;
    param 1, u, 3, A, 3;
        val 1, 300;
            verifytbl 1;
                verify 1, DSNTCR.REJECT_TIME, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No. 20 */
/* サブキャリアループバンド */
/* 0h：NARROW 1h：MEDIUM 2h：WIDE */
ctl DSNTCR.SUB_CARR_LBW, 0x00, ;
     param 1, s, , S, ;
        sts NARROW;
            verifytbl 1;
                verify 1, DSNTCR.SUB_CARR_LBW, EQ, NARROW, 1, 6;
            endofverify;
        endofsts;
        sts MEDIUM;
            verifytbl 1;
                verify 1, DSNTCR.SUB_CARR_LBW, EQ, MEDIUM, 1, 6;
            endofverify;
        endofsts;
        sts WIDE;
            verifytbl 1;
                verify 1, DSNTCR.SUB_CARR_LBW, EQ, WIDE, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No. 21 */
/* ビットループバンド */
/* 0h：NARROW 1h：MEDIUM 2h：WIDE */
ctl DSNTCR.BIT_LBW, 0x00, ;
     param 1, s, , S, ;
        sts NARROW;
            verifytbl 1;
                verify 1, DSNTCR.BIT_LBW, EQ, NARROW, 1, 6;
            endofverify;
        endofsts;
        sts MEDIUM;
            verifytbl 1;
                verify 1, DSNTCR.BIT_LBW, EQ, MEDIUM, 1, 6;
            endofverify;
        endofsts;
        sts WIDE;
            verifytbl 1;
                verify 1, DSNTCR.BIT_LBW, EQ, WIDE, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.22 */
/* 搬送波を再捕捉する 2013/08/23 */
/* 1h : REJECT */
ctl DSNTCR.CARRIER_REJECT, 0x00, ; 
    param 1, s, , S, ;
        sts REJECT;
        endofsts;
    endofparam;
end;

/* No.23 */
/* シンボルリジェクト  2013/08/23 */
/* 1h : REJECT */
ctl DSNTCR.SYMBOL_REJECT, 0x00, ; 
    param 1, s, , S, ;
        sts REJECT;
        endofsts;
    endofparam;
end;

/* No. 24 */
/* テレメエイドのON/OFF */
/* 1h : OFF 0h : ON */
ctl DSNTCR.TLM_AID, 0x00, ; 
    param 1, s, , S, ;
        sts ON;
            verifytbl 1;
                verify 1, DSNTCR.TLM_AID, EQ, ON, 1, 6;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, DSNTCR.TLM_AID, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No. 25 */
/* シンボルエイドのON/OFF */
/* 1h : OFF 0h : ON */
ctl DSNTCR.SYMBOL_AID, 0x00, ; 
    param 1, s, , S, ;
        sts ON;
            verifytbl 1;
                verify 1, DSNTCR.SYMBOL_AID, EQ, ON, 1, 6;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, DSNTCR.SYMBOL_AID, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No. 30 */
/* FFTパラメータセッティングのAUTO/MANUAL */
/* 0h：AUTO 1h：MANUAL */
ctl DSNTCR.FFT_SETTING, 0x00, ; 
    param 1, s, , S, ;
        sts MANUAL;
            verifytbl 1;
                verify 1, DSNTCR.FFT_SETTING, EQ, MANUAL, 1, 6;
            endofverify;
        endofsts;
        sts AUTO;
            verifytbl 1;
                verify 1, DSNTCR.FFT_SETTING, EQ, AUTO, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.31 */
/* FFTサンプリング周波数選択(FFT SETTINGがMANUAL時使用、設定アンサー) */
/* 0h：1/1 1h：1/2 2h：1/4 3h：1/8 4h：1/16 5h：1/32 6h：1/64 7h：1/128 8h：1/256 9h：1/512 Ah：1/1024 Bh：1/2048 Ch：1/4096 Dh：1/8192 Eh：1/16384 Fh：1/32768 */
ctl DSNTCR.FFT_FS_FREQ_SEL, 0x00, ;
    param 1, s, , S, ;
        sts 1/32768;
            verifytbl 1;
                verify 1, DSNTCR.FFT_FS_FREQ_SEL, EQ, 1/32768, 1, 6;
            endofverify;
        endofsts;
        sts 1/16384;
            verifytbl 1;
                verify 1, DSNTCR.FFT_FS_FREQ_SEL, EQ, 1/16384, 1, 6;
            endofverify;
        endofsts;
        sts 1/8192;
            verifytbl 1;
                verify 1, DSNTCR.FFT_FS_FREQ_SEL, EQ, 1/8192, 1, 6;
            endofverify;
        endofsts;
        sts 1/4096;
            verifytbl 1;
                verify 1, DSNTCR.FFT_FS_FREQ_SEL, EQ, 1/4096, 1, 6;
            endofverify;
        endofsts;
        sts 1/2048;
            verifytbl 1;
                verify 1, DSNTCR.FFT_FS_FREQ_SEL, EQ, 1/2048, 1, 6;
            endofverify;
        endofsts;
        sts 1/1024;
            verifytbl 1;
                verify 1, DSNTCR.FFT_FS_FREQ_SEL, EQ, 1/1024, 1, 6;
            endofverify;
        endofsts;
        sts 1/512;
            verifytbl 1;
                verify 1, DSNTCR.FFT_FS_FREQ_SEL, EQ, 1/512, 1, 6;
            endofverify;
        endofsts;
        sts 1/256;
            verifytbl 1;
                verify 1, DSNTCR.FFT_FS_FREQ_SEL, EQ, 1/256, 1, 6;
            endofverify;
        endofsts;
        sts 1/128;
            verifytbl 1;
                verify 1, DSNTCR.FFT_FS_FREQ_SEL, EQ, 1/128, 1, 6;
            endofverify;
        endofsts;
        sts 1/64;
            verifytbl 1;
                verify 1, DSNTCR.FFT_FS_FREQ_SEL, EQ, 1/64, 1, 6;
            endofverify;
        endofsts;
        sts 1/32;
            verifytbl 1;
                verify 1, DSNTCR.FFT_FS_FREQ_SEL, EQ, 1/32, 1, 6;
            endofverify;
        endofsts;
        sts 1/16;
            verifytbl 1;
                verify 1, DSNTCR.FFT_FS_FREQ_SEL, EQ, 1/16, 1, 6;
            endofverify;
        endofsts;
        sts 1/8;
            verifytbl 1;
                verify 1, DSNTCR.FFT_FS_FREQ_SEL, EQ, 1/8, 1, 6;
            endofverify;
        endofsts;
        sts 1/4;
            verifytbl 1;
                verify 1, DSNTCR.FFT_FS_FREQ_SEL, EQ, 1/4, 1, 6;
            endofverify;
        endofsts;
        sts 1/2;
            verifytbl 1;
                verify 1, DSNTCR.FFT_FS_FREQ_SEL, EQ, 1/2, 1, 6;
            endofverify;
        endofsts;
        sts 1/1;
            verifytbl 1;
                verify 1, DSNTCR.FFT_FS_FREQ_SEL, EQ, 1/1, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No. 32 */
/* FFTポイント数 */
/* 2=16384 3=8192 4=4096 5=2048 6=1024 7=512 8=256 */
ctl DSNTCR.FFT_POINT, 0x00, ;
    param 1, s, , S, ;
        sts 16384;
            verifytbl 1;
                verify 1, DSNTCR.FFT_POINT, EQ, 16384, 1, 6;
            endofverify;
        endofsts;
        sts 8192;
            verifytbl 1;
                verify 1, DSNTCR.FFT_POINT, EQ, 8192, 1, 6;
            endofverify;
        endofsts;
        sts 4096;
            verifytbl 1;
                verify 1, DSNTCR.FFT_POINT, EQ, 4096, 1, 6;
            endofverify;
        endofsts;
        sts 2048;
            verifytbl 1;
                verify 1, DSNTCR.FFT_POINT, EQ, 2048, 1, 6;
            endofverify;
        endofsts;
        sts 1024;
            verifytbl 1;
                verify 1, DSNTCR.FFT_POINT, EQ, 1024, 1, 6;
            endofverify;
        endofsts;
        sts 512;
            verifytbl 1;
                verify 1, DSNTCR.FFT_POINT, EQ, 512, 1, 6;
            endofverify;
        endofsts;
        sts 256;
            verifytbl 1;
                verify 1, DSNTCR.FFT_POINT, EQ, 256, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No. 33 */
/* FFT検出方法 */
/* 0h：PEAK 1h：POWER */
ctl DSNTCR.FFT_DETECT_MODE, 0x00, ; 
    param 1, s, , S, ;
        sts PEAK;
            verifytbl 1;
                verify 1, DSNTCR.FFT_DETECT_MODE, EQ, PEAK, 1, 6;
            endofverify;
        endofsts;
        sts POWER;
            verifytbl 1;
                verify 1, DSNTCR.FFT_DETECT_MODE, EQ, POWER, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No. 34 */
/* FFT検出閾値 */
/* 0.0dB～99.9dB(0.1dB step) 電文データ=設定値[dB]*10 */
ctl DSNTCR.FFT_THRESHOLD, 0x00, ;
    param 1, f, 2.1, A, 2.1;
        val 0.0, 99.9;
           verifytbl 1;
              verify 1, DSNTCR.FFT_THRESHOLD, EQ, *, 1, 6;
           endofverify;
        endofval;
    endofparam;
end;

/* No.39 */
/* フレーム長 */
/* 8byte～2048byte(1byte step) */
ctl DSNTCR.TLM_FRAME_LENGTH, 0x00, ;
    param 1, u, 4, A, 4;
        val 8, 2048;
            verifytbl 1;
                verify 1, DSNTCR.TLM_FRAME_LENGTH, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No.40 */
/* フレームロックオン段数 */
/* 1byte～15byte(1frame step) */
ctl DSNTCR.SCH_TO_LCK, 0x00, ;
    param 1, u, 2, A, 2;
        val 1, 15;
            verifytbl 1;
                verify 1, DSNTCR.SCH_TO_LCK, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No.41 */
/* フレームロックオフ段数 */
/* 1byte～15byte(1frame step) */
ctl DSNTCR.LCK_TO_SCH, 0x00, ;
    param 1, u, 2, A, 2;
        val 1, 15;
            verifytbl 1;
                verify 1, DSNTCR.LCK_TO_SCH, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No. 42 */
/* 誤り許容数 */
/* 0～9bit(1bit step) 2013/09/02設定値変更*/
ctl DSNTCR.ERR_PERMIT, 0x00, ;
    param 1, u, 1, A, 1;
        val 0, 9;
            verifytbl 1;
                verify 1, DSNTCR.ERR_PERMIT, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No. 43 */
/* チェックウィンドウ幅 */
/* 0h：  0bits 1h：±1bits 2h：±2bits 3h：±3bits */
ctl DSNTCR.CHECK_WINDOW, 0x00, ; 
    param 1, s, , S, ;
        sts ±3bits;
            verifytbl 1;
                verify 1, DSNTCR.CHECK_WINDOW, EQ, ±3bits, 1, 6;
            endofverify;
        endofsts;
        sts ±2bits;
            verifytbl 1;
                verify 1, DSNTCR.CHECK_WINDOW, EQ, ±2bits, 1, 6;
            endofverify;
        endofsts;
        sts ±1bits;
            verifytbl 1;
                verify 1, DSNTCR.CHECK_WINDOW, EQ, ±1bits, 1, 6;
            endofverify;
        endofsts;
        sts 0bits;
            verifytbl 1;
                verify 1, DSNTCR.CHECK_WINDOW, EQ, 0bits, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No. 44 */
/* フレームシンクパターン長 */
/* 1byte～4byte(1byte step) */
ctl DSNTCR.TLM_FSYNC_LENGTH, 0x00, ;
    param 1, u, 1, A, 1;
        val 1, 4;
            verifytbl 1;
                verify 1, DSNTCR.TLM_FSYNC_LENGTH, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No. 45 */
/* フレームシンクパターン */
/* フレームシンクパターン HEX設定 */
ctl DSNTCR.TLM_FSYNC_PAT, 0x00, ;
    param 1, x, 10, A, 10;
        val 0X00000000, 0XFFFFFFFF;
            verifytbl 1;
                verify 1, DSNTCR.TLM_FSYNC_PAT, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No. 46 */
/* サービスグレード */
/* 0h：- 1h：GRADE 2 2h：GRADE 3 3h：GRADE 3 (H) */
ctl DSNTCR.TLM_SERVICEGRADE, 0x00, ;
    param 1, s, , S, ;
        sts 3H;
            verifytbl 1;
                verify 1, DSNTCR.TLM_SERVICEGRADE, EQ, 3H, 1, 6;
            endofverify;
        endofsts;
        sts 3;
            verifytbl 1;
                verify 1, DSNTCR.TLM_SERVICEGRADE, EQ, 3, 1, 6;
            endofverify;
        endofsts;
        sts 2;
            verifytbl 1;
                verify 1, DSNTCR.TLM_SERVICEGRADE, EQ, 2, 1, 6;
            endofverify;
        endofsts;
        sts -;
            verifytbl 1;
                verify 1, DSNTCR.TLM_SERVICEGRADE, EQ, -, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No. 47 */
/* デランダマイズのON/OFF */
/* 0h：OFF 1h：ON */
ctl DSNTCR.DERANDOMIZE, 0x00, ;
    param 1, s, , S, ;
        sts ON;
            verifytbl 1;
                verify 1, DSNTCR.DERANDOMIZE, EQ, ON, 1, 6;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, DSNTCR.DERANDOMIZE, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/*  No. 48 */
/* インタリーブ長の設定 */
ctl DSNTCR.DEINTERLEAVE, 0x00, ;
    param 1, s, , S, ;
        sts SHORT5;
            verifytbl 1;
                verify 1, DSNTCR.DEINTERLEAVE, EQ, SHORT5, 1, 6;
            endofverify;
        endofsts;
        sts SHORT4;
            verifytbl 1;
                verify 1, DSNTCR.DEINTERLEAVE, EQ, SHORT4, 1, 6;
            endofverify;
        endofsts;
        sts SHORT3;
            verifytbl 1;
                verify 1, DSNTCR.DEINTERLEAVE, EQ, SHORT3, 1, 6;
            endofverify;
        endofsts;
        sts SHORT2;
            verifytbl 1;
                verify 1, DSNTCR.DEINTERLEAVE, EQ, SHORT2, 1, 6;
            endofverify;
        endofsts;
        sts SHORT1;
            verifytbl 1;
                verify 1, DSNTCR.DEINTERLEAVE, EQ, SHORT1, 1, 6;
            endofverify;
        endofsts;
        sts NORMAL5;
            verifytbl 1;
                verify 1, DSNTCR.DEINTERLEAVE, EQ, NORMAL5, 1, 6;
            endofverify;
        endofsts;
        sts NORMAL4;
            verifytbl 1;
                verify 1, DSNTCR.DEINTERLEAVE, EQ, NORMAL4, 1, 6;
            endofverify;
        endofsts;
        sts NORMAL3;
            verifytbl 1;
                verify 1, DSNTCR.DEINTERLEAVE, EQ, NORMAL3, 1, 6;
            endofverify;
        endofsts;
        sts NORMAL2;
            verifytbl 1;
                verify 1, DSNTCR.DEINTERLEAVE, EQ, NORMAL2, 1, 6;
            endofverify;
        endofsts;
        sts NORMAL1;
            verifytbl 1;
                verify 1, DSNTCR.DEINTERLEAVE, EQ, NORMAL1, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.49 */
/* ロックオン、ロックオフ、トータルフレームカウント数クリア */
/*    nopar設定になっていたので、CLEARを定義 */
/* 1h : CLEAR */
ctl DSNTCR.FRAME_CNT_CLEAR, 0x00, ; 
    param 1, s, , S, ;
        sts CLEAR;
        endofsts;
    endofparam;
end;

/* No.50 */
/* RSカウントをクリアする 2013/08/23*/
/* 1h : CLEAR */
ctl DSNTCR.RS_CNT_CLEAR, 0x00, ; 
    param 1, s, , S, ;
        sts CLEAR;
        endofsts;
    endofparam;
end;

/* No.55 */
/* サブフレーム長を設定する 2013/08/23変更   */
/*                 0から有効に戻した。 09/06 */
ctl DSNTCR.TLM_SUBFRAME_LEN, 0x00, ;
    param 1, u, 4, A, 4;
        val 0, 2048;
            verifytbl 1;
                verify 1, DSNTCR.TLM_SUBFRAME_LEN, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No.56 */
/* IDの位置 */
/* 0～2047 word(1word step) */
ctl DSNTCR.TLM_WORD_LOC, 0x00, ;
    param 1, u, 4, A, 4;
        val 0, 2047;
            verifytbl 1;
                verify 1, DSNTCR.TLM_WORD_LOC, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No.57 */
/* IDのビット位置 */
/* 0～15bit(1bit step) */
ctl DSNTCR.TLM_ID_BIT_LOC, 0x00, ;
    param 1, u, 2, A, 2;
        val 0, 15;
            verifytbl 1;
                verify 1, DSNTCR.TLM_ID_BIT_LOC, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No.58 */
/* ID長 */
/* 0～16bit(1bit step) */
ctl DSNTCR.TLM_ID_LENGTH, 0x00, ;
    param 1, u, 2, A, 2;
        val 0, 16;
            verifytbl 1;
                verify 1, DSNTCR.TLM_ID_LENGTH, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No.59 */
/* サブフレームロックオン段数 */
/* 1～15frame(1frame step) 2013/09/02設定値変更*/
ctl DSNTCR.SUB_SCH_TO_LCK, 0x00, ;
    param 1, u, 2, A, 2;
        val 1, 15;
            verifytbl 1;
                verify 1, DSNTCR.SUB_SCH_TO_LCK, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No.60 */
/* サブフレームロックオフ段数 */
/* 1～15frame(1frame step) 2013/09/02設定値変更*/
ctl DSNTCR.SUB_LCK_TO_SCH, 0x00, ;
    param 1, u, 2, A, 2;
        val 1, 15;
            verifytbl 1;
                verify 1, DSNTCR.SUB_LCK_TO_SCH, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No.61 */
/* フレームリジェクト */
/* 1h : REJECT */
ctl DSNTCR.FRAME_REJECT, 0x00, ; 
    param 1, s, , S, ;
        sts REJECT;
        endofsts;
    endofparam;
end;

/* No. 66 */
/* ターボブロックコード長 */
/* 0h：1784 bits 1h：3568 bits 2h：7136 bits 3h：8920 bits */
ctl DSNTCR.RX_TB_BLOCK_LEN, 0x00, ;
    param 1, s, , S, ;
        sts 8920bits;
            verifytbl 1;
                verify 1, DSNTCR.RX_TB_BLOCK_LEN, EQ, 8920bits, 1, 6;
            endofverify;
        endofsts;
        sts 7136bits;
            verifytbl 1;
                verify 1, DSNTCR.RX_TB_BLOCK_LEN, EQ, 7136bits, 1, 6;
            endofverify;
        endofsts;
        sts 3568bits;
            verifytbl 1;
                verify 1, DSNTCR.RX_TB_BLOCK_LEN, EQ, 3568bits, 1, 6;
            endofverify;
        endofsts;
        sts 1784bits;
            verifytbl 1;
                verify 1, DSNTCR.RX_TB_BLOCK_LEN, EQ, 1784bits, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No. 67 */
/* ターボ符号化率 */
/* 0h：1/2 1h：1/3 2h：1/4 3h：1/6 */
ctl DSNTCR.RX_TB_CODE_RATE, 0x00, ;
    param 1, s, , S, ;
        sts 1/6;
            verifytbl 1;
                verify 1, DSNTCR.RX_TB_CODE_RATE, EQ, 1/6, 1, 6;
            endofverify;
        endofsts;
        sts 1/4;
            verifytbl 1;
                verify 1, DSNTCR.RX_TB_CODE_RATE, EQ, 1/4, 1, 6;
            endofverify;
        endofsts;
        sts 1/3;
            verifytbl 1;
                verify 1, DSNTCR.RX_TB_CODE_RATE, EQ, 1/3, 1, 6;
            endofverify;
        endofsts;
        sts 1/2;
            verifytbl 1;
                verify 1, DSNTCR.RX_TB_CODE_RATE, EQ, 1/2, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.68 */
/* 積分フレーム数 */
/* 1～4 */
ctl DSNTCR.INTEG_FRAME, 0x00, ;
    param 1, u, 1, A, 1;
        val 1, 4;
            verifytbl 1;
                verify 1, DSNTCR.INTEG_FRAME, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No.69 */
/* ターボCRCのON/OFF設定を行う。 */
/* 0h：OFF 1h：ON */
ctl DSNTCR.RX_TB_CRC, 0x00, ; 
    param 1, s, , S, ;
        sts ON;
            verifytbl 1;
                verify 1, DSNTCR.RX_TB_CRC, EQ, ON, 1, 6;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, DSNTCR.RX_TB_CRC, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.70 */
/* ターボロックオン段数 */
/* 1～15frame(1frame step) 2013/09/02設定値変更 */
ctl DSNTCR.TB_SCH_TO_LOCK, 0x00, ;
    param 1, u, 2, A, 2;
        val 1, 15;
            verifytbl 1;
                verify 1, DSNTCR.TB_SCH_TO_LOCK, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No.71 */
/* ターボロックオフ段数 */
/* 1～15frame(1frame step) 2013/09/02設定値変更 */
ctl DSNTCR.TB_LOCK_TO_SCH, 0x00, ;
    param 1, u, 2, A, 2;
        val 1, 15;
            verifytbl 1;
                verify 1, DSNTCR.TB_LOCK_TO_SCH, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No.72 */
/* ターボデランダマイズのON/OFF */
/* 0h：OFF 1h：ON */
ctl DSNTCR.TB_DERANDOMIZE, 0x00, ; 
    param 1, s, , S, ;
        sts ON;
            verifytbl 1;
                verify 1, DSNTCR.TB_DERANDOMIZE, EQ, ON, 1, 6;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, DSNTCR.TB_DERANDOMIZE, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.73 */
/* ロックオン、ロックオフ、トータルフレームカウント数クリア 2013/08/23 */
/* 1h : CLEAR */
ctl DSNTCR.TB_FRAME_CNT_CLEAR, 0x00, ; 
    param 1, s, , S, ;
        sts CLEAR;
        endofsts;
    endofparam;
end;

/* No.74 */
/* ターボフレームリジェクト 2013/08/23 */
/* 1h : REJECT */
ctl DSNTCR.TB_FRAME_REJECT, 0x00, ; 
    param 1, s, , S, ;
        sts REJECT;
        endofsts;
    endofparam;
end;

/* No.78 */
/* ECHO系BER計測の開始、終了 */
/* 0h：STOP 1h：NORMAL START 3h：INVERT START */
ctl DSNTCR.ECHO_BER, 0x00, ;
    param 1, s, , S, ;
        sts INVERT;
            verifytbl 1;
                verify 1, DSNTCR.ECHO_BER, EQ, INVERT, 1, 6;
            endofverify;
        endofsts;
        sts NORMAL;
            verifytbl 1;
                verify 1, DSNTCR.ECHO_BER, EQ, NORMAL, 1, 6;
            endofverify;
        endofsts;
        sts STOP;
            verifytbl 1;
                verify 1, DSNTCR.ECHO_BER, EQ, STOP, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.79 */
/* ECHO系BERのカウンタをクリア 2013/08/23 */
/* 1h : CLEAR */
ctl DSNTCR.ECHO_BER_CNT_CLEAR, 0x00, ; 
    param 1, s, , S, ;
        sts CLEAR;
        endofsts;
    endofparam;
end;

/* No.80 */
/* TLM系BER計測の開始、終了 */
/* 0h：STOP 1h：NORMAL(PN9段)   START 3h：INVERT(PN9段)   START5h：FRAME    START 7h：FRAME-RS START 9h：NORMAL(PN15段)   START Bh：INVERT(PN15段)   START Dh：TURBO START */
ctl DSNTCR.TLM_BER, 0x00, ;
    param 1, s, , S, ;
        sts TURBO;
            verifytbl 1;
                verify 1, DSNTCR.TLM_BER, EQ, TURBO, 1, 6;
            endofverify;
        endofsts;
        sts INVERT_PN15;
            verifytbl 1;
                verify 1, DSNTCR.TLM_BER, EQ, INVERT_PN15, 1, 6;
            endofverify;
        endofsts;
        sts NORMAL_PN15;
            verifytbl 1;
                verify 1, DSNTCR.TLM_BER, EQ, NORMAL_PN15, 1, 6;
            endofverify;
        endofsts;
        sts FRAME-RS;
            verifytbl 1;
                verify 1, DSNTCR.TLM_BER, EQ, FRAME-RS, 1, 6;
            endofverify;
        endofsts;
        sts FRAME;
            verifytbl 1;
                verify 1, DSNTCR.TLM_BER, EQ, FRAME, 1, 6;
            endofverify;
        endofsts;
        sts INVERT_PN9;
            verifytbl 1;
                verify 1, DSNTCR.TLM_BER, EQ, INVERT_PN9, 1, 6;
            endofverify;
        endofsts;
        sts NORMAL_PN9;
            verifytbl 1;
                verify 1, DSNTCR.TLM_BER, EQ, NORMAL_PN9, 1, 6;
            endofverify;
        endofsts;
        sts STOP;
            verifytbl 1;
                verify 1, DSNTCR.TLM_BER, EQ, STOP, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.81 */
/* TLM BERカウンタをクリア 2013/08/23 */
/* 1h : CLEAR */
ctl DSNTCR.TLM_BER_CNT_CLEAR, 0x00, ; 
    param 1, s, , S, ;
        sts CLEAR;
        endofsts;
    endofparam;
end;

/* No.82 */
/* FER計測の開始、終了 */
/* 0h：STOP 1h：START 3h：START(TURBO) */
ctl DSNTCR.FER_CNT, 0x00, ;
    param 1, s, , S, ;
        sts TURBO;
            verifytbl 1;
                verify 1, DSNTCR.FER_CNT, EQ, TURBO, 1, 6;
            endofverify;
        endofsts;
        sts START;
            verifytbl 1;
                verify 1, DSNTCR.FER_CNT, EQ, START, 1, 6;
            endofverify;
        endofsts;
        sts STOP;
            verifytbl 1;
                verify 1, DSNTCR.FER_CNT, EQ, STOP, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.83 */
/* FERカウンタをクリア 2013/08/23 */
/* 1h : CLEAR */
ctl DSNTCR.FER_CNT_CLEAR, 0x00, ; 
    param 1, s, , S, ;
        sts CLEAR;
        endofsts;
    endofparam;
end;

/* No.85 */
/* 受信キャリアドップラ補償の設定 */
/* 0h：OFF 1h：ON */
ctl DSNTCR.RX_CARR_DOPP_PRE, 0x00, ; 
    param 1, s, , S, ;
        sts ON;
            verifytbl 1;
                verify 1, DSNTCR.RX_CARR_DOPP_PRE, EQ, ON, 1, 6;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, DSNTCR.RX_CARR_DOPP_PRE, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.90 */
/* スペクトラム観測モニタポイントを設定 */
/* 0h：70M IF　1h：70M+PREDICTION(ループ前、予報直後、補正無し)　2h：CARR LOOP AID(ループ後補正有り) */
ctl DSNTCR.SPEC_MONI_POINT, 0x00, ; 
    param 1, s, , S, ;
        sts CARR_LOOP_AID;
            verifytbl 1;
                verify 1, DSNTCR.SPEC_MONI_POINT, EQ, CARR_LOOP_AID, 1, 6;
            endofverify;
        endofsts;
        sts 70M+PREDICTION;
            verifytbl 1;
                verify 1, DSNTCR.SPEC_MONI_POINT, EQ, 70M+PREDICTION, 1, 6;
            endofverify;
        endofsts;
        sts 70M_IF;
            verifytbl 1;
                verify 1, DSNTCR.SPEC_MONI_POINT, EQ, 70M_IF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No. 91 */
/* 観測帯域幅設定値 */
/* 1h：32MHz 2h：16MHz 3h：8MHz 4h：4MHz 5h：2MHz　6h：1MHz 7h：500kHz 8h：250kHz 9h：125kHz Ah：62.5kHz Bh：31.25kHz Ch：15.63kHz Dh：7.813kHz　Eh：3.910kHz Fh：1.953kHz 10h：977Hz 11h：488Hz 12h：244Hz 13h：122Hz　14h：61Hz 15h：31Hz　16h：15Hz 17h：8Hz */
ctl DSNTCR.SPEC_MEASURE_BW, 0x00, ; 
    param 1, s, , S, ;
        sts 32MHz;
            verifytbl 1;
                verify 1, DSNTCR.SPEC_MEASURE_BW, EQ, 32MHz, 1, 6;
            endofverify;
        endofsts;
        sts 16MHz;
            verifytbl 1;
                verify 1, DSNTCR.SPEC_MEASURE_BW, EQ, 16MHz, 1, 6;
            endofverify;
        endofsts;
        sts 8MHz;
            verifytbl 1;
                verify 1, DSNTCR.SPEC_MEASURE_BW, EQ, 8MHz, 1, 6;
            endofverify;
        endofsts;
        sts 4MHz;
            verifytbl 1;
                verify 1, DSNTCR.SPEC_MEASURE_BW, EQ, 4MHz, 1, 6;
            endofverify;
        endofsts;
        sts 2MHz;
            verifytbl 1;
                verify 1, DSNTCR.SPEC_MEASURE_BW, EQ, 2MHz, 1, 6;
            endofverify;
        endofsts;
        sts 1MHz;
            verifytbl 1;
                verify 1, DSNTCR.SPEC_MEASURE_BW, EQ, 1MHz, 1, 6;
            endofverify;
        endofsts;
        sts 500kHz;
            verifytbl 1;
                verify 1, DSNTCR.SPEC_MEASURE_BW, EQ, 500kHz, 1, 6;
            endofverify;
        endofsts;
        sts 250kHz;
            verifytbl 1;
                verify 1, DSNTCR.SPEC_MEASURE_BW, EQ, 250kHz, 1, 6;
            endofverify;
        endofsts;
        sts 125kHz;
            verifytbl 1;
                verify 1, DSNTCR.SPEC_MEASURE_BW, EQ, 125kHz, 1, 6;
            endofverify;
        endofsts;
        sts 62.5kHz;
            verifytbl 1;
                verify 1, DSNTCR.SPEC_MEASURE_BW, EQ, 62.5kHz, 1, 6;
            endofverify;
        endofsts;
        sts 31.25kHz;
            verifytbl 1;
                verify 1, DSNTCR.SPEC_MEASURE_BW, EQ, 31.25kHz, 1, 6;
            endofverify;
        endofsts;
        sts 15.63kHz;
            verifytbl 1;
                verify 1, DSNTCR.SPEC_MEASURE_BW, EQ, 15.63kHz, 1, 6;
            endofverify;
        endofsts;
        sts 7.813kHz;
            verifytbl 1;
                verify 1, DSNTCR.SPEC_MEASURE_BW, EQ, 7.813kHz, 1, 6;
            endofverify;
        endofsts;
        sts 3.910kHz;
            verifytbl 1;
                verify 1, DSNTCR.SPEC_MEASURE_BW, EQ, 3.910kHz, 1, 6;
            endofverify;
        endofsts;
        sts 1.953kHz;
            verifytbl 1;
                verify 1, DSNTCR.SPEC_MEASURE_BW, EQ, 1.953kHz, 1, 6;
            endofverify;
        endofsts;
        sts 977Hz;
            verifytbl 1;
                verify 1, DSNTCR.SPEC_MEASURE_BW, EQ, 977Hz, 1, 6;
            endofverify;
        endofsts;
        sts 488Hz;
            verifytbl 1;
                verify 1, DSNTCR.SPEC_MEASURE_BW, EQ, 488Hz, 1, 6;
            endofverify;
        endofsts;
        sts 244Hz;
            verifytbl 1;
                verify 1, DSNTCR.SPEC_MEASURE_BW, EQ, 244Hz, 1, 6;
            endofverify;
        endofsts;
        sts 122Hz;
            verifytbl 1;
                verify 1, DSNTCR.SPEC_MEASURE_BW, EQ, 122Hz, 1, 6;
            endofverify;
        endofsts;
        sts 61Hz;
            verifytbl 1;
                verify 1, DSNTCR.SPEC_MEASURE_BW, EQ, 61Hz, 1, 6;
            endofverify;
        endofsts;
        sts 31Hz;
            verifytbl 1;
                verify 1, DSNTCR.SPEC_MEASURE_BW, EQ, 31Hz, 1, 6;
            endofverify;
        endofsts;
        sts 15Hz;
            verifytbl 1;
                verify 1, DSNTCR.SPEC_MEASURE_BW, EQ, 15Hz, 1, 6;
            endofverify;
        endofsts;
        sts 8Hz;
            verifytbl 1;
                verify 1, DSNTCR.SPEC_MEASURE_BW, EQ, 8Hz, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.92 */
/* 観測中心周波数オフセット 2013/08/23*/
/* -4MHz～+4MHz(0.001Hz step) Bit40:符号(0/1 = -/+)  bit39-36:×1MHz  bit35-32:×100kHz  bit31-28:×10kHz  bit27-24:×1kHz  bit23-20:×100Hz  bit19-16:×10Hz  bit15-12:×1Hz  bit11-8:×0.1Hz  bit7-4:×0.01Hz  bit3-0:×0.001 */
ctl DSNTCR.SPEC_FRE_OFFSET, 0x00, ;
/*    param 1, d, 11, L, 11;
        val -4000000000, +4000000000;  */
    param 1, f, 8.3, A, 8.3;
        val -4000000.000, +4000000.000;
            verifytbl 1;
/*                verify 1, DSNTCR.SPEC_FRE_OFFSET_ANS, EQ, *, 1, 6;   */
                verify 1, DSNTCR.SPEC_FRE_OFFSET, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No.93 */
/* キャリア捕捉支援用周波数 */
/* -4000000.000Hz～+4000000.000Hz(0.001Hz step) 表示値=電文データ/1000 [Hz]  */
ctl DSNTCR.CARR_SUPPORT_FREQ, 0x00, ;
  param 1, f, 8.3, L, 8.3;
      val -4000000.000, +4000000.000;
/*    param 1, d, 11, L, 11;             */
/*        val -4000000000, +4000000000;  */
            verifytbl 1;
/*                verify 1, DSNTCR.CARR_SUPPORT_FREQ_ANS, EQ, *, 1, 6;  */
                verify 1, DSNTCR.CARR_SUPPORT_FREQ, EQ, *, 1, 6;

            endofverify;
        endofval;
    endofparam;
end;


/*RARR部*/

/* control */
/* DCNTCR_RARR */

/* No.1 */
/* レンジ計測のON/OFF */
/* 0h：STOP 1h：START */
ctl DSNTCR.RNG_CONT, 0x00, PREVERIFY_OFF;
    param 1, s, , S, ;
        sts START;
            verifytbl 1;
                verify 1, DSNTCR.RNG_CONT, EQ, START, 1, 6;
            endofverify;
        endofsts;
        sts STOP;
            verifytbl 1;
                verify 1, DSNTCR.RNG_CONT, EQ, STOP, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.2 */
/* レンジ方式 */
/* 0h：TURNAROUND RANGE MODE(従来レンジモード) 1h：REGEN RANGE MODE(再生レンジモード) */
ctl DSNTCR.RNG_MODE, 0x00, ;
    param 1, s, , S, ;
        sts REGEN;
            verifytbl 1;
                verify 1, DSNTCR.RNG_MODE, EQ, REGEN, 1, 6;
            endofverify;
        endofsts;
        sts TURNAROUND;
            verifytbl 1;
                verify 1, DSNTCR.RNG_MODE, EQ, TURNAROUND, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.3 */
/* レンジ変調度 2013/08/23変更*/
/*                    9/06 初期値変更 */
/* 0、0.20rad～1.50rad(0.01rad step) 電文データ=設定値[rad]×100 */
ctl DSNTCR.RNG_MOD_INDEX, 0x00, ;
    param 1, f, 1.2, A, 1.2;
        val 0.0, 1.50;
            verifytbl 1;
                verify 1, DSNTCR.RNG_MOD_INDEX, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No.4 */
/* レンジ周波数 */
/* 0h：N=13 1h：N=14 2h：N=15 3h：N=16 ANGE周波数=Xfup/2^N [Hz] */
ctl DSNTCR.RNG_FREQ_SEL, 0x00, ;
    param 1, s, , S, ;
        sts Xfup/2^16;
            verifytbl 1;
                verify 1, DSNTCR.RNG_FREQ_SEL, EQ, Xfup/2^16, 1, 6;
            endofverify;
        endofsts;
        sts Xfup/2^15;
            verifytbl 1;
                verify 1, DSNTCR.RNG_FREQ_SEL, EQ, Xfup/2^15, 1, 6;
            endofverify;
        endofsts;
        sts Xfup/2^14;
            verifytbl 1;
                verify 1, DSNTCR.RNG_FREQ_SEL, EQ, Xfup/2^14, 1, 6;
            endofverify;
        endofsts;
        sts Xfup/2^13;
            verifytbl 1;
                verify 1, DSNTCR.RNG_FREQ_SEL, EQ, Xfup/2^13, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.5 */
/* レンジ積分時間(T1) */
/* 1～3600秒(1秒 step) */
ctl DSNTCR.RNG_INTEG_TIME1, 0x00, ;
    param 1, u, 4, A, 4;
        val 1, 3600;
            verifytbl 1;
                verify 1, DSNTCR.RNG_INTEG_TIME1, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No.6 */
/* レンジ積分時間(T2) */
/* 1～3600秒(1秒 step) */
ctl DSNTCR.RNG_INTEG_TIME2, 0x00, ;
    param 1, u, 4, A, 4;
        val 1, 3600;
            verifytbl 1;
                verify 1, DSNTCR.RNG_INTEG_TIME2, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No.7 */
/* RARRデータサンプリングレート */
/* 0h：1秒毎に10データ出力(10/1[data/s]) 1h：- 2h：1秒毎に1データ出力(1/1[data/s]) 3h：2秒毎に1データ出力(1/2[data/s]) 4h：10秒毎に1データ出力(1/10[data/s]) 5h：20秒毎に1データ出力(1/20[data/s]) 6h：60秒毎に1データ出力(1/60[data/s]) */
ctl DSNTCR.RARR_SAMPLERATE, 0x00, ;
    param 1, s, , S, ;
        sts 1/60;
            verifytbl 1;
                verify 1, DSNTCR.RARR_SAMPLERATE, EQ, 1/60, 1, 6;
            endofverify;
        endofsts;
        sts 1/20;
            verifytbl 1;
                verify 1, DSNTCR.RARR_SAMPLERATE, EQ, 1/20, 1, 6;
            endofverify;
        endofsts;
        sts 1/10;
            verifytbl 1;
                verify 1, DSNTCR.RARR_SAMPLERATE, EQ, 1/10, 1, 6;
            endofverify;
        endofsts;
        sts 1/2;
            verifytbl 1;
                verify 1, DSNTCR.RARR_SAMPLERATE, EQ, 1/2, 1, 6;
            endofverify;
        endofsts;
        sts 1/1;
            verifytbl 1;
                verify 1, DSNTCR.RARR_SAMPLERATE, EQ, 1/1, 1, 6;
            endofverify;
        endofsts;
/*        sts -;*/
/*            verifytbl 1;*/
/*                verify 1, DSNTCR.RARR_SAMPLERATE, EQ, -, 1, 6;*/
/*            endofverify;*/
/*        endofsts;*/
        sts 10/1;
            verifytbl 1;
                verify 1, DSNTCR.RARR_SAMPLERATE, EQ, 10/1, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.8 */
/* レンジ取得個数 */
/* 1～99個(1個 step) */
ctl DSNTCR.RNG_NUM, 0x00, ;
    param 1, u, 2, A, 2;
        val 1, 99;
            verifytbl 1;
                verify 1, DSNTCR.RNG_NUM, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No.9 */
/* 衛星が再生するための待ち時間 */
/* 0～60秒(1秒 step) */
/* 初期値訂正 2013/10/03      */
ctl DSNTCR.RNG_SAT_WAIT_TIME, 0x00, ;
    param 1, u, 2, A, 2;
        val 0, 60;
            verifytbl 1;
                verify 1, DSNTCR.RNG_SAT_WAIT_TIME, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No.10 */
/* レンジの試験ドップラのON/OFF */
/* 0:OFF 1:ON(IF ROUTE:IF折返し) 2:ON(RF ROUTE:局内折返し) */
ctl DSNTCR.RNG_TEST_DOPP_SEL, 0x00, ;
    param 1, s, , S, ;
        sts RF_ROUTE;
            verifytbl 1;
                verify 1, DSNTCR.RNG_TEST_DOPP_SEL, EQ, RF_ROUTE, 1, 6;
            endofverify;
        endofsts;
         sts IF_ROUTE;
            verifytbl 1;
                verify 1, DSNTCR.RNG_TEST_DOPP_SEL, EQ, IF_ROUTE, 1, 6;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, DSNTCR.RNG_TEST_DOPP_SEL, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.11*/
/* アップリンクノミナル周波数 */
/* "1GHz～14GHz(0.1Hz step) ABCDEFGHIJK(HEX)/10(DEC)[Hz] (bit43-40):243～240 B(bit39-36):239～236 C(bit35-32):235～232 D(bit31-28):231～228 E(bit27-24):227～224 F(bit23-20):223～220 G(bit19-16):219～216 H(bit15-12):215～212 I(bit11-8): 211～8 J(bit7-4):27～24、K(bit3-0): 23～20 */
ctl DSNTCR.UP_REF_FREQ, 0x00, PREVERIFY_OFF;
    param 1, f, 11.1, L, 11.1;
        val 1000000000.0, 14000000000.0;
/*    param 1, u, 12, L, 12;             */
/*        val 10000000000, 140000000000; */
            verifytbl 1;
/*                verify 1, DSNTCR.UP_REF_FREQ_ANS, EQ, *, 1, 6;  */
                verify 1, DSNTCR.UP_REF_FREQ, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No.12 */
/* ダウンリンクノミナル周波数 */
/* 1GHz～14GHz(0.1Hz step) ABCDEFGHIJK(HEX)/10(DEC)[Hz] A(bit43-40):243～240 B(bit39-36)239～236 C(bit35-32):235～232 D(bit31-28):231～228 E(bit27-24):227～224 F(bit23-20):223～220 G(bit19-16):219～216 H(bit15-12):215～212 I(bit11-8): 211～8 J(bit7-4):27～24 K(bit3-0): 23～20 (MSD FIRST/BINARY CODE) */
ctl DSNTCR.DOWN_REF_FREQ, 0x00, ;
    param 1, f, 11.1, L, 11.1;
        val 1000000000.0, 14000000000.0;
/*    param 1, u, 12, L, 12;             */
/*        val 10000000000, 140000000000; */
            verifytbl 1;
/*                verify 1, DSNTCR.DOWN_REF_FREQ_ANS, EQ, *, 1, 6;   */
                verify 1, DSNTCR.DOWN_REF_FREQ, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No.13 */
/* ドップラ計測方式 */
/* 0h：2way計測 1h：1way計測 */
ctl DSNTCR.1/2WAY_MODE, 0x00, ;
    param 1, s, , S, ;
        sts 1WAY;
            verifytbl 1;
                verify 1, DSNTCR.1/2WAY_MODE, EQ, 1WAY, 1, 6;
            endofverify;
        endofsts;
         sts 2WAY;
            verifytbl 1;
                verify 1, DSNTCR.1/2WAY_MODE, EQ, 2WAY, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.14 */
/* トランスポンダ比 */
/* 0h：INCOH 1h：COH-240/221 (今回未使用) 2h：COH-900/221 (今回未使用) 3h：COH-880/749 */
ctl DSNTCR.TRP_RATIO, 0x00, ;
    param 1, s, , S, ;
        sts COH-880/749;
            verifytbl 1;
                verify 1, DSNTCR.TRP_RATIO, EQ, COH-880/749, 1, 6;
            endofverify;
        endofsts;
/*        sts COH-900/221;
            verifytbl 1;
                verify 1, DSNTCR.TRP_RATIO, EQ, COH-900/221, 1, 6;
            endofverify;
        endofsts;
        sts COH-240/221;
            verifytbl 1;
                verify 1, DSNTCR.TRP_RATIO, EQ, COH-240/221, 1, 6;
            endofverify;
        endofsts;
*/
        sts INCOH;
            verifytbl 1;
                verify 1, DSNTCR.TRP_RATIO, EQ, INCOH, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.20 */
/* レンジ予報値制御ON/OFF */
/* 0h：OFF 1h：ON */
ctl DSNTCR.RNG_PRE, 0x00, ;    /*(2)*/
    param 1, s, , S, ;
        sts ON;
            verifytbl 1;
                verify 1, DSNTCR.RNG_PRE, EQ, ON, 1, 6;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, DSNTCR.RNG_PRE, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;
//END OF FILE
/* X-X帯TCR装置 制御データ（インタフェースFCが生成するデータ）*/
/* 装置番号：188                   */
/* 装置名称：XX-DSNTCRFC           */
/*                                 */
/* Create:2013/10/04               */

ctl XX-DSNTCRFC.PREDGET_DEM, 0x00, ;
    param 1, P, 14, Z, ;
        sts *;
        endofsts;
    endofparam;
end;

ctl XX-DSNTCRFC.PREDGET_MOD, 0x00, ;
    param 1, P, 14, Z, ;
        sts *;
        endofsts;
    endofparam;
end;

ctl XX-DSNTCRFC.PREDGET, 0x00, ;
    param 1, P, 14, Z, ;
        sts *;
        endofsts;
    endofparam;
end;

ctl XX-DSNTCRFC.DOPP_MODE, 0x00, ;
    param 1, s, , S, ;
        sts 1WAY;
            verifytbl 1;
                verify 1, XX-DSNTCRFC.DOPP_MODE, EQ, 1WAY, 1, 5;
            endofverify;
        endofsts;
        sts 2WAY;
            verifytbl 1;
                verify 1, XX-DSNTCRFC.DOPP_MODE, EQ, 2WAY, 1, 5;
            endofverify;
        endofsts;
        sts 3WAY;
            verifytbl 1;
                verify 1, XX-DSNTCRFC.DOPP_MODE, EQ, 3WAY, 1, 5;
            endofverify;
        endofsts;
    endofparam;
end;

ctl XX-DSNTCRFC.TX_DOPP_AID, 0x00, ;
    param 1, s, , S, ;
        sts ON;
            verifytbl 1;
                verify 1, XX-DSNTCRFC.TX_DOPP_AID, EQ, ON, 1, 5;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, XX-DSNTCRFC.TX_DOPP_AID, EQ, OFF, 1, 5;
            endofverify;
        endofsts;
    endofparam;
end;

ctl XX-DSNTCRFC.RX_DOPP_AID, 0x00, ;
    param 1, s, , S, ;
        sts ON;
            verifytbl 1;
                verify 1, XX-DSNTCRFC.RX_DOPP_AID, EQ, ON, 1, 5;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, XX-DSNTCRFC.RX_DOPP_AID, EQ, OFF, 1, 5;
            endofverify;
        endofsts;
    endofparam;
end;

//ctl XX-DSNTCRFC.RATE_AID, 0x00, ;
ctl XX-DSNTCRFC.AID_MODE, 0x00, ;
    param 1, s, , S, ;
        sts ON;
//            verifytbl 1;
//                verify 1, XX-DSNTCRFC.RX_DOPP_AID, EQ, ON, 1, 5;
//            endofverify;
        endofsts;
        sts OFF;
//            verifytbl 1;
//                verify 1, XX-DSNTCRFC.RX_DOPP_AID, EQ, OFF, 1, 5;
//            endofverify;
        endofsts;
    endofparam;
end;

ctl XX-DSNTCRFC.TIME_OFFSET, 0x00, ;
    param 1, s, 6, Z, ;
        sts *;
            verifytbl 1;
                verify 1, XX-DSNTCRFC.TIME_OFFSET, EQ, *, 1, 5;
            endofverify;
        endofsts;
    endofparam;
end;

ctl XX-DSNTCRFC.FREQ_OFFSET, 0x00, ;
    param 1, d, 9, B, 9;
        val -10000000, +10000000;
           verifytbl 1;
                verify 1, XX-DSNTCRFC.FREQ_OFFSET, EQ, *, 1, 5;
            endofverify;
        endofval;
    endofparam;
end;

ctl XX-DSNTCRFC.FREQ_OFFSET_U, 0x00, ;
    param 1, d, 9, B, 9;
        val -10000000, +10000000;
           verifytbl 1;
                verify 1, XX-DSNTCRFC.FREQ_OFFSET_U, EQ, *, 1, 5;
            endofverify;
        endofval;
    endofparam;
end;

ctl XX-DSNTCRFC.1WAY/2WAY, 0x00, ;
    param 1, s, , S, ;
        sts 1WAY;
//            verifytbl 1;
//                verify 1, X-RXSYN.1WAY/2WAY, EQ, 1WAY, 1, 5;
//            endofverify;
        endofsts;
        sts 2WAY;
//            verifytbl 1;
//                verify 1, X-RXSYN.1WAY/2WAY, EQ, 2WAY, 1, 5;
//            endofverify;
        endofsts;
        sts 3WAY;
//            verifytbl 1;
//                verify 1, X-RXSYN.1WAY/2WAY, EQ, DUP,  1, 5;
//            endofverify;
        endofsts;
    endofparam;
end;

/* S70-D/C (CONT) */

/************** PIO *******************/

ctl S70-DC.LOCAL_ATT_CONT, 0x00, ;
	param 1, s, , S, ;
		sts 35dB;
			verifytbl 1;
				verify 1, S70-DC.LOCAL_ATT_ANS, EQ, 35dB, 1, 5;
			endofverify;
		endofsts;
		sts 30dB;
			verifytbl 1;
				verify 1, S70-DC.LOCAL_ATT_ANS, EQ, 30dB, 1, 5;
			endofverify;
		endofsts;
		sts 25dB;
			verifytbl 1;
				verify 1, S70-DC.LOCAL_ATT_ANS, EQ, 25dB, 1, 5;
			endofverify;
		endofsts;
		sts 20dB;
			verifytbl 1;
				verify 1, S70-DC.LOCAL_ATT_ANS, EQ, 20dB, 1, 5;
			endofverify;
		endofsts;
		sts 15dB;
			verifytbl 1;
				verify 1, S70-DC.LOCAL_ATT_ANS, EQ, 15dB, 1, 5;
			endofverify;
		endofsts;
		sts 10dB;
			verifytbl 1;
				verify 1, S70-DC.LOCAL_ATT_ANS, EQ, 10dB, 1, 5;
			endofverify;
		endofsts;
		sts 5dB;
			verifytbl 1;
				verify 1, S70-DC.LOCAL_ATT_ANS, EQ, 5dB, 1, 5;
			endofverify;
		endofsts;
		sts 0dB;
			verifytbl 1;
				verify 1, S70-DC.LOCAL_ATT_ANS, EQ, 0dB, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

/***************************************/
/*************** RS-23SC ***************/

ctl S70-DC.COH_INCOH, 0x00, ;
	param 1, s, , S, ;
		sts COH;
			verifytbl 1;
				verify 1, S70-DC.COH_INCOH, EQ, COH, 1, 5;
			endofverify;
		endofsts;
		sts INCOH;
			verifytbl 1;
				verify 1, S70-DC.COH_INCOH, EQ, INCOH, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S70-DC.SET_FREQ, 0x00, ;
	param 1, f, 11.6, B, 11.6;
		val 7145000000.000000, 8500000000.000000;
			verifytbl 1;
				verify 1, S70-DC.SET_FREQ, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

/***************************************/

/* X-TLMIN2 */

// ##### 2011/02/02 UDSC-KEISANKI KANSOU -START- ######
// ctl X-TLMIN2.TLM_PASS_INIT, 0x00, ;
//    param 1, , , , ;
//      noprm;
//       endofnoprm;
//  endofparam;
//end;
//
//ctl X-TLMIN2.TLM_PASS_CHG, 0x00, ;
//    param 1, , , , ;
//      noprm;
//        endofnoprm;
//  endofparam;
//end;
//
//ctl X-TLMIN2.TLM_PASS_END, 0x00, ;
//    param 1, , , , ;
//      noprm;
//        endofnoprm;
//  endofparam;
//end;

ctl X-TLMIN2.TLM_START, 0x00, ;
    param 1, s, 15, Z, ;
        sts *;
        endofsts;
    endofparam;
end;

ctl X-TLMIN2.TLM_END, 0x00, ;
    param 1, u, 3, A, 3;
        val 0, 255;
        endofval;
    endofparam;
end;

ctl X-TLMIN2.SIMTLM_START, 0x00, ;
    param 1, u, 3, A, 3;
        val 0, 255;
        endofval;
    endofparam;
end;

ctl X-TLMIN2.SIMTLM_END, 0x00, ;
    param 1, u, 3, A, 3;
        val 0, 255;
        endofval;
    endofparam;
end;

ctl X-TLMIN2.TISIMTLM_START, 0x00, ;
    param 1, u, 3, A, 3;
        val 0, 255;
        endofval;
    endofparam;
end;

ctl X-TLMIN2.TISIMTLM_END, 0x00, ;
    param 1, u, 3, A, 3;
        val 0, 255;
        endofval;
    endofparam;
end;

//ctl X-TLMIN2.H2SMACS_TLM_START, 0x00, ;
//    param 1, u, 3, A, 3;
//        val 0, 255;
//        endofval;
//  endofparam;
//end;

//ctl X-TLMIN2.H2SMACS_TLM_END, 0x00, ;
//    param 1, u, 3, A, 3;
//        val 0, 255;
//        endofval;
//  endofparam;
//end;

ctl X-TLMIN2.SHUTDOWN, 0x00, ;
    param 1, , , , ;
        noprm;
        endofnoprm;
    endofparam;
end;

ctl X-TLMIN2.RESTART, 0x00, ;
    param 1, , , , ;
        noprm;
        endofnoprm;
    endofparam;
end;



/**************************************** 2012更新(RD対応)　ここから */
ctl X-TLMIN2.RD_TLM_START, 0x00, ;
    param 1, s, 15, Z, ;
        sts *;
        endofsts;
    endofparam;
end;

ctl X-TLMIN2.RD_TLM_END, 0x00, ;
    param 1, u, 3, A, 3;
        val 0, 255;
        endofval;
    endofparam;
end;

ctl X-TLMIN2.RD_SIMTLM_START, 0x00, ;
    param 1, u, 3, A, 3;
        val 0, 255;
        endofval;
    endofparam;
end;

ctl X-TLMIN2.RD_SIMTLM_END, 0x00, ;
    param 1, u, 3, A, 3;
        val 0, 255;
        endofval;
    endofparam;
end;

ctl X-TLMIN2.RD_TISIMTLM_START, 0x00, ;
    param 1, u, 3, A, 3;
        val 0, 255;
        endofval;
    endofparam;
end;

ctl X-TLMIN2.RD_TISIMTLM_END, 0x00, ;
    param 1, u, 3, A, 3;
        val 0, 255;
        endofval;
    endofparam;
end;

ctl X-TLMIN2.TLM_SELECT, 0x00,;
    param 1, s, , S, ;
        sts RD;
        endofsts;
        sts TCR;
        endofsts;
    endofparam;
end;

/**************************************** 2012更新(RD対応)　ここまで */

/*** 2013-TURBO start ***/
ctl X-TLMIN2.TLM_PACKNUM, 0x00, ;
    param 1, u, 4, A, 4;
        val 0, 9999;
        endofval;
    endofparam;
end;
/*** 2013-TURBO end ***/
/* X-CMDOUT2 制御 */


// ##### 2011/02/02 UDSC-KEISANKI KANSOU -START- ###### 
// ctl X-CMDOUT2.PASS_INIT, 0x00,;
//     param 1, , , , ;
//      noprm;
//         endofnoprm;
//  endofparam;
// end;
//
// ctl X-CMDOUT2.PASS_CHG, 0x00,;
//     param 1, , , , ;
//      noprm;
//         endofnoprm;
//  endofparam;
// end;
//
// ctl X-CMDOUT2.PASS_END, 0x00,;
//     param 1, , , , ;
//      noprm;
//         endofnoprm;
//  endofparam;
// end;

ctl X-CMDOUT2.CMD_BITRATE, 0x00,;
    param 1, f, 6.6, A, 6.6;
        //val 10, 262144;
        val 5.000000, 614400.000000;
        endofval;
    endofparam;
end;

ctl X-CMDOUT2.RF_BITRATE, 0x00,;
    param 1, f, 6.6, A, 6.6;
        //val 10, 262144;
        val 5.000000, 614400.000000;
        endofval;
    endofparam;
end;

// X-CMDOUT2.TCR_ECHO_MODE : WFDには出さない。
ctl X-CMDOUT2.TCR_ECHO_MODE, 0x00,;
    param 1, s, , S, ;
        sts RF;
        endofsts;
        sts CMDOUT;
        endofsts;
    endofparam;
end;

ctl X-CMDOUT2.HOLD_TONE, 0x00,;
    param 1, s, , S, ;
        sts ON;
        endofsts;
        sts OFF;
        endofsts;
    endofparam;
end;

ctl X-CMDOUT2.SIMCMD_SND, 0x00,;
    param 1, s, 15, Z, ;
        sts *;
        endofsts;
    endofparam;
end;

ctl X-CMDOUT2.SIMCMD_END, 0x00,;
    param 1, u, 3, A, 3;
        val 0, 255;
        endofval;
    endofparam;
end;

// X-CMDOUT2.USER_CUTSD : WFDには出さない。
ctl X-CMDOUT2.USER_CUTSD, 0x00,;
    param 1, s, , S, ;
        sts SDTP;
        endofsts;
    endofparam;
end;

//ctl X-CMDOUT2.H2SMACS_CMD_START, 0x00,;
//    param 1, u, 3, A, 3;
//        val 0, 255;
//        endofval;
//    endofparam;
//end;

//ctl X-CMDOUT2.H2SMACS_CMD_END, 0x00,;
//    param 1, u, 3, A, 3;
//        val 0, 255;
//        endofval;
//    endofparam;
//end;

ctl X-CMDOUT2.SHUTDOWN, 0x00,;
    param 1, , , , ;
        noprm;
        endofnoprm;
    endofparam;
end;

ctl X-CMDOUT2.RESTART, 0x00,;
    param 1, , , , ;
        noprm;
        endofnoprm;
    endofparam;
end;

ctl X-CMDOUT2.TCR_RECONNECT, 0x00,;
    param 1, , , , ;
        noprm;
        endofnoprm;
    endofparam;
end;

//ctl X-CMDOUT2.CCSDS_COP_VCID, 0x00,;
//    param 1, u, 2, A, 2;
//        val 0, 63;
//        endofval;
//    endofparam;
//end;
// ##### 2011/02/02 udsc-keisanki kansou -end-  ######


/**************************************** 2012更新(RD対応)　ここから */
ctl X-CMDOUT2.RD_BITRATE, 0x00,;
    param 1, u, 6, A, 6;
        val 10, 262144;
        endofval;
    endofparam;
end;

ctl X-CMDOUT2.RD_HOLD_TONE, 0x00,;
    param 1, s, , S, ;
        sts ON;
        endofsts;
        sts OFF;
        endofsts;
    endofparam;
end;

ctl X-CMDOUT2.CMDLOG_MODE, 0x00,;
    param 1, s, , S, ;
        sts ALL;
        endofsts;
        sts SUMMARY;
        endofsts;
        sts NONE;
        endofsts;
    endofparam;
end;

ctl X-CMDOUT2.PLOP, 0x00,;
    param 1, s, , S, ;
        sts PLOP1;
        endofsts;
        sts PLOP2;
        endofsts;
    endofparam;
end;

ctl X-CMDOUT2.RD_PLOP, 0x00,;
    param 1, s, , S, ;
        sts PLOP1;
        endofsts;
        sts PLOP2;
        endofsts;
    endofparam;
end;

ctl X-CMDOUT2.SIMCMD_RD_SND, 0x00,;
    param 1, s, 15, Z, ;
        sts *;
        endofsts;
    endofparam;
end;

//ctl X-CMDOUT2.RD_SIMCMD_END, 0x00,;
//    param 1, u, 3, A, 3;
//        val 0, 255;
//        endofval;
//  endofparam;
//end;

ctl X-CMDOUT2.RD_RECONNECT, 0x00,;
    param 1, , , , ;
        noprm;
        endofnoprm;
    endofparam;
end;

/**************************************** 2012更新(RD対応)　ここまで */
/****** END OF FILE *****************************************/
/* X-HDC (CONT) */

/************** PIO *******************/

ctl X-HDC.INPUT_SEL, 0x00, ;
	param 1, s, , S, ;
		sts SUM-A;
			verifytbl 1;
				verify 1, X-HDC.INPUT_SEL, EQ, SUM-A, 1, 5;
			endofverify;
		endofsts;
		sts SUM-B;
			verifytbl 1;
				verify 1, X-HDC.INPUT_SEL, EQ, SUM-B, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-HDC.OUTPUT_SEL, 0x00, ;
	param 1, s, , S, ;
		sts DSN;
			verifytbl 1;
				verify 1, X-HDC.OUTPUT_SEL, EQ, DSN, 1, 5;
			endofverify;
		endofsts;
		sts HRX;
			verifytbl 1;
				verify 1, X-HDC.OUTPUT_SEL, EQ, HRX, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-HDC.LOCAL_ATT_CONT, 0x00, ;
	param 1, s, , S, ;
		sts 35dB;
			verifytbl 1;
				verify 1, X-HDC.LOCAL_ATT, EQ, 35dB, 1, 5;
			endofverify;
		endofsts;
		sts 30dB;
			verifytbl 1;
				verify 1, X-HDC.LOCAL_ATT, EQ, 30dB, 1, 5;
			endofverify;
		endofsts;
		sts 25dB;
			verifytbl 1;
				verify 1, X-HDC.LOCAL_ATT, EQ, 25dB, 1, 5;
			endofverify;
		endofsts;
		sts 20dB;
			verifytbl 1;
				verify 1, X-HDC.LOCAL_ATT, EQ, 20dB, 1, 5;
			endofverify;
		endofsts;
		sts 15dB;
			verifytbl 1;
				verify 1, X-HDC.LOCAL_ATT, EQ, 15dB, 1, 5;
			endofverify;
		endofsts;
		sts 10dB;
			verifytbl 1;
				verify 1, X-HDC.LOCAL_ATT, EQ, 10dB, 1, 5;
			endofverify;
		endofsts;
		sts 5dB;
			verifytbl 1;
				verify 1, X-HDC.LOCAL_ATT, EQ, 5dB, 1, 5;
			endofverify;
		endofsts;
		sts 0dB;
			verifytbl 1;
				verify 1, X-HDC.LOCAL_ATT, EQ, 0dB, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

/***************************************/
/* X帯高速データ受信復調装置 制御データ   */
/* 装置番号：4                            */
/* 装置名称：X-HRX                        */
/*                                        */
/* Create:2013/08/15                      */
/* Update:2013/10/07                      */
/*                                        */


/* control */
/* X-HRX_COMMON */

/*                         */
/* 高速データMODEM(復調部) */
/*                         */

/* No.1 */
/* 変調形式 */
/* 1h：BPSK,2h：QPSK,3h：OQPSK,4h：16QAM */
ctl X-HRX.DEMODULATION, 0x00, ;
    param 1, s, , S, ;
//        sts BPSK;
//            verifytbl 1;
//                verify 1, X-HRX.DEMODULATION, EQ, BPSK, 1, 6;
//            endofverify;
//        endofsts;
        sts QPSK;
            verifytbl 1;
                verify 1, X-HRX.DEMODULATION, EQ, QPSK, 1, 6;
            endofverify;
        endofsts;
//        sts OQPSK;
//            verifytbl 1;
//                verify 1, X-HRX.DEMODULATION, EQ, OQPSK, 1, 6;
//            endofverify;
//        endofsts;
//        sts 16QAM;
//            verifytbl 1;
//                verify 1, X-HRX.DEMODULATION, EQ, 16QAM, 1, 6;
//            endofverify;
//        endofsts;
    endofparam;
end;

/* No.2 */
/* 符号形式 */
/* 1h：NRZ-L,2h：NRZ-M,4h：NRZ-S */
ctl X-HRX.DEMO_DATA_MODE, 0x00, ;
    param 1, s, , S, ;
        sts NRZ-L;
            verifytbl 1;
                verify 1, X-HRX.DEMO_DATA_MODE, EQ, NRZ-L, 1, 6;
            endofverify;
        endofsts;
        sts NRZ-M;
            verifytbl 1;
                verify 1, X-HRX.DEMO_DATA_MODE, EQ, NRZ-M, 1, 6;
            endofverify;
        endofsts;
        sts NRZ-S;
            verifytbl 1;
                verify 1, X-HRX.DEMO_DATA_MODE, EQ, NRZ-S, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.3 */
/* データレート */
/* 1,000,000～200,000,000bps(1bps step) */
//ctl X-HRX.DATA_RATE_CONT, 0x00, ;
ctl X-HRX.DEMO_DATA_RATE_CONT, 0x00, ;
    param 1, u, 9, A, 9;
        val 1000000, 20000000;
            prechktbl 1;
                prechk 1, X-HRX.DEMODULATION, EQ, QPSK, 3;
            endofprechk;
            verifytbl 1;
                verify 1, X-HRX.DEMO_DATA_RATE, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No.4 */
/* 入力中心周波数 */
/* 525,000,000～1,000,000,000Hz(1Hz step) */
//ctl X-HRX.CENTER_FREQUENCY, 0x00, ;
ctl X-HRX.DEMO_CENTER_FREQUENCY, 0x00, ;
    param 1, u, 10, A, 10;
        val 900000000, 1000000000;
            verifytbl 1;
                verify 1, X-HRX.DEMO_CENTER_FREQUENCY, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No.5 */
/* ロックリジェクト */
/* 0h：NO ACTION,1h：REJECT */
ctl X-HRX.DEMO_LOCK_REJECT, 0x00, ;
    param 1, s, , S, ;
//        sts NO_ACTION;
//            verifytbl 1;
//                verify 1, X-HRX.DEMO_LOCK_REJECT, EQ, NO_ACTION, 1, 6;
//            endofverify;
//        endofsts;
        sts REJECT;
//            verifytbl 1;
//                verify 1, X-HRX.DEMO_LOCK_REJECT, EQ, REJECT, 1, 6;
//            endofverify;
        endofsts;
    endofparam;
end;

/* No.6 */
/* 受信フィルタ特性(受信マッチドフィルタ形式) */
/* 1h：RAISED,2h：ROOT RAISED,3h：RAISED(x/sinx),4h：ROOT RAISED(x/sinx),5h：INTEGRAL */
//ctl X-HRX.FILTER_SETTING, 0x00, ;
ctl X-HRX.DEMO_FILTER_SETTING, 0x00, ;
    param 1, s, , S, ;
        sts RAISED;
            verifytbl 1;
                verify 1, X-HRX.DEMO_FILTER_SETTING, EQ, RAISED, 1, 6;
            endofverify;
        endofsts;
        sts ROOT_RAISED;
            verifytbl 1;
                verify 1, X-HRX.DEMO_FILTER_SETTING, EQ, ROOT_RAISED, 1, 6;
            endofverify;
        endofsts;
        sts RAISED(x/sinx);
            verifytbl 1;
                verify 1, X-HRX.DEMO_FILTER_SETTING, EQ, RAISED(x/sinx), 1, 6;
            endofverify;
        endofsts;
        sts Rt_RAIS(x/sinx);
            verifytbl 1;
                verify 1, X-HRX.DEMO_FILTER_SETTING, EQ, Rt_RAIS(x/sinx), 1, 6;
            endofverify;
        endofsts;
        sts INTEGRAL;
            verifytbl 1;
                verify 1, X-HRX.DEMO_FILTER_SETTING, EQ, INTEGRAL, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.7 */
/* 受信フィルタ特性(受信マッチドフィルタロールオフ率) */
/* 2h：0.2,3h：0.3,4h：0.4,5h：0.5,6h：0.6,7h：0.7 */
ctl X-HRX.DEMO_ROLL_OFF_SETTING, 0x00, ;
    param 1, s, , S, ;
        sts 0.2;
            verifytbl 1;
                verify 1, X-HRX.DEMO_ROLL_OFF, EQ, 0.2, 1, 6;
            endofverify;
        endofsts;
        sts 0.3;
            verifytbl 1;
                verify 1, X-HRX.DEMO_ROLL_OFF, EQ, 0.3, 1, 6;
            endofverify;
        endofsts;
        sts 0.4;
            verifytbl 1;
                verify 1, X-HRX.DEMO_ROLL_OFF, EQ, 0.4, 1, 6;
            endofverify;
        endofsts;
        sts 0.5;
            verifytbl 1;
                verify 1, X-HRX.DEMO_ROLL_OFF, EQ, 0.5, 1, 6;
            endofverify;
        endofsts;
        sts 0.6;
            verifytbl 1;
                verify 1, X-HRX.DEMO_ROLL_OFF, EQ, 0.6, 1, 6;
            endofverify;
        endofsts;
        sts 0.7;
            verifytbl 1;
                verify 1, X-HRX.DEMO_ROLL_OFF, EQ, 0.7, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.8 */
/* 差動復号設定 */
/* 0h：4PHASE,1h：4ch SEPARATE,2h：OFF,3h：4PHASE INVERSE */
ctl X-HRX.DIFF_DECODE, 0x00, ;
    param 1, s, , S, ;
        sts 4PHASE;
            verifytbl 1;
                verify 1, X-HRX.DIFF_DECODE, EQ, 4PHASE, 1, 6;
            endofverify;
        endofsts;
//        sts 4ch_SEPARATE;
//            verifytbl 1;
//                verify 1, X-HRX.DIFF_DECODE, EQ, 4ch_SEPARATE, 1, 6;
//            endofverify;
//        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, X-HRX.DIFF_DECODE, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
        sts 4PHASE_INVERSE;
            verifytbl 1;
                verify 1, X-HRX.DIFF_DECODE, EQ, 4PHASE_INVERSE, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.9 */
/* ビタービ復号設定(ON/OFF) */
/* 0h：OFF,1h：ON */
ctl X-HRX.VITERBI_ON, 0x00, ;
    param 1, s, , S, ;
        sts ON;
            verifytbl 1;
                verify 1, X-HRX.VITERBI_ON, EQ, ON, 1, 6;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, X-HRX.VITERBI_ON, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.10 */
/* ビタービ復号設定(チャンネル) */
/* 0h：CH SINGLE,1h：CH DUAL,2h：RESERVE */
ctl X-HRX.VITERBI_SETTING_CH, 0x00, ;
    param 1, s, , S, ;
        sts CH_SINGLE;
            verifytbl 1;
                verify 1, X-HRX.VITERBI_SETTING_CH, EQ, CH_SINGLE, 1, 6;
            endofverify;
        endofsts;
        sts CH_DUAL;
            verifytbl 1;
                verify 1, X-HRX.VITERBI_SETTING_CH, EQ, CH_DUAL, 1, 6;
            endofverify;
        endofsts;
//        sts RESERVE;
//            verifytbl 1;
//                verify 1, X-HRX.VITERBI_SETTING_CH, EQ, RESERVE, 1, 6;
//            endofverify;
//        endofsts;
    endofparam;
end;

/* No.11 */
/* ビタービ復号設定(極性) */
/* 0h：G2 INVERT,G1 NORMAL,G1 first(CCSDS),1h：G2 NORMAL,G1 INVERT,G2 first(ESA),2h：G2 INVERT,G1 NORMAL,G2 first(JPL) */
ctl X-HRX.VITERBI_SETTING_POL, 0x00, ;
    param 1, s, , S, ;
        sts CCSDS;
            verifytbl 1;
                verify 1, X-HRX.VITERBI_SETTING_POL, EQ, CCSDS, 1, 6;
            endofverify;
        endofsts;
//        sts ESA;
//            verifytbl 1;
//                verify 1, X-HRX.VITERBI_SETTING_POL, EQ, ESA, 1, 6;
//            endofverify;
//        endofsts;
        sts JPL;
            verifytbl 1;
                verify 1, X-HRX.VITERBI_SETTING_POL, EQ, JPL, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.12 */
/* ビタービ復号設定(符号化率) */
/* 0h：1/2,1h：2/3,2h：3/4,3h：5/6,4h：7/8 */
ctl X-HRX.VITERBI_SETTING_R, 0x00, ;
    param 1, s, , S, ;
        sts 1/2;
            verifytbl 1;
                verify 1, X-HRX.VITERBI_SETTING_R, EQ, 1/2, 1, 6;
            endofverify;
        endofsts;
//        sts 2/3;
//            verifytbl 1;
//                verify 1, X-HRX.VITERBI_SETTING_R, EQ, 2/3, 1, 6;
//            endofverify;
//        endofsts;
//        sts 3/4;
//            verifytbl 1;
//                verify 1, X-HRX.VITERBI_SETTING_R, EQ, 3/4, 1, 6;
//            endofverify;
//        endofsts;
//        sts 5/6;
//            verifytbl 1;
//                verify 1, X-HRX.VITERBI_SETTING_R, EQ, 5/6, 1, 6;
//            endofverify;
//        endofsts;
//        sts 7/8;
//            verifytbl 1;
//                verify 1, X-HRX.VITERBI_SETTING_R, EQ, 7/8, 1, 6;
//            endofverify;
//        endofsts;
    endofparam;
end;

/* No.13 */
/* リードソロモン復号設定(ON/OFF) */
/* 0h：RS OFF,1h：RS ON */
ctl X-HRX.DEMO_RS_ON, 0x00, ;
    param 1, s, , S, ;
        sts ON;
            verifytbl 1;
                verify 1, X-HRX.DEMO_RS_ON, EQ, ON, 1, 6;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, X-HRX.DEMO_RS_ON, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.14 */
/* リードソロモン復号設定(デランダマイズON/OFF) */
/* 0h：デランダマイズ OFF,1h：デランダマイズ ON */
ctl X-HRX.DEMO_RS_DERNDM, 0x00, ;
    param 1, s, , S, ;
        sts ON;
            verifytbl 1;
                verify 1, X-HRX.DEMO_RS_DERNDM, EQ, ON, 1, 6;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, X-HRX.DEMO_RS_DERNDM, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.15 */
/* リードソロモン復号設定(RS MODE) */
/* 0h：NORMAL,1h：SHORT */
ctl X-HRX.DEMO_RS_MODE, 0x00, ;
    param 1, s, , S, ;
        sts NORMAL;
            verifytbl 1;
                verify 1, X-HRX.DEMO_RS_MODE, EQ, NORMAL, 1, 6;
            endofverify;
        endofsts;
        sts SHORT;
            verifytbl 1;
                verify 1, X-HRX.DEMO_RS_MODE, EQ, SHORT, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.16 */
/* リードソロモン復号設定(インタリーブ数) */
/* 1～5 */
ctl X-HRX.DEMO_RS_INTERLEAVE, 0x00, ;
    param 1, u, 1, A, 1;
        val 1, 5;
            verifytbl 1;
                verify 1, X-HRX.DEMO_RS_INTERLEAVE, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No.17 */
/* リードソロモン復号フレーム数リセット */
/* 0h：NO ACTION,1h：RESET */
ctl X-HRX.DEMO_RS_COUNT_RESET, 0x00, ;
    param 1, s, , S, ;
//        sts NO_ACTION;
//            verifytbl 1;
//                verify 1, X-HRX.DEMO_RS_COUNT_RESET, EQ, NO_ACTION, 1, 6;
//            endofverify;
//        endofsts;
        sts RESET;
//            verifytbl 1;
//                verify 1, X-HRX.DEMO_RS_COUNT_RESET, EQ, RESET, 1, 6;
//            endofverify;
        endofsts;
    endofparam;
end;

/* No.18 */
/* フレーム同期設定(ON/OFF) */
/* 0h：OFF,1h：ON */
ctl X-HRX.DEMO_FRAME_SYNC_ON, 0x00, ;
    param 1, s, , S, ;
        sts ON;
            verifytbl 1;
                verify 1, X-HRX.DEMO_FRAME_SYNC_ON, EQ, ON, 1, 6;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, X-HRX.DEMO_FRAME_SYNC_ON, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.19 */
/* フレーム同期設定(モード) */
/* 0h：IQ SEPARATE,1h：IQ MERGED,2h：4ch SEPARATE,3h：ALOS2(8ch) */
ctl X-HRX.DEMO_FRAME_SYNC_MODE, 0x00, ;
    param 1, s, , S, ;
        sts IQ_SEPARATE;
            verifytbl 1;
                verify 1, X-HRX.DEMO_FRAME_SYNC_MODE, EQ, IQ_SEPARATE, 1, 6;
            endofverify;
        endofsts;
        sts IQ_MERGED;
            verifytbl 1;
                verify 1, X-HRX.DEMO_FRAME_SYNC_MODE, EQ, IQ_MERGED, 1, 6;
            endofverify;
        endofsts;
//        sts 4ch_SEPARATE;
//            verifytbl 1;
//                verify 1, X-HRX.DEMO_FRAME_SYNC_MODE, EQ, 4ch_SEPARATE, 1, 6;
//            endofverify;
//        endofsts;
//        sts ALOS2(8ch);
//            verifytbl 1;
//                verify 1, X-HRX.DEMO_FRAME_SYNC_MODE, EQ, ALOS2(8ch), 1, 6;
//            endofverify;
//        endofsts;
    endofparam;
end;

/* No.20 */
/* フレーム同期パターン */
/* HEX設定 */
ctl X-HRX.DEMO_FRAME_SYNC_PATTERN, 0x00, ;
    param 1, x, 10, A, 10;
        val 0X00000000, 0XFFFFFFFF;
            verifytbl 1;
                verify 1, X-HRX.DEMO_FRAME_SYNC_PATTERN, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No.21 */
/* フレーム同期長 */
/* 0h：32bit固定 */
ctl X-HRX.DEMO_FRAME_SYNC_LENGTH, 0x00, ;
    param 1, s, , S, ;
        sts 32;
            verifytbl 1;
                verify 1, X-HRX.DEMO_FRAME_SYNC_LENGTH, EQ, 32, 1, 6;
            endofverify;
        endofsts;
        sts 24;
            verifytbl 1;
                verify 1, X-HRX.DEMO_FRAME_SYNC_LENGTH, EQ, 24, 1, 6;
            endofverify;
        endofsts;
        sts 16;
            verifytbl 1;
                verify 1, X-HRX.DEMO_FRAME_SYNC_LENGTH, EQ, 16, 1, 6;
            endofverify;
        endofsts;
        sts 8;
            verifytbl 1;
                verify 1, X-HRX.DEMO_FRAME_SYNC_LENGTH, EQ, 8, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.22 */
/* フレームロックオン段数設定 */
/* 1～7frame(1frame step) */
ctl X-HRX.FRAME_LOCK_TO_SEARCH, 0x00, ;
    param 1, u, 2, A, 2;
        val 1, 15;
            verifytbl 1;
                verify 1, X-HRX.FRAME_LOCK_TO_SEARCH, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No.23 */
/* フレームロックオフ段数設定 */
/* 1～7frame(1frame step) */
ctl X-HRX.FRAME_SEARCH_TO_LOCK, 0x00, ;
    param 1, u, 2, A, 2;
        val 1, 15;
            verifytbl 1;
                verify 1, X-HRX.FRAME_SEARCH_TO_LOCK, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No.24 */
/* フレーム誤り許容数設定 */
/* 0～7bit(1bit step) */
ctl X-HRX.FRAME_ERROR_PERMIT, 0x00, ;
    param 1, u, 1, A, 1;
        val 0, 9;
            verifytbl 1;
                verify 1, X-HRX.FRAME_ERROR_PERMIT, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No.25 */
/* 同期フレームカウント数リセット */
/* 0h：NO ACTION,1h：RESET */
ctl X-HRX.FRAME_SYNC_COUNT_RESET, 0x00, ;
    param 1, s, , S, ;
//        sts NO_ACTION;
//            verifytbl 1;
//                verify 1, X-HRX.FRAME_SYNC_COUNT_RESET, EQ, NO_ACTION, 1, 6;
//            endofverify;
//        endofsts;
        sts RESET;
//            verifytbl 1;
//                verify 1, X-HRX.FRAME_SYNC_COUNT_RESET, EQ, RESET, 1, 6;
//            endofverify;
        endofsts;
    endofparam;
end;

/* No.26 */
/* ドップラエイド設定(周波数予報値) */
/* -5,000,000～5,000,000Hz(1Hz step) */
ctl X-HRX.PREDIC_SETTING, 0x00, ;
    param 1, d, 8, A, 8;
        val -5000000, 5000000;
            verifytbl 1;
                verify 1, X-HRX.PREDIC_SETTING, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No.27 */
/* BER計測設定 */
/* 0h：STOP,1h：START */
ctl X-HRX.BER_SETTING_START, 0x00, ;
    param 1, s, , S, ;
        sts STOP;
            verifytbl 1;
                verify 1, X-HRX.BER_SETTING_START, EQ, STOP, 1, 6;
            endofverify;
        endofsts;
        sts START;
            verifytbl 1;
                verify 1, X-HRX.BER_SETTING_START, EQ, START, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.28 */
/* BER計測設定 */
/* 0h：Pre RS,1h：Post RS */
ctl X-HRX.BER_SETTING_DATA, 0x00, ;
    param 1, s, , S, ;
        sts Pre_RS;
            verifytbl 1;
                verify 1, X-HRX.BER_SETTING_DATA, EQ, Pre_RS, 1, 6;
            endofverify;
        endofsts;
        sts Post_RS;
            verifytbl 1;
                verify 1, X-HRX.BER_SETTING_DATA, EQ, Post_RS, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.29 */
/* イコライザON/OFF */
/* 0h：EQULAIZER OFF,1h：EQULAIZER ON */
ctl X-HRX.DEMO_EQULIZER_ON, 0x00, ;
    param 1, s, , S, ;
        sts ON;
            verifytbl 1;
                verify 1, X-HRX.DEMO_EQULIZER_ON, EQ, ON, 1, 6;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, X-HRX.DEMO_EQULIZER_ON, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.30 */
/* 閏年、閏秒をON/OFF */
/* 0h：閏年OFF、閏秒OFF 1h : 閏年ON、 閏秒OFF 2h : 閏年OFF、閏秒ON 3h : 閏年ON、 閏秒ON */
ctl X-HRX.LEAP_YEAR/SECOND, 0x00, ;
    param 1, s, , S, ;
      sts Y:OFF/S:OFF;
        verifytbl 1;
           verify 1, X-HRX.LEAP_YEAR/SECOND, EQ, Y:OFF/S:OFF, 1, 6;
        endofverify;
      endofsts;
      sts Y:ON/S:OFF;
        verifytbl 1;
           verify 1, X-HRX.LEAP_YEAR/SECOND, EQ, Y:ON/S:OFF, 1, 6;
        endofverify;
      endofsts;
      sts Y:OFF/S:ON;
        verifytbl 1;
           verify 1, X-HRX.LEAP_YEAR/SECOND, EQ, Y:OFF/S:ON, 1, 6;
        endofverify;
      endofsts;
      sts Y:ON/S:ON;
        verifytbl 1;
           verify 1, X-HRX.LEAP_YEAR/SECOND, EQ, Y:ON/S:ON, 1, 6;
        endofverify;
      endofsts;
    endofparam;
end;

/* No.31 */
/* スペクトラムモニタ出力観測帯域幅設定値 */
/* 0h：750MHz,1h：375MHz,2h：187.5MHz,3h：93.75MHz,4h：46.875MHz,5h：23.4375MHz,6h：11.71875MHz,7h：5.859375MHz,8h：2.9296875MHz */
//ctl X-HRX.SPECTRUM_MEASURE_BW, 0x00, ;
//    param 1, s, , S, ;
//      sts 750;
//        verifytbl 1;
//           verify 1, X-HRX.SPECTRUM_MEASURE_BW, EQ, 750, 1, 6;
//        endofverify;
//      endofsts;
//      sts 375;
//        verifytbl 1;
//           verify 1, X-HRX.SPECTRUM_MEASURE_BW, EQ, 375, 1, 6;
//        endofverify;
//      endofsts;
//      sts 187.5;
//        verifytbl 1;
//           verify 1, X-HRX.SPECTRUM_MEASURE_BW, EQ, 187.5, 1, 6;
//        endofverify;
//      endofsts;
//      sts 93.75;
//        verifytbl 1;
//           verify 1, X-HRX.SPECTRUM_MEASURE_BW, EQ, 93.75, 1, 6;
//        endofverify;
//      endofsts;
//      sts 46.875;
//        verifytbl 1;
//           verify 1, X-HRX.SPECTRUM_MEASURE_BW, EQ, 46.875, 1, 6;
//        endofverify;
//      endofsts;
//      sts 23.4375;
//        verifytbl 1;
//           verify 1, X-HRX.SPECTRUM_MEASURE_BW, EQ, 23.4375, 1, 6;
//        endofverify;
//      endofsts;
//      sts 11.71875;
//        verifytbl 1;
//           verify 1, X-HRX.SPECTRUM_MEASURE_BW, EQ, 11.71875, 1, 6;
//        endofverify;
//      endofsts;
//      sts 5.859375;
//        verifytbl 1;
//           verify 1, X-HRX.SPECTRUM_MEASURE_BW, EQ, 5.859375, 1, 6;
//        endofverify;
//      endofsts;
//      sts 2.9296875;
//        verifytbl 1;
//           verify 1, X-HRX.SPECTRUM_MEASURE_BW, EQ, 2.9296875, 1, 6;
//        endofverify;
//      endofsts;
//    endofparam;
//end;

/*                         */
/* 高速データMODEM(変調部) */
/*                         */

/* No.32 */
/* スペクトラムモニタ観測中心周波数オフセット */
/* -4.000Mhz～+4.000MHz(1kHz step) */
/* bit16   ：符号(0/1 = -/+) */
/* bit15-12：×1MHz   */
/* bit11-8 ：×100kHz */
/* bit7-4  ：×10kHz  */
/* bit3-0  ：×1kHz   */
//ctl X-HRX.SPECTRUM_FREQ_OFFSET, 0x00, ;
//    param 1, d, 5, B, 5;
//        val -4000, 4000;
//            verifytbl 1;
//                verify 1, X-HRX.SPECTRUM_FREQ_OFFSET, EQ, *, 1, 6;
//            endofverify;
//        endofval;
//    endofparam;
//end;

/* No.33 */
/* ドップラエイド ON/OFF */
/* 0h：OFF,1h：ON */
ctl X-HRX.PREDIC_SETTING_ON, 0x00, ;
    param 1, s, , S, ;
        sts ON;
            verifytbl 1;
                verify 1, X-HRX.PREDIC_SETTING_ON, EQ, ON, 1, 6;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, X-HRX.PREDIC_SETTING_ON, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.34 */
/* LAN出力チャンネル設定(ミッション) */
/* 0h:CH1 -> CH1, CH2 -> CH2      */
/*    CH3 -> CH3, CH4 -> CH4      */
/* 1h:CH1 -> CH1/CH2              */
/*    CH2 -> CH3/CH4              */
/* 2h:CH1 -> CH1/CH3              */
/*    CH2 -> CH2/CH4              */
/* 3h:CH1 -> CH1/CH2/CH3/CH4      */
/* 4h:CH1/CH2 -> CH1              */
/*    CH3/CH4 -> CH2              */
/* 5h:CH1/CH3 -> CH1              */
/*    CH2/CH4 -> CH2              */
/* 6h:CH1/CH2/CH3/CH4 -> CH1      */
/* 左側：BB出力ch,右側：LAN出力ch */
ctl X-HRX.LAN_OUT_CH_SEL, 0x00, ;
    param 1, s, , S, ;
//        sts CH1->CH1_CH2->CH2_CH3->CH3_CH4->CH4;
//            verifytbl 1;
//                verify 1, X-HRX.LAN_OUT_CH_SEL, EQ, CH1->CH1_CH2->CH2_CH3->CH3_CH4->CH4, 1, 6;
//            endofverify;
//        endofsts;
//        sts CH1->CH1/2_CH2->CH3/4;
//            verifytbl 1;
//                verify 1, X-HRX.LAN_OUT_CH_SEL, EQ, CH1->CH1/CH2_CH2->CH3/CH4, 1, 6;
//            endofverify;
//        endofsts;
//        sts CH1->CH1/3_CH2->CH2/4;
//            verifytbl 1;
//                verify 1, X-HRX.LAN_OUT_CH_SEL, EQ, CH1->CH1/CH3_CH2->CH2/CH4, 1, 6;
//            endofverify;
//        endofsts;
//        sts CH1->CH1/2/3/4;
//            verifytbl 1;
//                verify 1, X-HRX.LAN_OUT_CH_SEL, EQ, CH1->CH1/CH2/CH3/CH4, 1, 6;
//            endofverify;
//        endofsts;
//        sts CH1/2->CH1_CH3/4->CH2;
//            verifytbl 1;
//                verify 1, X-HRX.LAN_OUT_CH_SEL, EQ, CH1/CH2->CH1_CH3/CH4->CH2, 1, 6;
//            endofverify;
//        endofsts;
//       sts CH1/3->CH1_CH2/4->CH2;
//            verifytbl 1;
//                verify 1, X-HRX.LAN_OUT_CH_SEL, EQ, CH1/CH3->CH1_CH2/CH4->CH2, 1, 6;
//            endofverify;
//        endofsts;
//        sts CH1/2/3/4->CH1;
//            verifytbl 1;
//                verify 1, X-HRX.LAN_OUT_CH_SEL, EQ, CH1/CH2/CH3/CH4->CH1, 1, 6;
//            endofverify;
//        endofsts;
        sts CH1->CH1;
            verifytbl 1;
                verify 1, X-HRX.LAN_OUT_CH_SEL, EQ, CH1->CH1, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.35 */
/* サービスグレード設定 */
ctl X-HRX.DEMO_SERVICE_GRADE, 0x00, ;
    param 1, s, , S, ;
        sts GRADE_2;
            verifytbl 1;
                verify 1, X-HRX.DEMO_SERVICE_GRADE, EQ, GRADE_2, 1, 6;
            endofverify;
        endofsts;
        sts GRADE_3;
            verifytbl 1;
                verify 1, X-HRX.DEMO_SERVICE_GRADE, EQ, GRADE_3, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.36 */
/* CRC ON/OFF */
ctl X-HRX.DEMO_CRC_ON, 0x00, ;
    param 1, s, , S, ;
        sts ON;
            verifytbl 1;
                verify 1, X-HRX.DEMO_CRC_ON, EQ, ON, 1, 6;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, X-HRX.DEMO_CRC_ON, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.37 */
/* フレーム長 */
ctl X-HRX.DEMO_FRAME_LENGTH, 0x00, ;
    param 1, u, 4, A, 4;
        val 8, 1999;
            verifytbl 1;
                verify 1, X-HRX.DEMO_FRAME_LENGTH, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No.37 */
/* 出力ON/OFF */
/* 0h：OFF,1h：ON */
ctl X-HRX.OUTPUT_ON, 0x00, ;
    param 1, s, , S, ;
        sts ON;
            verifytbl 1;
                verify 1, X-HRX.OUTPUT_ON, EQ, ON, 1, 6;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, X-HRX.OUTPUT_ON, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.38 */
/* 変調ON/OFF */
/* 0h：OFF,1h：ON */
ctl X-HRX.MOD_ON, 0x00, ;
    param 1, s, , S, ;
        sts ON;
            verifytbl 1;
                verify 1, X-HRX.MOD_ON, EQ, ON, 1, 6;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, X-HRX.MOD_ON, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.39 */
/* 変調形式 */
/* 1h：BPSK,2h：QPSK,3h：OQPSK,4h：16QAM */
ctl X-HRX.MODULATION, 0x00, ;
    param 1, s, , S, ;
//        sts BPSK;
//            verifytbl 1;
//                verify 1, X-HRX.MODULATION, EQ, BPSK, 1, 6;
//            endofverify;
//        endofsts;
        sts QPSK;
            verifytbl 1;
                verify 1, X-HRX.MODULATION, EQ, QPSK, 1, 6;
            endofverify;
        endofsts;
//        sts OQPSK;
//            verifytbl 1;
//                verify 1, X-HRX.MODULATION, EQ, OQPSK, 1, 6;
//            endofverify;
//        endofsts;
//        sts 16QAM;
//            verifytbl 1;
//                verify 1, X-HRX.MODULATION, EQ, 16QAM, 1, 6;
//            endofverify;
//        endofsts;
    endofparam;
end;

/* No.40 */
/* 符号形式 */
/* 1h：NRZ-L,2h：NRZ-M,4h：NRZ-S */
ctl X-HRX.MOD_DATA_MODE, 0x00, ;
    param 1, s, , S, ;
        sts NRZ-L;
            verifytbl 1;
                verify 1, X-HRX.MOD_DATA_MODE, EQ, NRZ-L, 1, 6;
            endofverify;
        endofsts;
        sts NRZ-M;
            verifytbl 1;
                verify 1, X-HRX.MOD_DATA_MODE, EQ, NRZ-M, 1, 6;
            endofverify;
        endofsts;
        sts NRZ-S;
            verifytbl 1;
                verify 1, X-HRX.MOD_DATA_MODE, EQ, NRZ-S, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.41 */
/* データレート */
/* 1,000,000～20,000,000bps(1bps step) */
//ctl X-HRX.DATA_RATE_CONT, 0x00, ;
ctl X-HRX.MOD_DATA_RATE_CONT, 0x00, ;
    param 1, u, 8, A, 8;
        val 1000000, 20000000;
            verifytbl 1;
                verify 1, X-HRX.MOD_DATA_RATE, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No.42 */
/* 出力中心周波数 */
/* 700,000,000～1,000,000,000Hz(1Hz step) */
//ctl X-HRX.CENTER_FREQUENCY, 0x00, ;
ctl X-HRX.MOD_CENTER_FREQUENCY, 0x00, ;
    param 1, u, 10, A, 10;
        val 700000000, 1000000000;
            verifytbl 1;
                verify 1, X-HRX.MOD_CENTER_FREQUENCY, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No.43 */
/* 送信フィルタ特性(送信マッチドフィルタ形式) */
/* 1h：RAISED,2h：ROOT RAISED,3h：RAISED(x/sinx),4h：ROOT RAISED(x/sinx),5h：NORMAL */
//ctl X-HRX.FILTER_SETTING, 0x00, ;
ctl X-HRX.MOD_FILTER_SETTING, 0x00, ;
    param 1, s, , S, ;
        sts RAISED;
            verifytbl 1;
                verify 1, X-HRX.MOD_FILTER_SETTING, EQ, RAISED, 1, 6;
            endofverify;
        endofsts;
        sts ROOT_RAISED;
            verifytbl 1;
                verify 1, X-HRX.MOD_FILTER_SETTING, EQ, ROOT_RAISED, 1, 6;
            endofverify;
        endofsts;
        sts RAISED(x/sinx);
            verifytbl 1;
                verify 1, X-HRX.MOD_FILTER_SETTING, EQ, RAISED(x/sinx), 1, 6;
            endofverify;
        endofsts;
        sts Rt_RAIS(x/sinx);
            verifytbl 1;
                verify 1, X-HRX.MOD_FILTER_SETTING, EQ, Rt_RAIS(x/sinx), 1, 6;
            endofverify;
        endofsts;
        sts NO_FILTER;
            verifytbl 1;
                verify 1, X-HRX.MOD_FILTER_SETTING, EQ, NO_FILTER, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.44 */
/* 送信フィルタ特性(送信マッチドフィルタロールオフ率) */
/* 2h：0.2,3h：0.3,4h：0.4,5h：0.5,6h：0.6,7h：0.7 */
ctl X-HRX.MOD_ROLL_OFF_SETTING, 0x00, ;
    param 1, s, , S, ;
        sts 0.2;
            verifytbl 1;
                verify 1, X-HRX.MOD_ROLL_OFF, EQ, 0.2, 1, 6;
            endofverify;
        endofsts;
        sts 0.3;
            verifytbl 1;
                verify 1, X-HRX.MOD_ROLL_OFF, EQ, 0.3, 1, 6;
            endofverify;
        endofsts;
        sts 0.4;
            verifytbl 1;
                verify 1, X-HRX.MOD_ROLL_OFF, EQ, 0.4, 1, 6;
            endofverify;
        endofsts;
        sts 0.5;
            verifytbl 1;
                verify 1, X-HRX.MOD_ROLL_OFF, EQ, 0.5, 1, 6;
            endofverify;
        endofsts;
        sts 0.6;
            verifytbl 1;
                verify 1, X-HRX.MOD_ROLL_OFF, EQ, 0.6, 1, 6;
            endofverify;
        endofsts;
        sts 0.7;
            verifytbl 1;
                verify 1, X-HRX.MOD_ROLL_OFF, EQ, 0.7, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.45 */
/* 差動符号化設定 */
/* 0h：4PHASE,1h：4ch SEPARATE,2h：OFF,3h：4PHASE INVERSE */
ctl X-HRX.DIFF_ENCODE, 0x00, ;
    param 1, s, , S, ;
        sts 4PHASE;
            verifytbl 1;
                verify 1, X-HRX.DIFF_ENCODE, EQ, 4PHASE, 1, 6;
            endofverify;
        endofsts;
//        sts 4ch_SEPARATE;
//            verifytbl 1;
//                verify 1, X-HRX.DIFF_ENCODE, EQ, 4ch_SEPARATE, 1, 6;
//            endofverify;
//        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, X-HRX.DIFF_ENCODE, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
        sts 4PHASE_INVERSE;
            verifytbl 1;
                verify 1, X-HRX.DIFF_ENCODE, EQ, 4PHASE_INVERSE, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.46 */
/* 畳み込み符号化設定(ON/OFF) */
/* 0h：OFF,1h：ON */
ctl X-HRX.CONV_SETTING_CONV_ON, 0x00, ;
    param 1, s, , S, ;
        sts ON;
            verifytbl 1;
                verify 1, X-HRX.CONV_ON, EQ, ON, 1, 6;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, X-HRX.CONV_ON, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.47 */
/* 畳み込み符号化設定(チャンネル) */
/* 0h：CH SINGLE,1h：CH DUAL */
ctl X-HRX.CONV_SETTING_CH, 0x00, ;
    param 1, s, , S, ;
        sts CH_SINGLE;
            verifytbl 1;
                verify 1, X-HRX.CONV_SETTING_CH, EQ, CH_SINGLE, 1, 6;
            endofverify;
        endofsts;
        sts CH_DUAL;
            verifytbl 1;
                verify 1, X-HRX.CONV_SETTING_CH, EQ, CH_DUAL, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.48 */
/* 畳み込み符号化設定(極性) */
/* 0h：G2 INVERT,G1 NORMAL,G1 first(CCSDS),1h：G2 NORMAL,G1 INVERT,G2 first(ESA),2h：G2 INVERT,G1 NORMAL,G2 first(JPL) */
ctl X-HRX.CONV_SETTING_POL, 0x00, ;
    param 1, s, , S, ;
        sts CCSDS;
            verifytbl 1;
                verify 1, X-HRX.CONV_SETTING_POL, EQ, CCSDS, 1, 6;
            endofverify;
        endofsts;
//        sts ESA;
//            verifytbl 1;
//                verify 1, X-HRX.CONV_SETTING_POL, EQ, ESA, 1, 6;
//            endofverify;
//        endofsts;
        sts JPL;
            verifytbl 1;
                verify 1, X-HRX.CONV_SETTING_POL, EQ, JPL, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.49 */
/* 畳み込み符号化設定(符号化率) */
/* 0h：1/2,1h：2/3,2h：3/4,3h：5/6,4h：7/8 */
ctl X-HRX.CONV_SETTING_R, 0x00, ;
    param 1, s, , S, ;
        sts 1/2;
            verifytbl 1;
                verify 1, X-HRX.CONV_SETTING_R, EQ, 1/2, 1, 6;
            endofverify;
        endofsts;
//        sts 2/3;
//            verifytbl 1;
//                verify 1, X-HRX.CONV_SETTING_R, EQ, 2/3, 1, 6;
//            endofverify;
//        endofsts;
//        sts 3/4;
//            verifytbl 1;
//                verify 1, X-HRX.CONV_SETTING_R, EQ, 3/4, 1, 6;
//            endofverify;
//        endofsts;
//        sts 5/6;
//            verifytbl 1;
//                verify 1, X-HRX.CONV_SETTING_R, EQ, 5/6, 1, 6;
//            endofverify;
//        endofsts;
//        sts 7/8;
//            verifytbl 1;
//                verify 1, X-HRX.CONV_SETTING_R, EQ, 7/8, 1, 6;
//            endofverify;
//        endofsts;
    endofparam;
end;

/* No.50 */
/* リードソロモン符号化設定(ON/OFF) */
/* 0h：RS OFF,1h：RS ON */
ctl X-HRX.MOD_RS_ON, 0x00, ;
    param 1, s, , S, ;
        sts ON;
            verifytbl 1;
                verify 1, X-HRX.MOD_RS_ON, EQ, ON, 1, 6;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, X-HRX.MOD_RS_ON, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.51 */
/* リードソロモン符号化設定(ランダマイズON/OFF) */
/* 0h：ランダマイズ OFF,1h：ランダマイズ ON */
ctl X-HRX.MOD_RS_RNDM, 0x00, ;
    param 1, s, , S, ;
        sts ON;
            verifytbl 1;
                verify 1, X-HRX.MOD_RS_RNDM, EQ, ON, 1, 6;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, X-HRX.MOD_RS_RNDM, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.52 */
/* リードソロモン符号化設定(RS MODE) */
/* 0h：NORMAL,1h：SHORT */
ctl X-HRX.MOD_RS_MODE, 0x00, ;
    param 1, s, , S, ;
        sts NORMAL;
            verifytbl 1;
                verify 1, X-HRX.MOD_RS_MODE, EQ, NORMAL, 1, 6;
            endofverify;
        endofsts;
        sts SHORT;
            verifytbl 1;
                verify 1, X-HRX.MOD_RS_MODE, EQ, SHORT, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.53 */
/* リードソロモン復号設定(インタリーブ数) */
/* 1～5 */
ctl X-HRX.MOD_RS_INTERLEAVE, 0x00, ;
    param 1, u, 1, A, 1;
        val 1, 5;
            verifytbl 1;
                verify 1, X-HRX.MOD_RS_INTERLEAVE, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No.54 */
/* フレーム同期設定(ON/OFF) */
/* 0h：OFF,1h：ON */
ctl X-HRX.MOD_FRAME_SYNC_ON, 0x00, ;
    param 1, s, , S, ;
        sts ON;
            verifytbl 1;
                verify 1, X-HRX.MOD_FRAME_SYNC_ON, EQ, ON, 1, 6;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, X-HRX.MOD_FRAME_SYNC_ON, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.55 */
/* フレーム同期設定(モード) */
/* 0h：IQ SEPARATE,1h：IQ MERGED,2h：4ch SEPARATE,3h：ALOS2(8ch) */
ctl X-HRX.MOD_FRAME_SYNC_MODE, 0x00, ;
    param 1, s, , S, ;
        sts IQ_SEPARATE;
            verifytbl 1;
                verify 1, X-HRX.MOD_FRAME_SYNC_MODE, EQ, IQ_SEPARATE, 1, 6;
            endofverify;
        endofsts;
        sts IQ_MERGED;
            verifytbl 1;
                verify 1, X-HRX.MOD_FRAME_SYNC_MODE, EQ, IQ_MERGED, 1, 6;
            endofverify;
        endofsts;
//        sts 4ch_SEPARATE;
//            verifytbl 1;
//                verify 1, X-HRX.MOD_FRAME_SYNC_MODE, EQ, 4ch_SEPARATE, 1, 6;
//            endofverify;
//        endofsts;
//        sts ALOS2(8ch);
//            verifytbl 1;
//                verify 1, X-HRX.MOD_FRAME_SYNC_MODE, EQ, ALOS2(8ch), 1, 6;
//            endofverify;
//        endofsts;
    endofparam;
end;

/* No.56 */
/* フレーム同期パターン */
/* HEX設定 */
ctl X-HRX.MOD_FRAME_SYNC_PATTERN, 0x00, ;
    param 1, x, 10, A, 10;
        val 0X00000000, 0XFFFFFFFF;
            verifytbl 1;
                verify 1, X-HRX.MOD_FRAME_SYNC_PATTERN, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No.57 */
/* フレーム同期長 */
/* 0x03h= "8bit" 0x02h="16bit" 0x01h="24bit" 0x00="32bit" */
ctl X-HRX.MOD_FRAME_SYNC_LENGTH, 0x00, ;
    param 1, s, , S, ;
        sts 32;
            verifytbl 1;
                verify 1, X-HRX.MOD_FRAME_SYNC_LENGTH, EQ, 32, 1, 6;
            endofverify;
        endofsts;
        sts 24;
            verifytbl 1;
                verify 1, X-HRX.MOD_FRAME_SYNC_LENGTH, EQ, 24, 1, 6;
            endofverify;
        endofsts;
        sts 16;
            verifytbl 1;
                verify 1, X-HRX.MOD_FRAME_SYNC_LENGTH, EQ, 16, 1, 6;
            endofverify;
        endofsts;
        sts 8;
            verifytbl 1;
                verify 1, X-HRX.MOD_FRAME_SYNC_LENGTH, EQ, 8, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.58 */
/* ドップラシミュレーション設定(ON/OFF) */
/* 0h：OFF,1h：ON */
ctl X-HRX.DOPP_SIM_ON, 0x00, ;
    param 1, s, , S, ;
        sts ON;
            verifytbl 1;
                verify 1, X-HRX.DOPP_SIM_ON, EQ, ON, 1, 6;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, X-HRX.DOPP_SIM_ON, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.59 */
/* ドップラシミュレーション設定(周波数予報値) */
/* -5,000,000～5,000,000Hz(1Hz step) */
ctl X-HRX.DOPP_SIM_SETTING, 0x00, ;
    param 1, d, 8, A, 8;
        val -5000000, 5000000;
            verifytbl 1;
                verify 1, X-HRX.DOPP_SIM_SETTING, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No.60 */
/* 試験データ源泉 */
/* 0h：PN,1h：0,2h：1,3h：FILE,4h：LVDS,5h：RESERVE,6h：DOT */
ctl X-HRX.DATA_SOURCE, 0x00, ;
    param 1, s, , S, ;
        sts PN;
            verifytbl 1;
                verify 1, X-HRX.DATA_SOURCE, EQ, PN, 1, 6;
            endofverify;
        endofsts;
        sts 0;
            verifytbl 1;
                verify 1, X-HRX.DATA_SOURCE, EQ, 0, 1, 6;
            endofverify;
        endofsts;
        sts 1;
            verifytbl 1;
                verify 1, X-HRX.DATA_SOURCE, EQ, 1, 1, 6;
            endofverify;
        endofsts;
        sts FILE;
            verifytbl 1;
                verify 1, X-HRX.DATA_SOURCE, EQ, FILE, 1, 6;
            endofverify;
        endofsts;
        sts LVDS;
            verifytbl 1;
                verify 1, X-HRX.DATA_SOURCE, EQ, LVDS, 1, 6;
            endofverify;
        endofsts;
//        sts RESERVE;
//            verifytbl 1;
//                verify 1, X-HRX.DATA_SOURCE, EQ, RESERVE, 1, 6;
//            endofverify;
//        endofsts;
        sts DOT;
            verifytbl 1;
                verify 1, X-HRX.DATA_SOURCE, EQ, DOT, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.61 */
/* PNコード設定(ch1コード段数) */
/* 0h：8,1h：10,2h：11,3h：15,4h：23 */
ctl X-HRX.PN_CODE_CH1_STEP, 0x00, ;
    param 1, s, , S, ;
        sts 8;
            verifytbl 1;
                verify 1, X-HRX.PN_CODE_CH1_STEP, EQ, 8, 1, 6;
            endofverify;
        endofsts;
        sts 10;
            verifytbl 1;
                verify 1, X-HRX.PN_CODE_CH1_STEP, EQ, 10, 1, 6;
            endofverify;
        endofsts;
        sts 11;
            verifytbl 1;
                verify 1, X-HRX.PN_CODE_CH1_STEP, EQ, 11, 1, 6;
            endofverify;
        endofsts;
        sts 15;
            verifytbl 1;
                verify 1, X-HRX.PN_CODE_CH1_STEP, EQ, 15, 1, 6;
            endofverify;
        endofsts;
        sts 23;
            verifytbl 1;
                verify 1, X-HRX.PN_CODE_CH1_STEP, EQ, 23, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.62 */
/* PNコード設定(ch2コード段数) */
/* 0h：8,1h：10,2h：11,3h：15,4h：23 */
ctl X-HRX.PN_CODE_CH2_STEP, 0x00, ;
    param 1, s, , S, ;
        sts 8;
            verifytbl 1;
                verify 1, X-HRX.PN_CODE_CH2_STEP, EQ, 8, 1, 6;
            endofverify;
        endofsts;
        sts 10;
            verifytbl 1;
                verify 1, X-HRX.PN_CODE_CH2_STEP, EQ, 10, 1, 6;
            endofverify;
        endofsts;
        sts 11;
            verifytbl 1;
                verify 1, X-HRX.PN_CODE_CH2_STEP, EQ, 11, 1, 6;
            endofverify;
        endofsts;
        sts 15;
            verifytbl 1;
                verify 1, X-HRX.PN_CODE_CH2_STEP, EQ, 15, 1, 6;
            endofverify;
        endofsts;
        sts 23;
            verifytbl 1;
                verify 1, X-HRX.PN_CODE_CH2_STEP, EQ, 23, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.63 */
/* PNコード設定(ch3コード段数) */
/* 0h：8段,1h：10段,2h：11段,3h：15段,4h：23段 */
//ctl X-HRX.PN_CODE_CH3, 0x00, ;
//    param 1, s, , S, ;
//        sts 8段;
//            verifytbl 1;
//                verify 1, X-HRX.PN_CODE_CH3, EQ, 8段, 1, 6;
//            endofverify;
//        endofsts;
//        sts 10段;
//            verifytbl 1;
//                verify 1, X-HRX.PN_CODE_CH3, EQ, 10段, 1, 6;
//            endofverify;
//        endofsts;
//        sts 11段;
//            verifytbl 1;
//                verify 1, X-HRX.PN_CODE_CH3, EQ, 11段, 1, 6;
//            endofverify;
//        endofsts;
//        sts 15段;
//            verifytbl 1;
//                verify 1, X-HRX.PN_CODE_CH3, EQ, 15段, 1, 6;
//            endofverify;
//        endofsts;
//        sts 23段;
//            verifytbl 1;
//                verify 1, X-HRX.PN_CODE_CH3, EQ, 23段, 1, 6;
//            endofverify;
//        endofsts;
//    endofparam;
//end;


/* No.64 */
/* PNコード設定(ch4コード段数) */
/* 0h：8段,1h：10段,2h：11段,3h：15段,4h：23段 */
//ctl X-HRX.PN_CODE_CH4, 0x00, ;
//    param 1, s, , S, ;
//        sts 8段;
//            verifytbl 1;
//                verify 1, X-HRX.PN_CODE_CH4, EQ, 8段, 1, 6;
//            endofverify;
//        endofsts;
//        sts 10段;
//            verifytbl 1;
//                verify 1, X-HRX.PN_CODE_CH4, EQ, 10段, 1, 6;
//            endofverify;
//        endofsts;
//        sts 11段;
//            verifytbl 1;
//                verify 1, X-HRX.PN_CODE_CH4, EQ, 11段, 1, 6;
//            endofverify;
//        endofsts;
//        sts 15段;
//            verifytbl 1;
//                verify 1, X-HRX.PN_CODE_CH4, EQ, 15段, 1, 6;
//            endofverify;
//        endofsts;
//        sts 23段;
//            verifytbl 1;
//                verify 1, X-HRX.PN_CODE_CH4, EQ, 23段, 1, 6;
//            endofverify;
//        endofsts;
//    endofparam;
//end;


/*                         */
/* 高速データMODEM(変調部) */
/*                         */

/* No.65 */
/* PNコード設定(ch間ディレイ) */
/* 0～128(1step) */
ctl X-HRX.PN_CODE_DELAY, 0x00, ;
    param 1, u, 3, A, 3;
        val 0, 128;
            verifytbl 1;
                verify 1, X-HRX.PN_CODE_DELAY, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No.66 */
/* イコライザON/OFF */
/* 0h：EQULAIZER OFF,1h：EQULAIZER ON */
ctl X-HRX.MOD_EQULIZER_ON, 0x00, ;
    param 1, s, , S, ;
        sts ON;
            verifytbl 1;
                verify 1, X-HRX.MOD_EQULIZER_ON, EQ, ON, 1, 6;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, X-HRX.MOD_EQULIZER_ON, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.67 */
/* 周波数スイープのON/OFFを設定する */
/* 0h：SWEEP OFF,1h：SWEEP ON */
ctl X-HRX.SWEEP_ON, 0x00, ;
    param 1, s, , S, ;
        sts ON;
            verifytbl 1;
                verify 1, X-HRX.SWEEP_ON, EQ, ON, 1, 6;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, X-HRX.SWEEP_ON, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.68 */
/* 周波数スイープの方法を設定する */
/* 0h：CONTINUANCE,1h：+SINGLE,2h：-SINGLE,3h：RESET,4h：STOP */
ctl X-HRX.SWEEP_SETTING, 0x00, ;
    param 1, s, , S, ;
        sts CONTINUANCE;
            verifytbl 1;
                verify 1, X-HRX.SWEEP_SETTING, EQ, CONTINUANCE, 1, 6;
            endofverify;
        endofsts;
        sts +SINGLE;
            verifytbl 1;
                verify 1, X-HRX.SWEEP_SETTING, EQ, +SINGLE, 1, 6;
            endofverify;
        endofsts;
        sts -SINGLE;
            verifytbl 1;
                verify 1, X-HRX.SWEEP_SETTING, EQ, -SINGLE, 1, 6;
            endofverify;
        endofsts;
        sts RESET;
            verifytbl 1;
                verify 1, X-HRX.SWEEP_SETTING, EQ, RESET, 1, 6;
            endofverify;
        endofsts;
        sts STOP;
            verifytbl 1;
                verify 1, X-HRX.SWEEP_SETTING, EQ, STOP, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.69 */
/* スイープバンドを設定する */
/* 0Hz～4MHz(1Hz step) */
/* 0Hz～4,000,000Hz(1Hz step) */
ctl X-HRX.SWEEP_BAND, 0x00, ;
    param 1, u, 7, A, 7;
        val 0, 4000000;
            verifytbl 1;
                verify 1, X-HRX.SWEEP_BAND, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No.70 */
/* スイープレートを設定する */
/* 0～10kHz/s(1Hz step) */
/* 0～10,000Hz(1Hz step) */
ctl X-HRX.SWEEP_RATE, 0x00, ;
    param 1, u, 5, A, 5;
        val 0, 10000;
            verifytbl 1;
                verify 1, X-HRX.SWEEP_RATE, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No.71 */
/* サービスグレード設定 */
ctl X-HRX.MOD_SERVICE_GRADE, 0x00, ;
    param 1, s, , S, ;
        sts GRADE_2;
            verifytbl 1;
                verify 1, X-HRX.MOD_SERVICE_GRADE, EQ, GRADE_2, 1, 6;
            endofverify;
        endofsts;
        sts GRADE_3;
            verifytbl 1;
                verify 1, X-HRX.MOD_SERVICE_GRADE, EQ, GRADE_3, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.72 */
/* CRC ON/OFF */
ctl X-HRX.MOD_CRC_ON, 0x00, ;
    param 1, s, , S, ;
        sts ON;
            verifytbl 1;
                verify 1, X-HRX.MOD_CRC_ON, EQ, ON, 1, 6;
            endofverify;
        endofsts;
        sts OFF;
            verifytbl 1;
                verify 1, X-HRX.MOD_CRC_ON, EQ, OFF, 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.73 */
/* フレーム長 */
ctl X-HRX.MOD_FRAME_LENGTH, 0x00, ;
    param 1, u, 4, A, 4;
        val 8, 1999;
            verifytbl 1;
                verify 1, X-HRX.MOD_FRAME_LENGTH, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No.73 */
/* 記録データフォーマット */
/* 1h：RAW固定 */
//ctl X-HRX.STORAGE_DATA_FORMAT, 0x00, ;
//    param 1, s, , S, ;
//        sts RAW固定;
//            verifytbl 1;
//                verify 1, X-HRX.STORAGE_DATA_FORMAT, EQ, RAW固定, 1, 6;
//            endofverify;
//        endofsts;
//    endofparam;
//end;

/* No.74 */
/* RAWデータ記録モード */
/* 0h：TIME,1h：MANUAL */
//ctl X-HRX.STORAGE_MODE, 0x00, ;
//    param 1, s, , S, ;
//        sts TIME;
//            verifytbl 1;
//                verify 1, X-HRX.STORAGE_MODE, EQ, TIME, 1, 6;
//            endofverify;
//        endofsts;
//        sts MANUAL;
//            verifytbl 1;
//                verify 1, X-HRX.STORAGE_MODE, EQ, MANUAL, 1, 6;
//            endofverify;
//        endofsts;
//    endofparam;
//end;

/* No.75 */
/* RAWデータ記録開始時刻 */
/* ABC日 ：1～366,            */
/* DE時　：0～23,             */
/* FG分　：0～59,             */
/* HI秒　：0～59,             */
/* MSB FIRST/BCD CODE         */
/* bit63-36：0	bit35-0：TIME */
/* A(bit35-32):102[日]、      */
/* B(bit31-28):101[日]、      */
/* C(bit27-24):100[日]、      */
/* D(bit23-20):101[時]、      */
/* E(bit19-16):100[時]、      */
/* F(bit15-12):101[分]、      */
/* G(bit11- 8):100[分]、      */
/* H(bit 7- 4):101[秒]、      */
/* I(bit 3- 0):100[秒]        */
/* →結果的には文字列 DDD HH:MM:SS */
//ctl X-HRX.STORAGE_START_TIME, 0x00, ;
//    param 1, s, , , ;
//        verifytbl 1;
//            verify 1, X-HRX.STORAGE_START_TIME, EQ, *, 1, 6;
//        endofverify;
//    endofparam;
//end;

/* No.76 */
/* RAWデータ記録終了時刻 */
/* ABC日 ：1～366,            */
/* DE時　：0～23,             */
/* FG分　：0～59,             */
/* HI秒　：0～59,             */
/* MSB FIRST/BCD CODE         */
/* bit63-36：0	bit35-0：TIME */
/* A(bit35-32):102[日]、      */
/* B(bit31-28):101[日]、      */
/* C(bit27-24):100[日]、      */
/* D(bit23-20):101[時]、      */
/* E(bit19-16):100[時]、      */
/* F(bit15-12):101[分]、      */
/* G(bit11- 8):100[分]、      */
/* H(bit 7- 4):101[秒]、      */
/* I(bit 3- 0):100[秒]        */
/* →結果的には文字列 DDD HH:MM:SS */
//ctl X-HRX.STORAGE_END_TIME, 0x00, ;
//    param 1, s, , , ;
//        verifytbl 1;
//            verify 1, X-HRX.STORAGE_END_TIME, EQ, *, 1, 6;
//        endofverify;
//    endofparam;
//end;

/* No.77 */
/* RAWデータ記録中止要求 */
/* 1h：STORAGE STOP(TIME) */
//ctl X-HRX.STORAGE_STOP_TIME, 0x00, ;
//    param 1, s, , S, ;
//        sts STORAGE_STOP(TIME);
//            verifytbl 1;
//                verify 1, X-HRX.STORAGE_STOP_TIME, EQ, STORAGE_STOP(TIME), 1, 6;
//            endofverify;
//        endofsts;
//    endofparam;
//end;

/* No.78 */
/* RAWデータ記録開始要求 */
/* 1h：STORAGE START(MANUAL)       */
/* STORAGE MODE:TIME時、本値は無効 */
/* REPLAYがSTOPであること。        */
//ctl X-HRX.STORAGE_START_MANUAL, 0x00, ;
//    param 1, s, , S, ;
//        sts STORAGE_START(MANUAL);
//            prechktbl (1*2);
//                prechk 1, X-HRX.STORAGE_MODE, NE, TIME, 3;
//                prechk 2, X-HRX.STORAGE_REPLAY_STOP, EQ, REPLAY_STOP, 3;
//            endofprechk;
//            verifytbl 1;
//                verify 1, X-HRX.STORAGE_START_MANUAL, EQ, STORAGE_START(MANUAL), 1, 6;
//            endofverify;
//        endofsts;
//    endofparam;
//end;

/* No.79 */
/* RAWデータ記録終了要求 */
/* 1h：STORAGE STOP(MANUAL) */
//ctl X-HRX.STORAGE_STOP_MANUAL, 0x00, ;
//    param 1, s, , S, ;
//        sts STORAGE_STOP(MANUAL);
//            verifytbl 1;
//                verify 1, X-HRX.STORAGE_STOP_MANUAL, EQ, STORAGE_STOP(MANUAL), 1, 6;
//            endofverify;
//        endofsts;
//    endofparam;
//end;

/* No.80 */
/* RAWデータ再生開始要求 */
/* 1h：REPLAY START                    */
/* MANUAL,TIME,TEST全てSTOPであること。*/
//ctl X-HRX.STORAGE_REPLAY_START, 0x00, ;
//    param 1, s, , S, ;
//        sts REPLAY_START;
//            prechktbl (1*2*3);
//                prechk 1, X-HRX.STORAGE_STOP_MANUAL, EQ, STORAGE_STOP(MANUAL), 3;
//                prechk 2, X-HRX.STORAGE_STOP_TIME, EQ, STORAGE_STOP(TIME), 3;
//                prechk 3, X-HRX.STORAGE_TEST_STOP, EQ, TEST_STOP, 3;
//            endofprechk;
//            verifytbl 1;
//                verify 1, X-HRX.STORAGE_REPLAY_START, EQ, REPLAY_START, 1, 6;
//            endofverify;
//        endofsts;
//    endofparam;
//end;

/* No.81 */
/* RAWデータ再生終了要求 */
/* 1h：REPLAY STOP */
//ctl X-HRX.STORAGE_REPLAY_STOP, 0x00, ;
//    param 1, s, , S, ;
//        sts REPLAY_STOP;
//            verifytbl 1;
//                verify 1, X-HRX.STORAGE_REPLAY_STOP, EQ, REPLAY_STOP, 1, 6;
//            endofverify;
//        endofsts;
//    endofparam;
//end;

/* No.82 */
/* RAWデータ再生モード設定 */
/* 0h：SINGLE                       */
/* 1～65535：REPEAT(設定値繰り返し) */
//ctl X-HRX.STORAGE_REPLAY_MODE, 0x00, ;
//    param 1, s, , S, ;
//        sts SINGLE;
//            verifytbl 1;
//                verify 1, X-HRX.STORAGE_REPLAY_MODE, EQ, SINGLE, 1, 6;
//            endofverify;
//        endofsts;
//    endofparam;
//end;

/* No.83 */
/* RAWデータ再生ファイル設定 */
/* 先頭ファイル名-最終ファイル名       */
/* 例1(1ファイルのみ再生)              */
/*   RAW_YYYY_MM_DD_hh_mm_ss_1111-1111 */
/* 例2(先頭から100ファイル再生)        */
/*   RAW_YYYY_MM_DD_hh_mm_ss_0001-0100 */
/* MSB詰め、余りは0で埋めること        */
//ctl X-HRX.STORAGE_REPLAY_FILE, 0x00, ;
//    param 1, s, , , ;
//        verifytbl 1;
//            verify 1, X-HRX.STORAGE_REPLAY_FILE, EQ, *, 1, 6;
//        endofverify;
//    endofparam;
//end;

/* No.84 */
/* RAWデータ試験用データ再生開始要求 */
/* 1h：TEST START           */
/* REPLAYがSTOPであること。 */
ctl X-HRX.STORAGE_TEST_START, 0x00, ;
    param 1, s, , S, ;
        sts TEST_START;
//            prechktbl 1;
//                prechk 1, X-HRX.STORAGE_REPLAY_STATUS, EQ, REPLAY_STOP, 3;
//            endofprechk;
            verifytbl (1+2);
                verify 1, X-HRX.STORAGE_TEST_STATUS, EQ, TEST(REPEAT), 1, 6;
                verify 2, X-HRX.STORAGE_TEST_STATUS, EQ, TEST(SINGLE), 1, 6;
            endofverify;
        endofsts;
    endofparam;
end;

/* No.85 */
/* RAWデータ試験用データ再生終了要求 */
/* 1h：TEST STOP */
ctl X-HRX.STORAGE_TEST_STOP, 0x00, ;
    param 1, s, , S, ;
        sts TEST_STOP;
/* 待ち時間が長すぎのためverifyは実施しない */
//            verifytbl 1;
//                verify 1, X-HRX.STORAGE_TEST_STATUS, EQ, STOP, 1, 130;
//            endofverify;
        endofsts;
    endofparam;
end;

/* No.86 */
/* RAWデータ試験用データ再生モード設定 */
/* 0h：SINGLE                             */
/* 1～65535：REPEAT(設定値の回数繰り返し) */
ctl X-HRX.STORAGE_TEST_MODE, 0x00, ;
    param 1, u, 5, A, 5;
        val 0, 65535;
            verifytbl 1;
                verify 1, X-HRX.STORAGE_TEST_MODE_STATUS, EQ, *, 1, 6;
            endofverify;
        endofval;
    endofparam;
end;

/* No.87 */
/* RAWデータ試験用ファイル設定 */
/* 先頭ファイル名-最終ファイル名       */
/* 例1(1ファイルのみ再生)              */
/*   RAW_YYYY_MM_DD_hh_mm_ss_1111-1111 */
/* 例2(先頭から100ファイル再生)        */
/*   RAW_YYYY_MM_DD_hh_mm_ss_0001-0100 */
/* MSB詰め、余りは0で埋めること        */
ctl X-HRX.STORAGE_TEST_FILE, 0x00, ;
    param 1, s, 36, Z, ;
        sts *;
        endofsts;
//    param 1, s, 36, Z, ;
//        verifytbl 1;
//            verify 1, X-HRX.STORAGE_TEST_FILE, EQ, *, 1, 6;
//        endofverify;
    endofparam;
end;

/* No.88 */
/* 擬似テレメトリデータ取り込みファイル設定 */
/* SIMABBCCDDEEFFGGHHII                  */
/*  SIM:固定文字                         */
/*  A:系統数(1～4)                       */
/*  BB:ch1識別(01～20)                   */
/*  CC:ch1ディレイ(00～20)               */
/*  DD:ch2識別(01～20)                   */
/*  EE:ch2ディレイ(00～20)               */
/*  FF:ch3識別(01～20)                   */
/*  GG:ch3ディレイ(00～20)               */
/*  HH:ch4識別(01～20)                   */
/*  II:ch4ディレイ(00～20)               */
/*  系統1～3の場合は0を代入              */
/* 例：系統数3の場合                     */
/* 　　HH：00、II：00                    */
/* 最大ディレイ数(20(DEC))個             */
/* STORAGE,REPLAY,TEST全てSTOPであること */
ctl X-HRX.LOAD_SIM_TLM_FILE, 0x00, ;
    param 1, s, 20, Z, ;
        sts *;
        endofsts;
//    param 1, s, 20, Z, ;
//        prechktbl ((1+2)*3*4);
//            prechk 1, X-HRX.STORAGE_STOP_MANUAL, EQ, STORAGE_STOP(MANUAL), 3;
//            prechk 2, X-HRX.STORAGE_STOP_TIME, EQ, STORAGE_STOP(TIME), 3;
//            prechk 3, X-HRX.STORAGE_REPLAY_STOP, EQ, REPLAY_STOP, 3;
//            prechk 4, X-HRX.STORAGE_TEST_STATUS, EQ, STOP, 3;
//        endofprechk;
//        prechktbl 1;
//            prechk 1, X-HRX.STORAGE_TEST_STATUS, EQ, STOP, 3;
//        endofprechk;
//        verifytbl 1;
//            verify 1, X-HRX.LOAD_SIM_TLM_FILE, EQ, *, 1, 6;
//        endofverify;
    endofparam;
end;

/* No.89 */
/* 退避ファイル設定 */
/* 退避ファイル名(パス単位)              */
/* 転送はフォルダ単位で行う              */
/* RAW_YYYY_MM_DD_hh_mm_ss               */
/* MSB詰め、余りは0で埋めること          */
/* STORAGE,REPLAY,TEST全てSTOPであること */
//ctl X-HRX.PROTECT_RAW_FILE, 0x00, ;
//    param 1, s, , , ;
//        prechktbl ((1+2)*3*4);
//            prechk 1, X-HRX.STORAGE_STOP_MANUAL, EQ, STORAGE_STOP(MANUAL), 3;
//            prechk 2, X-HRX.STORAGE_STOP_TIME, EQ, STORAGE_STOP(TIME), 3;
//            prechk 3, X-HRX.STORAGE_REPLAY_STOP, EQ, REPLAY_STOP, 3;
//            prechk 4, X-HRX.STORAGE_TEST_STOP, EQ, TEST_STOP, 3;
//        endofprechk;
//        verifytbl 1;
//            verify 1, X-HRX.PROTECT_RAW_FILE, EQ, *, 1, 6;
//        endofverify;
//    endofparam;
//end;

/* No.90 */
/* 退避除去ファイル設定 */
/* 退避除去ファイル名(パス単位)          */
/* 転送はフォルダ単位で行う              */
/* RAW_YYYY_MM_DD_hh_mm_ss               */
/* MSB詰め、余りは0で埋めること          */
/* STORAGE,REPLAY,TEST全てSTOPであること */
//ctl X-HRX.UNPROTECT_RAW_FILE, 0x00, ;
//    param 1, s, , , ;
//        prechktbl ((1+2)*3*4);
//            prechk 1, X-HRX.STORAGE_STOP_MANUAL, EQ, STORAGE_STOP(MANUAL), 3;
//            prechk 2, X-HRX.STORAGE_STOP_TIME, EQ, STORAGE_STOP(TIME), 3;
//            prechk 3, X-HRX.STORAGE_REPLAY_STOP, EQ, REPLAY_STOP, 3;
//            prechk 4, X-HRX.STORAGE_TEST_STOP, EQ, TEST_STOP, 3;
//        endofprechk;
//        verifytbl 1;
//            verify 1, X-HRX.UNPROTECT_RAW_FILE, EQ, *, 1, 6;
//        endofverify;
//    endofparam;
//end;

/* No.91 */
/* ストレージRAW入力ファイル設定 */
/* ストレージRAW入力ファイル名(パス単位) */
/* フォルダ単位で転送を行う              */
/* RAW_YYYY_MM_DD_hh_mm_ss               */
/* MSB詰め、余りは0で埋めること          */
/* STORAGE,REPLAY,TEST全てSTOPであること */
/* No.84,85,86,88動作時は制御不可        */
//ctl X-HRX.STORAGE_RAW_INPUT_FILE, 0x00, ;
//    param 1, s, , , ;
//        prechktbl ((1+2)*3*4);
//            prechk 1, X-HRX.STORAGE_STOP_MANUAL, EQ, STORAGE_STOP(MANUAL), 3;
//            prechk 2, X-HRX.STORAGE_STOP_TIME, EQ, STORAGE_STOP(TIME), 3;
//            prechk 3, X-HRX.STORAGE_REPLAY_STOP, EQ, REPLAY_STOP, 3;
//            prechk 4, X-HRX.STORAGE_TEST_STOP, EQ, TEST_STOP, 3;
//        endofprechk;
//        verifytbl 1;
//            verify 1, X-HRX.STORAGE_RAW_INPUT_FILE, EQ, *, 1, 6;
//        endofverify;
//    endofparam;
//end;

/* No.92 */
/* ストレージRAW出力ファイル設定 */
/* ストレージRAW出力ファイル名(パス単位) */
/* フォルダ単位で転送を行う              */
/* RAW_YYYY_MM_DD_hh_mm_ss               */
/* MSB詰め、余りは0で埋めること          */
/* STORAGE,REPLAY,TEST全てSTOPであること */
/* No.84,85,86,87動作時は制御不可        */
//ctl X-HRX.STORAGE_RAW_OUTPUT_FILE, 0x00, ;
//    param 1, s, , , ;
//        prechktbl ((1+2)*3*4);
//            prechk 1, X-HRX.STORAGE_STOP_MANUAL, EQ, STORAGE_STOP(MANUAL), 3;
//            prechk 2, X-HRX.STORAGE_STOP_TIME, EQ, STORAGE_STOP(TIME), 3;
//            prechk 3, X-HRX.STORAGE_REPLAY_STOP, EQ, REPLAY_STOP, 3;
//            prechk 4, X-HRX.STORAGE_TEST_STOP, EQ, TEST_STOP, 3;
//        endofprechk;
//        verifytbl 1;
//            verify 1, X-HRX.STORAGE_RAW_OUTPUT_FILE, EQ, *, 1, 6;
//        endofverify;
//    endofparam;
//end;

/* No.93 */
/* RAWデータ管理情報転送要求制御 */
/* 0h:固定                                   */
/* RAWデータ管理情報転送完了後アンサーを返す */
//ctl X-HRX.RAW_FILE_GET, 0x00, ;
//    param 1, s, , S, ;
//        sts 固定;
//            verifytbl 1;
//                verify 1, X-HRX.RAW_FILE_GET, 固定, 1, 6;
//            endofverify;
//        endofsts;
//    endofparam;
//end;

/* No.94 */
/* ストレージRAW入出力ファイル転送強制ストップ */
/* 1h:STOP */
//ctl X-HRX.STORAGE_RAW_FILE_TRANS_STOP, 0x00, ;
//    param 1, s, , S, ;
//        sts STOP;
//            verifytbl 1;
//                verify 1, X-HRX.STORAGE_RAW_FILE_TRANS_STOP, STOP, 1, 6;
//            endofverify;
//        endofsts;
//    endofparam;
//end;

/* No.95 */
/* 擬似テレメトリデータ(ALOS2(8ch))取り込みファイル設定 */
/* SIMABBCCDDEEFFGGHHII          */
/*   SIM:固定文字                */
/*   A:系統数(8固定)             */
/*   BB～II:ch1～ch8識別(01～20) */
//ctl X-HRX.LOAD_SIM_TLM_ALOS2_FILE, 0x00, ;
//    param 1, s, , , ;
//        verifytbl 1;
//            verify 1, X-HRX.LOAD_SIM_TLM_ALOS2_FILE, EQ, *, 1, 6;
//        endofverify;
//    endofparam;
//end;

/* No.95 */
/* 電源OFF制御 */
ctl X-HRX.POWER_OFF, 0x00, ;
    param 1, s, , S, ;
        sts OFF;
            verifytbl 1;
                verify 1, X-HRX.POWER_ON, EQ, OFF, 1, 10;
            endofverify;
        endofsts;
    endofparam;
end;

/* X-HRXTLMIN */

// ##### 2011/02/02 UDSC-KEISANKI KANSOU -START- ######
// ctl X-HRXTLMIN.TLM_PASS_INIT, 0x00, ;
//    param 1, , , , ;
//      noprm;
//       endofnoprm;
//  endofparam;
//end;
//
//ctl X-HRXTLMIN.TLM_PASS_CHG, 0x00, ;
//    param 1, , , , ;
//      noprm;
//        endofnoprm;
//  endofparam;
//end;
//
//ctl X-HRXTLMIN.TLM_PASS_END, 0x00, ;
//    param 1, , , , ;
//      noprm;
//        endofnoprm;
//  endofparam;
//end;

ctl X-HRXTLMIN.TLM_START, 0x00, ;
    param 1, s, 15, Z, ;
        sts *;
        endofsts;
    endofparam;
end;

ctl X-HRXTLMIN.TLM_END, 0x00, ;
    param 1, u, 3, A, 3;
        val 0, 255;
        endofval;
    endofparam;
end;

//ctl X-HRXTLMIN.SIMTLM_START, 0x00, ;
//    param 1, u, 3, A, 3;
//        val 0, 255;
//        endofval;
//    endofparam;
//end;

//ctl X-HRXTLMIN.SIMTLM_END, 0x00, ;
//    param 1, u, 3, A, 3;
//        val 0, 255;
//        endofval;
//    endofparam;
//end;

ctl X-HRXTLMIN.TISIMTLM_START, 0x00, ;
    param 1, u, 3, A, 3;
        val 0, 255;
        endofval;
    endofparam;
end;

ctl X-HRXTLMIN.TISIMTLM_END, 0x00, ;
    param 1, u, 3, A, 3;
        val 0, 255;
        endofval;
    endofparam;
end;

//ctl X-HRXTLMIN.H2SMACS_TLM_START, 0x00, ;
//    param 1, u, 3, A, 3;
//        val 0, 255;
//        endofval;
//  endofparam;
//end;

//ctl X-HRXTLMIN.H2SMACS_TLM_END, 0x00, ;
//    param 1, u, 3, A, 3;
//        val 0, 255;
//        endofval;
//  endofparam;
//end;

ctl X-HRXTLMIN.SHUTDOWN, 0x00, ;
    param 1, , , , ;
        noprm;
        endofnoprm;
    endofparam;
end;

ctl X-HRXTLMIN.RESTART, 0x00, ;
    param 1, , , , ;
        noprm;
        endofnoprm;
    endofparam;
end;



/**************************************** 2012更新(RD対応)　ここから */
//ctl X-HRXTLMIN.RD_TLM_START, 0x00, ;
//    param 1, s, 15, Z, ;
//        sts *;
//        endofsts;
//    endofparam;
//end;

//ctl X-HRXTLMIN.RD_TLM_END, 0x00, ;
//    param 1, u, 3, A, 3;
//        val 0, 255;
//        endofval;
//    endofparam;
//end;

//ctl X-HRXTLMIN.RD_SIMTLM_START, 0x00, ;
//    param 1, u, 3, A, 3;
//        val 0, 255;
//        endofval;
//    endofparam;
//end;

//ctl X-HRXTLMIN.RD_SIMTLM_END, 0x00, ;
//    param 1, u, 3, A, 3;
//        val 0, 255;
//        endofval;
//    endofparam;
//end;

//ctl X-HRXTLMIN.RD_TISIMTLM_START, 0x00, ;
//    param 1, u, 3, A, 3;
//        val 0, 255;
//        endofval;
//    endofparam;
//end;

//ctl X-HRXTLMIN.RD_TISIMTLM_END, 0x00, ;
//    param 1, u, 3, A, 3;
//        val 0, 255;
//        endofval;
//    endofparam;
//end;

//ctl X-HRXTLMIN.TLM_SELECT, 0x00,;
//    param 1, s, , S, ;
//        sts RD;
//        endofsts;
//        sts TCR;
//        endofsts;
//    endofparam;
//end;

/**************************************** 2012更新(RD対応)　ここまで */

/*** 2013-TURBO start ***/
ctl X-HRXTLMIN.TLM_PACKNUM, 0x00, ;
    param 1, u, 4, A, 4;
        val 0, 9999;
        endofval;
    endofparam;
end;
/*** 2013-TURBO end ***/
/* X-D/C (CONT) */

/************** PIO *******************/

ctl X-DC.LOCAL_ATT_CONT, 0x00, ;
	param 1, s, , S, ;
		sts 35dB;
			verifytbl 1;
				verify 1, X-DC.LOCAL_ATT_ANS, EQ, 35dB, 1, 5;
			endofverify;
		endofsts;
		sts 30dB;
			verifytbl 1;
				verify 1, X-DC.LOCAL_ATT_ANS, EQ, 30dB, 1, 5;
			endofverify;
		endofsts;
		sts 25dB;
			verifytbl 1;
				verify 1, X-DC.LOCAL_ATT_ANS, EQ, 25dB, 1, 5;
			endofverify;
		endofsts;
		sts 20dB;
			verifytbl 1;
				verify 1, X-DC.LOCAL_ATT_ANS, EQ, 20dB, 1, 5;
			endofverify;
		endofsts;
		sts 15dB;
			verifytbl 1;
				verify 1, X-DC.LOCAL_ATT_ANS, EQ, 15dB, 1, 5;
			endofverify;
		endofsts;
		sts 10dB;
			verifytbl 1;
				verify 1, X-DC.LOCAL_ATT_ANS, EQ, 10dB, 1, 5;
			endofverify;
		endofsts;
		sts 5dB;
			verifytbl 1;
				verify 1, X-DC.LOCAL_ATT_ANS, EQ, 5dB, 1, 5;
			endofverify;
		endofsts;
		sts 0dB;
			verifytbl 1;
				verify 1, X-DC.LOCAL_ATT_ANS, EQ, 0dB, 1, 5;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-DC.OUTPUT_RF/IF_CONT, 0x00 , ;
	param 1, s, , S, ;
         sts RF;
             verifytbl 1;
                 verify 1,X-DC.OUTPUT_RF/IF, EQ, RF, 1, 5;
             endofverify;
         endofsts;
         sts IF;
             verifytbl 1;
                 verify 1,X-DC.OUTPUT_RF/IF, EQ, IF, 1, 5;
             endofverify;
         endofsts;
	endofparam;
end;

ctl X-DC.INPUT_SUM_A/B_CONT, 0x00 , ;
	param 1, s, , S, ;
         sts SUM_A;
             verifytbl 1;
                 verify 1,X-DC.INPUT_SUMA/SUMB, EQ, SUM_A, 1, 5;
             endofverify;
         endofsts;
         sts SUM_B;
             verifytbl 1;
                 verify 1,X-DC.INPUT_SUMA/SUMB, EQ, SUM_B, 1, 5;
             endofverify;
         endofsts;
	endofparam;
end;

/***************************************/
/* end of file */
 //----------------------------------------------------------------------
 // データベース名    ：内之浦局 ACQ_TRK_IF制御
 // ファイル名        ：acq_trk_if.db
 // 作成日            ：2017/01/05 as-02
 // 履歴              ：Ver1.0.0 2017/03/03 as-03
 //----------------------------------------------------------------------
/* SX-ANGLE_DET_IF (CONT)  */

ctl ACQ_TRK_IF.CONTROL_MODE, 0xFFFF0002, ;
	param 1, s, , S, ;
		sts REMOTE;
		    set  ch00, w0, b0, w3, b7, 0x00000001; 
			verifytbl 1;
				verify 1, ACQ_TRK_IF.CONTROL_MODE, EQ, REMOTE, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl ACQ_TRK_IF.SESSION_TIMER, 0xFFFF0010, ; /* 内部制御用。画面表示無し */
    param 1, f,10.1, A, 10;
        val 0, 4294967295;
        	set  ch00, w0, b0, w0, b0, 0b1;
        endofval;
    endofparam;
end;

ctl ACQ_TRK_IF.RF_OUT_ACQ, 0x00100501, ;
	param 1, s, , S, ;
		sts ON;
		    set  ch00, w0, b0, w3, b7, 0x00000001; 
			prechktbl 1;
				prechk 1, ACQ_TRK_IF.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, ACQ_TRK_IF.RF_OUT_ACQ, EQ, ON, 2, 2;
			endofverify;
		endofsts;
		sts OFF;
		    set  ch00, w0, b0, w3, b7, 0x00000002; 
			prechktbl 1;
				prechk 1, ACQ_TRK_IF.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, ACQ_TRK_IF.RF_OUT_ACQ, EQ, OFF, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl ACQ_TRK_IF.TRK_MODE, 0x00100600, ;
	param 1, s, , S, ;
		sts S-ACQ;
		    set  ch00, w0, b0, w3, b7, 0x00000001; 
			prechktbl 1;
				prechk 1, ACQ_TRK_IF.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, ACQ_TRK_IF.TRK_MODE, EQ, S-ACQ, 2, 2;
			endofverify;
		endofsts;
		sts X-ACQ;
		    set  ch00, w0, b0, w3, b7, 0x00000002; 
			prechktbl 1;
				prechk 1, ACQ_TRK_IF.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, ACQ_TRK_IF.TRK_MODE, EQ, X-ACQ, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

 //----------------------------------------------------------------------
 // データベース名    ：内之浦局 S-ACQ_TRKRX制御
 // ファイル名        ：s-acq-trkrx.db
 // 作成日            ：2017/02/13 as-02
 // 履歴              ：Ver1.0.0 2017/08/23 as-04
 //----------------------------------------------------------------------
/* S-ACQ_TRKRX (CONT) */

ctl S-ACQ_TRKRX.DIVERSITY_MODE, 0x1, ;
	param 1, s, , S, ;
		sts COMBINE;
		    set  ch00, w0, b0, w3, b7, 0x00000000; 
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.DIVERSITY_MODE_ANS, EQ, COMBINE, 2, 2;
			endofverify;
		endofsts;
		sts Ach;
		    set  ch00, w0, b0, w3, b7, 0x00000001; 
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.DIVERSITY_MODE_ANS, EQ, Ach, 2, 2;
			endofverify;
		endofsts;
		sts Bch;
		    set  ch00, w0, b0, w3, b7, 0x00000002;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.DIVERSITY_MODE_ANS, EQ, Bch, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-ACQ_TRKRX.MOD_FORMAT, 0x2, ;
	param 1, s, , S, ;
		sts PCM-PM;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.MOD_FORMAT_ANS, EQ, PCM-PM, 2, 2;
			endofverify;
		endofsts;
		sts PCM-PSK-PM;
		    set  ch00, w0, b0, w3, b7, 0x00000003;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.MOD_FORMAT_ANS, EQ, PCM-PSK-PM, 2, 2;
			endofverify;
		endofsts;
		sts PCM-BPSK;
		    set  ch00, w0, b0, w3, b7, 0x00000008;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.MOD_FORMAT_ANS, EQ, PCM-BPSK, 2, 2;
			endofverify;
		endofsts;
		sts PCM-QPSK;
		    set  ch00, w0, b0, w3, b7, 0x00000009;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.MOD_FORMAT_ANS, EQ, PCM-QPSK, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-ACQ_TRKRX.DATA_FORMAT, 0x3, ;
	param 1, s, , S, ;
		sts BIPH-S;
		    set  ch00, w0, b0, w3, b7, 0x00000006;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.DATA_FORMAT_ANS, EQ, BIPH-S, 2, 2;
			endofverify;
		endofsts;
		sts BIPH-M;
		    set  ch00, w0, b0, w3, b7, 0x00000005;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.DATA_FORMAT_ANS, EQ, BIPH-M, 2, 2;
			endofverify;
		endofsts;
		sts BIPH-L;
		    set  ch00, w0, b0, w3, b7, 0x00000004;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.DATA_FORMAT_ANS, EQ, BIPH-L, 2, 2;
			endofverify;
		endofsts;
		sts NRZ-S;
		    set  ch00, w0, b0, w3, b7, 0x00000002;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.DATA_FORMAT_ANS, EQ, NRZ-S, 2, 2;
			endofverify;
		endofsts;
		sts NRZ-M;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.DATA_FORMAT_ANS, EQ, NRZ-M, 2, 2;
			endofverify;
		endofsts;
		sts NRZ-L;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.DATA_FORMAT_ANS, EQ, NRZ-L, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-ACQ_TRKRX.VITERBI_DECODE, 0x04, ;
	param 1, s, , S, ;
		sts OFF;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.VITERBI_DECODE_ANS, EQ, OFF, 2, 2;
			endofverify;
		endofsts;
		sts ON(JPL);
		    set  ch00, w0, b0, w3, b7, 0x00000002;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.VITERBI_DECODE_ANS, EQ, ON(JPL), 2, 2;
			endofverify;
		endofsts;
		sts ON(CCSDS);
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.VITERBI_DECODE_ANS, EQ, ON(CCSDS), 2, 2;
			endofverify;
		endofsts;
		sts ON(ESA);
		    set  ch00, w0, b0, w3, b7, 0x00000003;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.VITERBI_DECODE_ANS, EQ, ON(ESA), 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-ACQ_TRKRX.DIFF_DECODE, 0x05, ;
	param 1, s, , S, ;
		sts ON;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.DIFF_DECODE_ANS, EQ, ON, 2, 2;
			endofverify;
		endofsts;
		sts OFF;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.DIFF_DECODE_ANS, EQ, OFF, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-ACQ_TRKRX.FILTER_STYLE, 0x06, ;
	param 1, s, , S, ;
		sts LINEAR_PHASE;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.FILTER_STYLE_ANS, EQ, LINEAR_PHASE, 2, 2;
			endofverify;
		endofsts;
		sts ROOT_NYQ;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.FILTER_STYLE_ANS, EQ, ROOT_NYQ, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-ACQ_TRKRX.IF_CENTER_FREQ, 0x07, ;
    param 1, u, 8, A, 8;
        val 66000000, 74000000;
             set  ch00, w0, b0, w0, b0,0b1;
        	prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
            verifytbl 1;
                verify 1, S-ACQ_TRKRX.IF_CENTER_FREQ_ANS, EQ, *, 2, 2;
            endofverify;
        endofval;
    endofparam;
end;

ctl S-ACQ_TRKRX.BIT_RATE, 0x08, ;
	param 1, f, 7.3, U, 10.3;
		val 100.000, 2400000.000;
		    set  ch00, w0, b0, w0, b0, 1000;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.BIT_RATE_ANS, EQ, *, 2, 2;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-ACQ_TRKRX.SUB_CARR, 0x09, ;
	param 1, f, 7.3, U, 10.3;
		val 1000.000, 2400000.000;
		    set  ch00, w0, b0, w0, b0, 1000;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.SUB_CARR_ANS, EQ, *, 2, 2;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-ACQ_TRKRX.TLM_MOD_INDEX, 0x0A, ;
	param 1, f, 1.2, A, 2;
		val 0.00, 1.50;
		    set  ch00, w0, b0, w0, b0, 20;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.TLM_MOD_INDEX_ANS, EQ, *, 2, 2;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-ACQ_TRKRX.DEM_IQ_POLARITY, 0x0B, ;
	param 1, s, , S, ;
		sts THROUGH;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.DEM_IQ_POLARITY_ANS, EQ, THROUGH, 2, 2;
			endofverify;
		endofsts;
		sts I/Q_SWAP;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.DEM_IQ_POLARITY_ANS, EQ, I/Q_SWAP, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-ACQ_TRKRX.CARR_LOOP_BAND, 0x0E, ;
	param 1, s, , S, ;
		sts 1kHz;
		    set  ch00, w0, b0, w3, b7, 0x0000000a;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.CARR_LOOP_BAND, EQ, 1kHz, 2, 60;
			endofverify;
		endofsts;
		sts 300Hz;
		    set  ch00, w0, b0, w3, b7, 0x00000009;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.CARR_LOOP_BAND, EQ, 300Hz, 2, 60;
			endofverify;
		endofsts;
		sts 100Hz;
		    set  ch00, w0, b0, w3, b7, 0x00000008;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.CARR_LOOP_BAND, EQ, 100Hz, 2, 60;
			endofverify;
		endofsts;
		sts 30Hz;
		    set  ch00, w0, b0, w3, b7, 0x00000007;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.CARR_LOOP_BAND, EQ, 30Hz, 2, 60;
			endofverify;
		endofsts;
		sts WIDE;
		    set  ch00, w0, b0, w3, b7, 0x0000000a;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.CARR_LOOP_BAND, EQ, *, 2, 60;
			endofverify;
		endofsts;
		sts MEDIUM;
		    set  ch00, w0, b0, w3, b7, 0x00000009;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.CARR_LOOP_BAND, EQ, *, 2, 60;
			endofverify;
		endofsts;
		sts NARROW;
		    set  ch00, w0, b0, w3, b7, 0x00000008;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.CARR_LOOP_BAND, EQ, *, 2, 60;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-ACQ_TRKRX.AGC_LOOP_BAND, 0x0F, ;
	param 1, s, , S, ;
		sts 100Hz;
		    set  ch00, w0, b0, w3, b7, 0x0000000a;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.AGC_LOOP_BAND_ANS, EQ, 100Hz, 2, 60;
			endofverify;
		endofsts;
		sts 30Hz;
		    set  ch00, w0, b0, w3, b7, 0x00000009;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.AGC_LOOP_BAND_ANS, EQ, 30Hz, 2, 60;
			endofverify;
		endofsts;
		sts 10Hz;
		    set  ch00, w0, b0, w3, b7, 0x00000008;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.AGC_LOOP_BAND_ANS, EQ, 10Hz, 2, 60;
			endofverify;
		endofsts;
		sts 3Hz;
		    set  ch00, w0, b0, w3, b7, 0x00000007;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.AGC_LOOP_BAND_ANS, EQ, 3Hz, 2, 60;
			endofverify;
		endofsts;
		sts WIDE;
		    set  ch00, w0, b0, w3, b7, 0x0000000a;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.AGC_LOOP_BAND_ANS, EQ, *, 2, 60;
			endofverify;
		endofsts;
		sts MEDIUM;
		    set  ch00, w0, b0, w3, b7, 0x00000009;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.AGC_LOOP_BAND_ANS, EQ, *, 2, 60;
			endofverify;
		endofsts;
		sts NARROW;
		    set  ch00, w0, b0, w3, b7, 0x00000008;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.AGC_LOOP_BAND_ANS, EQ, *, 2, 60;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-ACQ_TRKRX.BIT_LOOP_BAND, 0x10, ;
	param 1, s, , S, ;
		sts NARROW;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.BIT_LOOP_BAND_ANS, EQ, NARROW, 2, 60;
			endofverify;
		endofsts;
		sts MEDIUM;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.BIT_LOOP_BAND_ANS, EQ, MEDIUM, 2, 60;
			endofverify;
		endofsts;
		sts WIDE;
		    set  ch00, w0, b0, w3, b7, 0x00000002;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.BIT_LOOP_BAND_ANS, EQ, WIDE, 2, 60;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-ACQ_TRKRX.CARR_REJECT, 0x11, ;
	param 1, s, ,S, ;
		sts REJECT;
	        set  ch00, w0, b0, w3, b7, 0x00000001;
		endofsts;
    endofparam;
end;

ctl S-ACQ_TRKRX.SYMBOL_REJECT, 0x12, ;
	param 1, s, ,S, ;
		sts REJECT;
	        set  ch00, w0, b0, w3, b7, 0x00000001;
		endofsts;
    endofparam;
end;

ctl S-ACQ_TRKRX.ADJUST_MODE_SELECT, 0x18, ;
	param 1, s, , S, ;
		sts INTERNAL;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.ADJUST_MODE_SELECT, EQ, INTERNAL, 2, 2;
			endofverify;
		endofsts;
		sts EXTERNAL;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.ADJUST_MODE_SELECT, EQ, EXTERNAL, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-ACQ_TRKRX.ANGLE_PARAM_SAVE, 0x19, ;
	param 1, s, ,S, ;
		sts SAVE;
			set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1*2;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
				prechk 2, S-ACQ_TRKRX.ADJUST_MODE_SELECT, EQ, EXTERNAL, 2;
			endofprechk;
		endofsts;
	endofparam;
end;

ctl S-ACQ_TRKRX.OPERATION, 0x1A, ;
	param 1, s, , S, ;
		sts NORMAL1;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.OPERATION_ANS, EQ, NORMAL1, 2, 2;
			endofverify;
		endofsts;
		sts NORMAL2;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.OPERATION_ANS, EQ, NORMAL2, 2, 2;
			endofverify;
		endofsts;
		sts NORMAL3;
		    set  ch00, w0, b0, w3, b7, 0x00000002;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.OPERATION_ANS, EQ, NORMAL3, 2, 2;
			endofverify;
		endofsts;
		sts NORMAL4;
		    set  ch00, w0, b0, w3, b7, 0x00000003;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.OPERATION_ANS, EQ, NORMAL4, 2, 2;
			endofverify;
		endofsts;
		sts CAL_AZ_PEAK1;
		    set  ch00, w0, b0, w3, b7, 0x00000004;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.OPERATION_ANS, EQ, CAL_AZ_PEAK1, 2, 2;
			endofverify;
		endofsts;
		sts CAL_AZ_PEAK2;
		    set  ch00, w0, b0, w3, b7, 0x00000005;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.OPERATION_ANS, EQ, CAL_AZ_PEAK2, 2, 2;
			endofverify;
		endofsts;
		sts CAL_AZ_PEAK3;
		    set  ch00, w0, b0, w3, b7, 0x00000006;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.OPERATION_ANS, EQ, CAL_AZ_PEAK3, 2, 2;
			endofverify;
		endofsts;
		sts CAL_AZ_PEAK4;
		    set  ch00, w0, b0, w3, b7, 0x00000007;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.OPERATION_ANS, EQ, CAL_AZ_PEAK4, 2, 2;
			endofverify;
		endofsts;
		sts CAL_EL_PEAK1;
		    set  ch00, w0, b0, w3, b7, 0x00000008;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.OPERATION_ANS, EQ, CAL_EL_PEAK1, 2, 2;
			endofverify;
		endofsts;
		sts CAL_EL_PEAK2;
		    set  ch00, w0, b0, w3, b7, 0x00000009;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.OPERATION_ANS, EQ, CAL_EL_PEAK2, 2, 2;
			endofverify;
		endofsts;
		sts CAL_EL_PEAK3;
		    set  ch00, w0, b0, w3, b7, 0x0000000A;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.OPERATION_ANS, EQ, CAL_EL_PEAK3, 2, 2;
			endofverify;
		endofsts;
		sts CAL_EL_PEAK4;
		    set  ch00, w0, b0, w3, b7, 0x0000000B;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.OPERATION_ANS, EQ, CAL_EL_PEAK4, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-ACQ_TRKRX.ANGLE_FILE_Fd, 0x1B, ;
	param 1, f, 5.1, U, 6.1;
		val 2200.0, 12300.0;
		    set  ch00, w0, b0, w0, b0, 10;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.ANGLE_FILE_Fd_ANS, EQ, *, 2, 2;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-ACQ_TRKRX.AZ_SENSITIVITY, 0x1C, ;
	param 1, f, 2.1, A, 3;
		val -5.0, +5.0;
		    set  ch00, w0, b0, w0, b0, 10;
			prechktbl 1*2;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
				prechk 2, S-ACQ_TRKRX.ADJUST_MODE_SELECT, EQ, EXTERNAL, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.AZ_SENSITIVITY_ANS, EQ, *, 2, 2;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-ACQ_TRKRX.EL_SENSITIVITY, 0x1D, ;
	param 1, f, 2.1, A, 3;
		val -5.0, +5.0;
		    set  ch00, w0, b0, w0, b0, 10;
			prechktbl 1*2;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
				prechk 2, S-ACQ_TRKRX.ADJUST_MODE_SELECT, EQ, EXTERNAL, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.EL_SENSITIVITY_ANS, EQ, *, 2, 2;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-ACQ_TRKRX.Ach_ANGLE_OFFSET, 0x1E, ;
	param 1, f, 3.1, A, 4;
		val 0.0, 359.9;
		    set  ch00, w0, b0, w0, b0, 10;
			prechktbl 1*2;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
				prechk 2, S-ACQ_TRKRX.ADJUST_MODE_SELECT, EQ, EXTERNAL, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.Ach_ANGLE_OFFSET_ANS, EQ, *, 2, 2;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-ACQ_TRKRX.Bch_ANGLE_OFFSET, 0x1F, ;
	param 1, f, 3.1, A, 4;
		val 0.0, 359.9;
		    set  ch00, w0, b0, w0, b0, 10;
			prechktbl 1*2;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
				prechk 2, S-ACQ_TRKRX.ADJUST_MODE_SELECT, EQ, EXTERNAL, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.Bch_ANGLE_OFFSET_ANS, EQ, *, 2, 2;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-ACQ_TRKRX.ANGLE_POLARITY, 0x20, ;
	param 1, s, , S, ;
		sts NORMAL;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.ANGLE_POLARITY_ANS, EQ, NORMAL, 2, 2;
			endofverify;
		endofsts;
		sts INVERT;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.ANGLE_POLARITY_ANS, EQ, INVERT, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-ACQ_TRKRX.ANTENNA_QD, 0x21, ;
	param 1, s, , S, ;
		sts ENABLE;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.ANT_QD_STATUS, EQ, ENABLE, 2, 2;
			endofverify;
		endofsts;
		sts DISABLE;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.ANT_QD_STATUS, EQ, DISABLE, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-ACQ_TRKRX.SPEC_IF_SEL, 0x25, ;
	param 1, s, , S, ;
		sts Ach;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.SPECTRUM_SEL_ANS, EQ, SUM_Ach, 2, 2;
			endofverify;
		endofsts;
		sts Bch;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.SPECTRUM_SEL_ANS, EQ, SUM_Bch, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-ACQ_TRKRX.SPEC_MEASURE_BW, 0x26, ;
	param 1, s, , S, ;
		sts 31.25kHz;
		    set  ch00, w0, b0, w3, b7, 0x0000000b;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.SPEC_MEASURE_BW_ANS, EQ, 31.25kHz, 2, 2;
			endofverify;
		endofsts;
		sts 62.5kHz;
		    set  ch00, w0, b0, w3, b7, 0x0000000a;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.SPEC_MEASURE_BW_ANS, EQ, 62.5kHz, 2, 2;
			endofverify;
		endofsts;
		sts 125kHz;
		    set  ch00, w0, b0, w3, b7, 0x00000009;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.SPEC_MEASURE_BW_ANS, EQ, 125kHz, 2, 2;
			endofverify;
		endofsts;
		sts 250kHz;
		    set  ch00, w0, b0, w3, b7, 0x00000008;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.SPEC_MEASURE_BW_ANS, EQ, 250kHz, 2, 2;
			endofverify;
		endofsts;
		sts 500kHz;
		    set  ch00, w0, b0, w3, b7, 0x00000007;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.SPEC_MEASURE_BW_ANS, EQ, 500kHz, 2, 2;
			endofverify;
		endofsts;
		sts 1MHz;
		    set  ch00, w0, b0, w3, b7, 0x00000006;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.SPEC_MEASURE_BW_ANS, EQ, 1MHz, 2, 2;
			endofverify;
		endofsts;
		sts 2MHz;
		    set  ch00, w0, b0, w3, b7, 0x00000005;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.SPEC_MEASURE_BW_ANS, EQ, 2MHz, 2, 2;
			endofverify;
		endofsts;
		sts 4MHz;
		    set  ch00, w0, b0, w3, b7, 0x00000004;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.SPEC_MEASURE_BW_ANS, EQ, 4MHz, 2, 2;
			endofverify;
		endofsts;
		sts 8MHz;
		    set  ch00, w0, b0, w3, b7, 0x00000003;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.SPEC_MEASURE_BW_ANS, EQ, 8MHz, 2, 2;
			endofverify;
		endofsts;
		sts 16MHz;
		    set  ch00, w0, b0, w3, b7, 0x00000002;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.SPEC_MEASURE_BW_ANS, EQ, 16MHz, 2, 2;
			endofverify;
		endofsts;
		sts 32MHz;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.SPEC_MEASURE_BW_ANS, EQ, 32MHz, 2, 2;
			endofverify;
		endofsts;
		sts 64MHz;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.SPEC_MEASURE_BW_ANS, EQ, 64MHz, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-ACQ_TRKRX.SPEC_FREQ_OFFSET, 0x27, ;
	param 1, d, 5, B, 5;
		val -4000, +4000;
		    set  ch00, w0, b0, w0, b0, 0b1;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.SPEC_FRE_OFFSET_ANS, EQ, *, 2, 2;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-ACQ_TRKRX.PREDICTION_MODE, 0x2B, ;
	param 1, s, , S, ;
		sts Packet;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.PREDICTION_MODE_ANS, EQ, Packet, 2, 2;
			endofverify;
		endofsts;
//		sts File;
//		    set  ch00, w0, b0, w3, b7, 0x00000001;
//			prechktbl 1;
//				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
//			endofprechk;
//			verifytbl 1;
//				verify 1, S-ACQ_TRKRX.PREDICTION_MODE_ANS, EQ, File, 2, 2;
//			endofverify;
//		endofsts;
	endofparam;
end;

ctl S-ACQ_TRKRX.DEM_DOPPLER, 0x2C, ;
	param 1, s, , S, ;
		sts OFF;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.DEM_DOPPLER_ANS, EQ, OFF, 2, 2;
			endofverify;
		endofsts;
		sts ON;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.DEM_DOPPLER_ANS, EQ, ON, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-ACQ_TRKRX.LEAP_YEAR/SECOND, 0x2D, ;
	param 1, s, , S, ;
		sts Y:OFF/S:OFF;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.LEAP_YEAR/SECOND_ANS, EQ, Y:OFF/S:OFF, 2, 2;
			endofverify;
		endofsts;
		sts Y:ON/S:OFF;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.LEAP_YEAR/SECOND_ANS, EQ, Y:ON/S:OFF, 2, 2;
			endofverify;
		endofsts;
		sts Y:OFF/S:ON;
		    set  ch00, w0, b0, w3, b7, 0x00000002;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.LEAP_YEAR/SECOND_ANS, EQ, Y:OFF/S:ON, 2, 2;
			endofverify;
		endofsts;
		sts Y:ON/S:ON;
		    set  ch00, w0, b0, w3, b7, 0x00000003;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.LEAP_YEAR/SECOND_ANS, EQ, Y:ON/S:ON, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-ACQ_TRKRX.PWB_RESET, 0x2F, ;
	param 1, s, ,S, ;
		sts RESET;
        	set  ch00, w0, b0, w3, b7, 0x00000001;
		endofsts;
    endofparam;
end;

/***** 2017/03/09 as-04 ファイル方式アンテナ予報値系は、臼田内之浦では使用しないため削除 *******/

//ctl S-ACQ_TRKRX.TRP_RATIO, 0x32, ;
//	param 1, s, , S, ;
//		sts INCOH;
//		    set  ch00, w0, b0, w3, b7, 0x00000000;
//			prechktbl 1;
//				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
//			endofprechk;
//			verifytbl 1;
//				verify 1, S-ACQ_TRKRX.TRP_RATIO_ANS, EQ, INCOH, 2, 2;
//			endofverify;
//		endofsts;
//		sts COH-240/221;
//		    set  ch00, w0, b0, w3, b7, 0x00000001;
//			prechktbl 1;
//				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
//			endofprechk;
//			verifytbl 1;
//				verify 1, S-ACQ_TRKRX.TRP_RATIO_ANS, EQ, COH-240/221, 2, 2;
//			endofverify;
//		endofsts;
//		sts COH-900/221;
//		    set  ch00, w0, b0, w3, b7, 0x00000002;
//			prechktbl 1;
//				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
//			endofprechk;
//			verifytbl 1;
//				verify 1, S-ACQ_TRKRX.TRP_RATIO_ANS, EQ, COH-900/221, 2, 2;
//			endofverify;
//		endofsts;
//		sts COH-880/749;
//		    set  ch00, w0, b0, w3, b7, 0x00000003;
//			prechktbl 1;
//				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
//			endofprechk;
//			verifytbl 1;
//				verify 1, S-ACQ_TRKRX.TRP_RATIO_ANS, EQ, COH-880/749, 2, 2;
//			endofverify;
//		endofsts;
//	endofparam;
//end;

//ctl S-ACQ_TRKRX.1/2WAY_MODE, 0x33, ;
//	param 1, s, , S, ;
//		sts 1WAY;
//		    set  ch00, w0, b0, w3, b7, 0x00000001;
//			prechktbl 1;
//				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
//			endofprechk;
//			verifytbl 1;
//				verify 1, S-ACQ_TRKRX.1/2WAY_MODE_ANS, EQ, 1WAY, 2, 2;
//			endofverify;
//		endofsts;
//		sts 2WAY;
//		    set  ch00, w0, b0, w3, b7, 0x00000000;
//			prechktbl 1;
//				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
//			endofprechk;
//			verifytbl 1;
//				verify 1, S-ACQ_TRKRX.1/2WAY_MODE_ANS, EQ, 2WAY, 2, 2;
//			endofverify;
//		endofsts;
//	endofparam;
//end;

//ctl S-ACQ_TRKRX.UP_REF_FREQ, 0x34, ;
//	param 1, f, 11.1, U, 11;
//		val 1000000000.0, 14000000000.0;
//		    set  ch00, w0, b0, w0, b0, 10;
//			prechktbl 1;
//				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
//			endofprechk;
//			verifytbl 1;
//				verify 1, S-ACQ_TRKRX.UP_REF_FREQ_ANS, EQ, *, 2, 2;
//			endofverify;
//		endofval;
//	endofparam;
//end;

//ctl S-ACQ_TRKRX.DOWN_REF_FREQ, 0x35, ;
//	param 1, f, 11.1, U, 11;
//		val 1000000000.0, 14000000000.0;
//		    set  ch00, w0, b0, w0, b0, 10;
//			prechktbl 1;
//				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
//			endofprechk;
//			verifytbl 1;
//				verify 1, S-ACQ_TRKRX.DOWN_REF_FREQ_ANS, EQ, *, 2, 2;
//			endofverify;
//		endofval;
//	endofparam;
//end;

//ctl S-ACQ_TRKRX.PREDSET, 0x36, ;
//	param 1, P, 59, Z, ;
//		sts *;
//		endofsts;
//	endofparam;
//end;

/************************************** ここまで ***********************************************/

ctl S-ACQ_TRKRX.POWER_OFF, 0x39, ;
	param 1, s, ,S, ;
		sts POWER_OFF;
        	set  ch00, w0, b0, w3, b7, 0x00000001;
		endofsts;
    endofparam;
end;

ctl S-ACQ_TRKRX.CHG_CONT_MODE, 0x3A, ;
	param 1, s, ,S, ;
		sts REMOTE;
        	set  ch00, w0, b0, w3, b7, 0x00000001;
		endofsts;
    endofparam;
end;


// 2017/05/11 as-06 ドップラ補償計算用に追加(追尾状況画面に表示)
ctl S-ACQ_TRKRX.CTRL_1/2WAY_MODE, 0x33, ;
	param 1, s, , S, ;
		sts 1WAY;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.CTRL_1/2WAY_MODE, EQ, 1WAY, 2, 2;
			endofverify;
		endofsts;
		sts 2WAY;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, S-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-ACQ_TRKRX.CTRL_1/2WAY_MODE, EQ, 2WAY, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;
 //----------------------------------------------------------------------
 // データベース名    ：内之浦局 S-CALOUT制御
 // ファイル名        ：s-calout.db
 // 作成日            ：2017/01/05 as-01
 // 履歴              ：Ver1.0.0 2017/03/01 as-01
 //----------------------------------------------------------------------
/* S-CALOUT (CONT) */

ctl S-CALOUT.CONTROL_MODE, 0xFFFF0002, ;
	param 1, s, , S, ;
		sts REMOTE;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			verifytbl 1;
				verify 1, S-CALOUT.CONTROL_MODE, EQ, REMOTE, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-CALOUT.SESSION_TIMER, 0xFFFF0010, ; /* 内部制御用。画面表示無し */
    param 1, u, 10, A, 10;
        val 0, 4294967295;
        	set  ch00, w0, b0, w0, b0, 0b1;
        endofval;
    endofparam;
end;

ctl S-CALOUT.RF_OUT_MAIN, 0x00100500, ;
	param 1, s, , S, ;
		sts ON;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, S-CALOUT.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-CALOUT.RF_OUT_MAIN, EQ, ON, 2, 2;
			endofverify;
		endofsts;
		sts OFF;
		    set  ch00, w0, b0, w3, b7, 0x00000002;
			prechktbl 1;
				prechk 1, S-CALOUT.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-CALOUT.RF_OUT_MAIN, EQ, OFF, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-CALOUT.RF_OUT_ACQ, 0x00100501, ;
	param 1, s, , S, ;
		sts ON;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, S-CALOUT.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-CALOUT.RF_OUT_ACQ, EQ, ON, 2, 2;
			endofverify;
		endofsts;
		sts OFF;
		    set  ch00, w0, b0, w3, b7, 0x00000002;
			prechktbl 1;
				prechk 1, S-CALOUT.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-CALOUT.RF_OUT_ACQ, EQ, OFF, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-CALOUT.STEP_ATT, 0x00100120, ;
	param 1, u, 2, A, 2;
		val 0, 85;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, S-CALOUT.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-CALOUT.STEP_ATT, EQ, *, 2, 2;
			endofverify;
		endofval;
	endofparam;
end;

 //----------------------------------------------------------------------
 // データベース名    ：内之浦局 S-DC制御
 // ファイル名        ：s-dc.db
 // 作成日            ：2017/02/13 as-01
 // 履歴              ：Ver1.0.0 2017/03/03 as-03
 //----------------------------------------------------------------------
/* S-DC (CONT)  */

ctl S-DC.CONTROL_MODE, 0xFFFF0002, ;
	param 1, s, , S, ;
		sts REMOTE;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			verifytbl 1;
				verify 1, S-DC.CONTROL_MODE, EQ, REMOTE, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-DC.SESSION_TIMER, 0xFFFF0010, ; /* 内部制御用。画面表示無し */
    param 1, u, 10, A, 10;
        val 0, 4294967295;
        	set  ch00, w0, b0, w0, b0, 0b1;
        endofval;
    endofparam;
end;

ctl S-DC.COH/INCOH_MODE, 0x00100410, ;
	param 1, s, , S, ;
		sts COH;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, S-DC.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-DC.COH/INCOH_MODE, EQ, COH, 2, 2;
			endofverify;
		endofsts;
		sts INCOH;
		    set  ch00, w0, b0, w3, b7, 0x00000002;
			prechktbl 1;
				prechk 1, S-DC.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-DC.COH/INCOH_MODE, EQ, INCOH, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl S-DC.FREQUENCY, 0x00100100, ;/* 2^31以上の値を制御するためにパラメータ入力形式を f にした */
	param 1, f,10.1, U, 10;
		val 2025000000.0, 2300000000.0;
		    set  ch00, w0, b0, w0, b0, 1;
			prechktbl 1;
				prechk 1, S-DC.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-DC.FREQUENCY, EQ, *, 2, 2;
			endofverify;
		endofval;
	endofparam;
end;

ctl S-DC.STEP_ATT, 0x00100120, ;
	param 1, u, 2, A, 2;
		val 0, 35;
		    set  ch00, w0, b0, w0, b0, 1;
			prechktbl 1;
				prechk 1, S-DC.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, S-DC.STEP_ATT, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

 //----------------------------------------------------------------------
 // データベース名    ：内之浦局 SS-TRANS制御
 // ファイル名        ：ss-trans.db
 // 作成日            ：2017/02/13 as-01
 // 履歴              ：Ver1.0.0 2017/03/03 as-03
 //----------------------------------------------------------------------
/* SS-TRANS (CONT)  */

ctl SS-TRANS.CONTROL_MODE, 0xFFFF0002, ;
	param 1, s, , S, ;
		sts REMOTE;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			verifytbl 1;
				verify 1, SS-TRANS.CONTROL_MODE, EQ, REMOTE, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl SS-TRANS.SESSION_TIMER, 0xFFFF0010, ; /* 内部制御用。画面表示無し */
    param 1, u, 10, A, 10;
        val 0, 4294967295;
        	set  ch00, w0, b0, w0, b0, 1;
        endofval;
    endofparam;
end;

ctl SS-TRANS.COH/INCOH_MODE, 0x00100410, ;
	param 1, s, , S, ;
		sts COH;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, SS-TRANS.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, SS-TRANS.COH/INCOH_MODE, EQ, COH, 2, 2;
			endofverify;
		endofsts;
		sts INCOH;
		    set  ch00, w0, b0, w3, b7, 0x00000002;
			prechktbl 1;
				prechk 1, SS-TRANS.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, SS-TRANS.COH/INCOH_MODE, EQ, INCOH, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl SS-TRANS.TX_FREQUENCY, 0x00100100, ;/* 2^31以上の値を制御するためにパラメータ入力形式を f にした */
	param 1, f,10.1, U, 10;
		val 2025000000.0, 2120000000.0;
		    set  ch00, w0, b0, w0, b0, 1;
			prechktbl 1;
				prechk 1, SS-TRANS.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, SS-TRANS.TX_FREQUENCY, EQ, *, 2, 2;
			endofverify;
		endofval;
	endofparam;
end;

ctl SS-TRANS.RX_FREQUENCY, 0x00100200, ;/* 2^31以上の値を制御するためにパラメータ入力形式を f にした */
	param 1, f,10.1, U, 10;
		val 2200000000.0, 2300000000.0;
		    set  ch00, w0, b0, w0, b0, 1;
			prechktbl 1*2;
				prechk 1, SS-TRANS.CONTROL_MODE, EQ, REMOTE, 2;
				prechk 2, SS-TRANS.COH/INCOH_MODE, EQ, INCOH, 2;
			endofprechk;
			verifytbl 1;
				verify 1, SS-TRANS.RX_FREQUENCY, EQ, *, 2, 2;
			endofverify;
		endofval;
	endofparam;
end;

 //----------------------------------------------------------------------
 // データベース名    ：内之浦局 SX-ACQLO制御
 // ファイル名        ：sx-acqlo.db
 // 作成日            ：2017/01/05 as-02
 // 履歴              ：Ver1.0.0 2017/03/03 as-03
 //----------------------------------------------------------------------
/* SX-ACQLO (CONT)  */

ctl SX-ACQLO.CONTROL_MODE, 0xFFFF0002, ;
	param 1, s, , S, ;
		sts REMOTE;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			verifytbl 1;
				verify 1, SX-ACQLO.CONTROL_MODE, EQ, REMOTE, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl SX-ACQLO.SESSION_TIMER, 0xFFFF0010, ; /* 内部制御用。画面表示無し */
    param 1, f,10.1, A, 10;
        val 0, 4294967295;
        	set  ch00, w0, b0, w0, b0, 1;
        endofval;
    endofparam;
end;

ctl SX-ACQLO.COH/INCOH_MODE, 0x00100410, ;
	param 1, s, , S, ;
		sts SS-COH;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, SX-ACQLO.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, SX-ACQLO.COH/INCOH_MODE, EQ, SS-COH, 2, 2;
			endofverify;
		endofsts;
		sts SX-COH(880/221);
		    set  ch00, w0, b0, w3, b7, 0x00000002;
			prechktbl 1;
				prechk 1, SX-ACQLO.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, SX-ACQLO.COH/INCOH_MODE, EQ, SX-COH(880/221), 2, 2;
			endofverify;
		endofsts;
		sts SX-COH(900/221);
		    set  ch00, w0, b0, w3, b7, 0x00000003;
			prechktbl 1;
				prechk 1, SX-ACQLO.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, SX-ACQLO.COH/INCOH_MODE, EQ, SX-COH(900/221), 2, 2;
			endofverify;
		endofsts;
		sts S-INCOH;
		    set  ch00, w0, b0, w3, b7, 0x00000004;
			prechktbl 1;
				prechk 1, SX-ACQLO.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, SX-ACQLO.COH/INCOH_MODE, EQ, S-INCOH, 2, 2;
			endofverify;
		endofsts;
		sts X-INCOH;
		    set  ch00, w0, b0, w3, b7, 0x00000005;
			prechktbl 1;
				prechk 1, SX-ACQLO.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, SX-ACQLO.COH/INCOH_MODE, EQ, X-INCOH, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl SX-ACQLO.FREQUENCY, 0x00100100, ;
	param 1,f,10.1, U, 10;
		val 2025000000, 8500000000;
		    set  ch00, w0, b0, w0, b0, 1;
			prechktbl 1;
				prechk 1, SX-ACQLO.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, SX-ACQLO.FREQUENCY, EQ, *, 2, 2;
			endofverify;
		endofval;
	endofparam;
end;
 //----------------------------------------------------------------------
 // データベース名    ：内之浦局 SX-TRANS制御
 // ファイル名        ：sx-trans.db
 // 作成日            ：2017/01/05 as-02
 // 履歴              ：Ver1.0.0 2017/03/01 as-01
 //----------------------------------------------------------------------
/* SX-TRANS (CONT)  */

ctl SX-TRANS.CONTROL_MODE, 0xFFFF0002, ;
	param 1, s, , S, ;
		sts REMOTE;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			verifytbl 1;
				verify 1, SX-TRANS.CONTROL_MODE, EQ, REMOTE, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl SX-TRANS.SESSION_TIMER, 0xFFFF0010, ; /* 内部制御用。画面表示無し */
    param 1, u, 10, A, 10;
        val 0, 4294967295;
        	set  ch00, w0, b0, w0, b0, 1;
        endofval;
    endofparam;
end;
 //----------------------------------------------------------------------
 // データベース名    ：内之浦局 SX-TRANS_LO制御
 // ファイル名        ：sx-trans_lo.db
 // 作成日            ：2017/02/13 as-02
 // 履歴              ：Ver1.0.0 2017/06/28 as-06
 //----------------------------------------------------------------------
/* SX-TRANS_LO (CONT)  */

ctl SX-TRANS_LO.CONTROL_MODE, 0xFFFF0002, ;
	param 1, s, , S, ;
		sts REMOTE;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			verifytbl 1;
				verify 1, SX-TRANS_LO.CONTROL_MODE, EQ, REMOTE, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl SX-TRANS_LO.SESSION_TIMER,0xFFFF0010, ; /* 内部制御用。画面表示無し */
    param 1, u, 10, A, 10;
        val 0, 4294967295;
        	set  ch00, w0, b0, w0, b0, 1;
        endofval;
    endofparam;
end;

ctl SX-TRANS_LO.XX-COH/INCOH_MODE, 0x00100410, ;
	param 1, s, , S, ;
		sts COH;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, SX-TRANS_LO.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, SX-TRANS_LO.XX-COH/INCOH_MODE, EQ, COH, 2, 2;
			endofverify;
		endofsts;
		sts INCOH;
		    set  ch00, w0, b0, w3, b7, 0x00000002;
			prechktbl 1;
				prechk 1, SX-TRANS_LO.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, SX-TRANS_LO.XX-COH/INCOH_MODE, EQ, INCOH, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl SX-TRANS_LO.SX-COH/INCOH_MODE, 0x00100411, ;
	param 1, s, , S, ;
		sts COH(880/221);
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, SX-TRANS_LO.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, SX-TRANS_LO.SX-COH/INCOH_MODE, EQ, COH(880/221), 2, 2;
			endofverify;
		endofsts;
		sts COH(900/221);
		    set  ch00, w0, b0, w3, b7, 0x00000002;
			prechktbl 1;
				prechk 1, SX-TRANS_LO.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, SX-TRANS_LO.SX-COH/INCOH_MODE, EQ, COH(900/221), 2, 2;
			endofverify;
		endofsts;
		sts INCOH;
		    set  ch00, w0, b0, w3, b7, 0x00000003;
			prechktbl 1;
				prechk 1, SX-TRANS_LO.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, SX-TRANS_LO.SX-COH/INCOH_MODE, EQ, INCOH, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl SX-TRANS_LO.XX-TX_FREQUENCY, 0x00100100, ;
	param 1, f, 10.1, U, 10;
		val 7145000000.0, 7235000000.0;
		    set  ch00, w0, b0, w0, b0, 1;
			prechktbl 1;
				prechk 1, SX-TRANS_LO.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, SX-TRANS_LO.XX-TX_FREQUENCY, EQ, *, 2, 2;
			endofverify;
		endofval;
	endofparam;
end;

ctl SX-TRANS_LO.XX-RX_FREQUENCY, 0x00100200, ;
	param 1, f, 10.1, U, 10;
		val 8400000000.0, 8500000000.0;
		    set  ch00, w0, b0, w0, b0, 1;
			prechktbl 1*2;
				prechk 1, SX-TRANS_LO.CONTROL_MODE, EQ, REMOTE, 2;
				prechk 2, SX-TRANS_LO.XX-COH/INCOH_MODE, EQ, INCOH, 2;
			endofprechk;
			verifytbl 1;
				verify 1, SX-TRANS_LO.XX-RX_FREQUENCY, EQ, *, 2, 2;
			endofverify;
		endofval;
	endofparam;
end;

ctl SX-TRANS_LO.SX-TX_FREQUENCY, 0x00100300, ;
	param 1, f, 10.1, U, 10;
		val 2025000000.0, 2120000000.0;
		    set  ch00, w0, b0, w0, b0, 1;
			prechktbl 1;
				prechk 1, SX-TRANS_LO.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, SX-TRANS_LO.SX-TX_FREQUENCY, EQ, *, 2, 2;
			endofverify;
		endofval;
	endofparam;
end;

ctl SX-TRANS_LO.SX-RX_FREQUENCY, 0x00100400, ;
	param 1, f, 10.1, U, 10;
		val 8400000000.0, 8500000000.0;
		    set  ch00, w0, b0, w0, b0, 1;
			prechktbl 1*2;
				prechk 1, SX-TRANS_LO.CONTROL_MODE, EQ, REMOTE, 2;
				prechk 2, SX-TRANS_LO.SX-COH/INCOH_MODE, EQ, INCOH, 2;
			endofprechk;
			verifytbl 1;
				verify 1, SX-TRANS_LO.SX-RX_FREQUENCY, EQ, *, 2, 2;
			endofverify;
		endofval;
	endofparam;
end;
 //----------------------------------------------------------------------
 // データベース名    ：内之浦局 X-ACQ_TRKRX制御
 // ファイル名        ：x-acq_trkrx.db
 // 作成日            ：2017/02/13 as-02
 // 履歴              ：Ver1.0.0 2017/08/23 as-04
 //----------------------------------------------------------------------
/* X-ACQ_TRKRX (CONT) */

ctl X-ACQ_TRKRX.DIVERSITY_MODE, 0x01, ;
	param 1, s, , S, ;
		sts COMBINE;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.DIVERSITY_MODE_ANS, EQ, COMBINE, 2, 2;
			endofverify;
		endofsts;
		sts Ach;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.DIVERSITY_MODE_ANS, EQ, Ach, 2, 2;
			endofverify;
		endofsts;
		sts Bch;
		    set  ch00, w0, b0, w3, b7, 0x00000002;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.DIVERSITY_MODE_ANS, EQ, Bch, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-ACQ_TRKRX.MOD_FORMAT, 0x02, ;
	param 1, s, , S, ;
		sts PCM-PM;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.MOD_FORMAT_ANS, EQ, PCM-PM, 2, 2;
			endofverify;
		endofsts;
		sts PCM-PSK-PM;
		    set  ch00, w0, b0, w3, b7, 0x00000003;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.MOD_FORMAT_ANS, EQ, PCM-PSK-PM, 2, 2;
			endofverify;
		endofsts;
		sts PCM-BPSK;
		    set  ch00, w0, b0, w3, b7, 0x00000008;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.MOD_FORMAT_ANS, EQ, PCM-BPSK, 2, 2;
			endofverify;
		endofsts;
		sts PCM-QPSK;
		    set  ch00, w0, b0, w3, b7, 0x00000009;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.MOD_FORMAT_ANS, EQ, PCM-QPSK, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-ACQ_TRKRX.DATA_FORMAT, 0x03, ;
	param 1, s, , S, ;
		sts BIPH-S;
		    set  ch00, w0, b0, w3, b7, 0x00000006;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.DATA_FORMAT_ANS, EQ, BIPH-S, 2, 2;
			endofverify;
		endofsts;
		sts BIPH-M;
		    set  ch00, w0, b0, w3, b7, 0x00000005;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.DATA_FORMAT_ANS, EQ, BIPH-M, 2, 2;
			endofverify;
		endofsts;
		sts BIPH-L;
		    set  ch00, w0, b0, w3, b7, 0x00000004;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.DATA_FORMAT_ANS, EQ, BIPH-L, 2, 2;
			endofverify;
		endofsts;
		sts NRZ-S;
		    set  ch00, w0, b0, w3, b7, 0x00000002;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.DATA_FORMAT_ANS, EQ, NRZ-S, 2, 2;
			endofverify;
		endofsts;
		sts NRZ-M;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.DATA_FORMAT_ANS, EQ, NRZ-M, 2, 2;
			endofverify;
		endofsts;
		sts NRZ-L;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.DATA_FORMAT_ANS, EQ, NRZ-L, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-ACQ_TRKRX.VITERBI_DECODE, 0x04, ;
	param 1, s, , S, ;
		sts OFF;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.VITERBI_DECODE_ANS, EQ, OFF, 2, 2;
			endofverify;
		endofsts;
		sts ON(JPL);
		    set  ch00, w0, b0, w3, b7, 0x00000002;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.VITERBI_DECODE_ANS, EQ, ON(JPL), 2, 2;
			endofverify;
		endofsts;
		sts ON(CCSDS);
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.VITERBI_DECODE_ANS, EQ, ON(CCSDS), 2, 2;
			endofverify;
		endofsts;
		sts ON(ESA);
		    set  ch00, w0, b0, w3, b7, 0x00000003;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.VITERBI_DECODE_ANS, EQ, ON(ESA), 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-ACQ_TRKRX.DIFF_DECODE, 0x05, ;
	param 1, s, , S, ;
		sts ON;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.DIFF_DECODE_ANS, EQ, ON, 2, 2;
			endofverify;
		endofsts;
		sts OFF;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.DIFF_DECODE_ANS, EQ, OFF, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-ACQ_TRKRX.FILTER_STYLE, 0x06, ;
	param 1, s, , S, ;
		sts LINEAR_PHASE;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.FILTER_STYLE_ANS, EQ, LINEAR_PHASE, 2, 2;
			endofverify;
		endofsts;
		sts ROOT_NYQ;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.FILTER_STYLE_ANS, EQ, ROOT_NYQ, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-ACQ_TRKRX.IF_CENTER_FREQ, 0x07, ;
    param 1, u, 8, A, 8;
        val 66000000, 74000000;
            set  ch00, w0, b0, w0, b0,1;
        	prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
            verifytbl 1;
                verify 1, X-ACQ_TRKRX.IF_CENTER_FREQ_ANS, EQ, *, 2, 2;
            endofverify;
        endofval;
    endofparam;
end;

ctl X-ACQ_TRKRX.BIT_RATE, 0x08, ;
	param 1, f, 7.3, U, 10.3;
		val 100.000, 2400000.000;
		    set  ch00, w0, b0, w0, b0, 1000;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.BIT_RATE_ANS, EQ, *, 2, 2;
			endofverify;
		endofval;
	endofparam;
end;

ctl X-ACQ_TRKRX.SUB_CARR, 0x09, ;
	param 1, f, 7.3, U, 10.3;
		val 1000.000, 2400000.000;
		    set  ch00, w0, b0, w0, b0, 1000;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.SUB_CARR_ANS, EQ, *, 2, 2;
			endofverify;
		endofval;
	endofparam;
end;

ctl X-ACQ_TRKRX.TLM_MOD_INDEX, 0x0A, ;
	param 1, f, 1.2, A, 2;
		val 0.00, 1.50;
		    set  ch00, w0, b0, w0, b0, 20;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.TLM_MOD_INDEX_ANS, EQ, *, 2, 2;
			endofverify;
		endofval;
	endofparam;
end;

ctl X-ACQ_TRKRX.DEM_IQ_POLARITY, 0x0B, ;
	param 1, s, , S, ;
		sts THROUGH;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.DEM_IQ_POLARITY_ANS, EQ, THROUGH, 2, 2;
			endofverify;
		endofsts;
		sts I/Q_SWAP;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.DEM_IQ_POLARITY_ANS, EQ, I/Q_SWAP, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-ACQ_TRKRX.CARR_LOOP_BAND, 0x0E, ;
	param 1, s, , S, ;
		sts 1kHz;
		    set  ch00, w0, b0, w3, b7, 0x0000000a;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.CARR_LOOP_BAND, EQ, 1kHz, 2, 60;
			endofverify;
		endofsts;
		sts 300Hz;
		    set  ch00, w0, b0, w3, b7, 0x00000009;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.CARR_LOOP_BAND, EQ, 300Hz, 2, 60;
			endofverify;
		endofsts;
		sts 100Hz;
		    set  ch00, w0, b0, w3, b7, 0x00000008;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.CARR_LOOP_BAND, EQ, 100Hz, 2, 60;
			endofverify;
		endofsts;
		sts 30Hz;
		    set  ch00, w0, b0, w3, b7, 0x00000007;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.CARR_LOOP_BAND, EQ, 30Hz, 2, 60;
			endofverify;
		endofsts;
		sts WIDE;
			set  ch00, w0, b0, w3, b7, 0x0000000a;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.CARR_LOOP_BAND, EQ, *, 2, 60;
			endofverify;
		endofsts;
		sts MEDIUM;
		    set  ch00, w0, b0, w3, b7, 0x00000009;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.CARR_LOOP_BAND, EQ, *, 2, 60;
			endofverify;
		endofsts;
		sts NARROW;
			set  ch00, w0, b0, w3, b7, 0x00000008;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.CARR_LOOP_BAND, EQ, *, 2, 60;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-ACQ_TRKRX.AGC_LOOP_BAND, 0x0F, ;
	param 1, s, , S, ;
		sts 100Hz;
		    set  ch00, w0, b0, w3, b7, 0x0000000a;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.AGC_LOOP_BAND_ANS, EQ, 100Hz, 2, 60;
			endofverify;
		endofsts;
		sts 30Hz;
		    set  ch00, w0, b0, w3, b7, 0x00000009;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.AGC_LOOP_BAND_ANS, EQ, 30Hz, 2, 60;
			endofverify;
		endofsts;
		sts 10Hz;
		    set  ch00, w0, b0, w3, b7, 0x00000008;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.AGC_LOOP_BAND_ANS, EQ, 10Hz, 2, 60;
			endofverify;
		endofsts;
		sts 3Hz;
		    set  ch00, w0, b0, w3, b7, 0x00000007;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.AGC_LOOP_BAND_ANS, EQ, 3Hz, 2, 60;
			endofverify;
		endofsts;
		sts WIDE;
		    set  ch00, w0, b0, w3, b7, 0x0000000a;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.AGC_LOOP_BAND_ANS, EQ, *, 2, 60;
			endofverify;
		endofsts;
		sts MEDIUM;
		    set  ch00, w0, b0, w3, b7, 0x00000009;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.AGC_LOOP_BAND_ANS, EQ, *, 2, 60;
			endofverify;
		endofsts;
		sts NARROW;
		    set  ch00, w0, b0, w3, b7, 0x00000008;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.AGC_LOOP_BAND_ANS, EQ, *, 2, 60;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-ACQ_TRKRX.BIT_LOOP_BAND, 0x10, ;
	param 1, s, , S, ;
		sts NARROW;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.BIT_LOOP_BAND_ANS, EQ, NARROW, 2, 60;
			endofverify;
		endofsts;
		sts MEDIUM;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.BIT_LOOP_BAND_ANS, EQ, MEDIUM, 2, 60;
			endofverify;
		endofsts;
		sts WIDE;
		    set  ch00, w0, b0, w3, b7, 0x00000002;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.BIT_LOOP_BAND_ANS, EQ, WIDE, 2, 60;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-ACQ_TRKRX.CARR_REJECT, 0x11, ;
	param 1, s, ,S, ;
		sts REJECT;
        	set  ch00, w0, b0, w3, b7, 0x00000001;
		endofsts;
    endofparam;
end;

ctl X-ACQ_TRKRX.SYMBOL_REJECT, 0x12, ;
	param 1, s, ,S, ;
		sts REJECT;
        	set  ch00, w0, b0, w3, b7, 0x00000001;
		endofsts;
    endofparam;
end;

ctl X-ACQ_TRKRX.ADJUST_MODE_SELECT, 0x18, ;
	param 1, s, , S, ;
		sts INTERNAL;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.ADJUST_MODE_SELECT, EQ, INTERNAL, 2, 2;
			endofverify;
		endofsts;
		sts EXTERNAL;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.ADJUST_MODE_SELECT, EQ, EXTERNAL, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-ACQ_TRKRX.ANGLE_PARAM_SAVE, 0x19, ;
	param 1, s, ,S, ;
		sts SAVE;
			set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1*2;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
				prechk 2, X-ACQ_TRKRX.ADJUST_MODE_SELECT, EQ, EXTERNAL, 2;
			endofprechk;
		endofsts;
	endofparam;
end;

ctl X-ACQ_TRKRX.OPERATION, 0x1A, ;
	param 1, s, , S, ;
	
		sts NORMAL1;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.OPERATION_ANS, EQ, NORMAL1, 2, 2;
			endofverify;
		endofsts;
		
	
		sts NORMAL2;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.OPERATION_ANS, EQ, NORMAL2, 2, 2;
			endofverify;
		endofsts;
		
	
		sts NORMAL3;
		    set  ch00, w0, b0, w3, b7, 0x00000002;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.OPERATION_ANS, EQ, NORMAL3, 2, 2;
			endofverify;
		endofsts;
		
	
		sts NORMAL4;
		    set  ch00, w0, b0, w3, b7, 0x00000003;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.OPERATION_ANS, EQ, NORMAL4, 2, 2;
			endofverify;
		endofsts;
		

		sts CAL_AZ_PEAK1;
		    set  ch00, w0, b0, w3, b7, 0x00000004;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.OPERATION_ANS, EQ, CAL_AZ_PEAK1, 2, 2;
			endofverify;
		endofsts;

		sts CAL_AZ_PEAK2;
		    set  ch00, w0, b0, w3, b7, 0x00000005;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.OPERATION_ANS, EQ, CAL_AZ_PEAK2, 2, 2;
			endofverify;
		endofsts;

		sts CAL_AZ_PEAK3;
		    set  ch00, w0, b0, w3, b7, 0x00000006;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.OPERATION_ANS, EQ, CAL_AZ_PEAK3, 2, 2;
			endofverify;
		endofsts;

		sts CAL_AZ_PEAK4;
		    set  ch00, w0, b0, w3, b7, 0x00000007;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.OPERATION_ANS, EQ, CAL_AZ_PEAK4, 2, 2;
			endofverify;
		endofsts;


		sts CAL_EL_PEAK1;
		    set  ch00, w0, b0, w3, b7, 0x00000008;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.OPERATION_ANS, EQ, CAL_EL_PEAK1, 2, 2;
			endofverify;
		endofsts;

		sts CAL_EL_PEAK2;
		    set  ch00, w0, b0, w3, b7, 0x00000009;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.OPERATION_ANS, EQ, CAL_EL_PEAK2, 2, 2;
			endofverify;
		endofsts;

		sts CAL_EL_PEAK3;
		    set  ch00, w0, b0, w3, b7, 0x0000000A;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.OPERATION_ANS, EQ, CAL_EL_PEAK3, 2, 2;
			endofverify;
		endofsts;

		sts CAL_EL_PEAK4;
		    set  ch00, w0, b0, w3, b7, 0x0000000B;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.OPERATION_ANS, EQ, CAL_EL_PEAK4, 2, 2;
			endofverify;
		endofsts;


	endofparam;
end;

ctl X-ACQ_TRKRX.ANGLE_FILE_Fd, 0x1B, ;
	param 1, f, 5.1, U, 6.1;
		val 2200.0, 12300.0;
		    set  ch00, w0, b0, w0, b0, 10;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.ANGLE_FILE_Fd_ANS, EQ, *, 2, 2;
			endofverify;
		endofval;
	endofparam;
end;

ctl X-ACQ_TRKRX.AZ_SENSITIVITY, 0x1C, ;
	param 1, f, 2.1, A, 3;
		val -5.0, +5.0;
		    set  ch00, w0, b0, w0, b0, 10;
			prechktbl 1*2;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
				prechk 2, X-ACQ_TRKRX.ADJUST_MODE_SELECT, EQ, EXTERNAL, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.AZ_SENSITIVITY_ANS, EQ, *, 2, 2;
			endofverify;
		endofval;
	endofparam;
end;

ctl X-ACQ_TRKRX.EL_SENSITIVITY, 0x1D, ;
	param 1, f, 2.1, A, 3;
		val -5.0, +5.0;
		    set  ch00, w0, b0, w0, b0, 10;
			prechktbl 1*2;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
				prechk 2, X-ACQ_TRKRX.ADJUST_MODE_SELECT, EQ, EXTERNAL, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.EL_SENSITIVITY_ANS, EQ, *, 2, 2;
			endofverify;
		endofval;
	endofparam;
end;

ctl X-ACQ_TRKRX.Ach_ANGLE_OFFSET, 0x1E, ;
	param 1, f, 3.1, A, 4;
		val 0.0, 359.9;
		    set  ch00, w0, b0, w0, b0, 10;
			prechktbl 1*2;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
				prechk 2, X-ACQ_TRKRX.ADJUST_MODE_SELECT, EQ, EXTERNAL, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.Ach_ANGLE_OFFSET_ANS, EQ, *, 2, 2;
			endofverify;
		endofval;
	endofparam;
end;

ctl X-ACQ_TRKRX.Bch_ANGLE_OFFSET, 0x1F, ;
	param 1, f, 3.1, A, 4;
		val 0.0, 359.9;
		    set  ch00, w0, b0, w0, b0, 10;
			prechktbl 1*2;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
				prechk 2, X-ACQ_TRKRX.ADJUST_MODE_SELECT, EQ, EXTERNAL, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.Bch_ANGLE_OFFSET_ANS, EQ, *, 2, 2;
			endofverify;
		endofval;
	endofparam;
end;

ctl X-ACQ_TRKRX.ANGLE_POLARITY, 0x20, ;
	param 1, s, , S, ;
		sts NORMAL;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.ANGLE_POLARITY_ANS, EQ, NORMAL, 2, 2;
			endofverify;
		endofsts;
		sts INVERT;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.ANGLE_POLARITY_ANS, EQ, INVERT, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-ACQ_TRKRX.ANTENNA_QD, 0x21, ;
	param 1, s, , S, ;
		sts ENABLE;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.ANT_QD_STATUS, EQ, ENABLE, 2, 2;
			endofverify;
		endofsts;
		sts DISABLE;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.ANT_QD_STATUS, EQ, DISABLE, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-ACQ_TRKRX.SPEC_IF_SEL, 0x25, ;
	param 1, s, , S, ;
		sts Ach;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.SPECTRUM_SEL_ANS, EQ, SUM_Ach, 2, 2;
			endofverify;
		endofsts;
		sts Bch;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.SPECTRUM_SEL_ANS, EQ, SUM_Bch, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-ACQ_TRKRX.SPEC_MEASURE_BW, 0x26, ;
	param 1, s, , S, ;
		sts 31.25kHz;
		    set  ch00, w0, b0, w3, b7, 0x0000000b;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.SPEC_MEASURE_BW_ANS, EQ, 31.25kHz, 2, 2;
			endofverify;
		endofsts;
		sts 62.5kHz;
		    set  ch00, w0, b0, w3, b7, 0x0000000a;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.SPEC_MEASURE_BW_ANS, EQ, 62.5kHz, 2, 2;
			endofverify;
		endofsts;
		sts 125kHz;
		    set  ch00, w0, b0, w3, b7, 0x00000009;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.SPEC_MEASURE_BW_ANS, EQ, 125kHz, 2, 2;
			endofverify;
		endofsts;
		sts 250kHz;
		    set  ch00, w0, b0, w3, b7, 0x00000008;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.SPEC_MEASURE_BW_ANS, EQ, 250kHz, 2, 2;
			endofverify;
		endofsts;
		sts 500kHz;
		    set  ch00, w0, b0, w3, b7, 0x00000007;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.SPEC_MEASURE_BW_ANS, EQ, 500kHz, 2, 2;
			endofverify;
		endofsts;
		sts 1MHz;
		    set  ch00, w0, b0, w3, b7, 0x00000006;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.SPEC_MEASURE_BW_ANS, EQ, 1MHz, 2, 2;
			endofverify;
		endofsts;
		sts 2MHz;
		    set  ch00, w0, b0, w3, b7, 0x00000005;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.SPEC_MEASURE_BW_ANS, EQ, 2MHz, 2, 2;
			endofverify;
		endofsts;
		sts 4MHz;
		    set  ch00, w0, b0, w3, b7, 0x00000004;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.SPEC_MEASURE_BW_ANS, EQ, 4MHz, 2, 2;
			endofverify;
		endofsts;
		sts 8MHz;
		    set  ch00, w0, b0, w3, b7, 0x00000003;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.SPEC_MEASURE_BW_ANS, EQ, 8MHz, 2, 2;
			endofverify;
		endofsts;
		sts 16MHz;
		    set  ch00, w0, b0, w3, b7, 0x00000002;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.SPEC_MEASURE_BW_ANS, EQ, 16MHz, 2, 2;
			endofverify;
		endofsts;
		sts 32MHz;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.SPEC_MEASURE_BW_ANS, EQ, 32MHz, 2, 2;
			endofverify;
		endofsts;
		sts 64MHz;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.SPEC_MEASURE_BW_ANS, EQ, 64MHz, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-ACQ_TRKRX.SPEC_FREQ_OFFSET, 0x27, ;
	param 1, d, 5, B, 5;
		val -4000, +4000;
		    set  ch00, w0, b0, w0, b0, 1;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.SPEC_FRE_OFFSET_ANS, EQ, *, 2, 2;
			endofverify;
		endofval;
	endofparam;
end;

ctl X-ACQ_TRKRX.PREDICTION_MODE, 0x2B, ;
	param 1, s, , S, ;
		sts Packet;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.PREDICTION_MODE_ANS, EQ, Packet, 2, 2;
			endofverify;
		endofsts;
//		sts File;
//		    set  ch00, w0, b0, w3, b7, 0x00000001;
//			prechktbl 1;
//				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
//			endofprechk;
//			verifytbl 1;
//				verify 1, X-ACQ_TRKRX.PREDICTION_MODE_ANS, EQ, File, 2, 2;
//			endofverify;
//		endofsts;
	endofparam;
end;

ctl X-ACQ_TRKRX.DEM_DOPPLER, 0x2C, ;
	param 1, s, , S, ;
		sts OFF;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.DEM_DOPPLER_ANS, EQ, OFF, 2, 2;
			endofverify;
		endofsts;
		sts ON;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.DEM_DOPPLER_ANS, EQ, ON, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-ACQ_TRKRX.LEAP_YEAR/SECOND, 0x2D, ;
	param 1, s, , S, ;
		sts Y:OFF/S:OFF;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.LEAP_YEAR/SECOND_ANS, EQ, Y:OFF/S:OFF, 2, 2;
			endofverify;
		endofsts;
		sts Y:ON/S:OFF;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.LEAP_YEAR/SECOND_ANS, EQ, Y:ON/S:OFF, 2, 2;
			endofverify;
		endofsts;
		sts Y:OFF/S:ON;
		    set  ch00, w0, b0, w3, b7, 0x00000002;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.LEAP_YEAR/SECOND_ANS, EQ, Y:OFF/S:ON, 2, 2;
			endofverify;
		endofsts;
		sts Y:ON/S:ON;
		    set  ch00, w0, b0, w3, b7, 0x00000003;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.LEAP_YEAR/SECOND_ANS, EQ, Y:ON/S:ON, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-ACQ_TRKRX.PWB_RESET, 0x2F, ;
	param 1, s, ,S, ;
		sts RESET;
        	set  ch00, w0, b0, w3, b7, 0x00000001;
		endofsts;
    endofparam;
end;

/***** 2017/03/09 as-04 ファイル方式アンテナ予報値系は、臼田内之浦では使用しないため削除 *******/

//ctl X-ACQ_TRKRX.TRP_RATIO, 0x32, ;
//	param 1, s, , S, ;
//		sts INCOH;
//		    set  ch00, w0, b0, w3, b7, 0x00000000;
//			prechktbl 1;
//				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
//			endofprechk;
//			verifytbl 1;
//				verify 1, X-ACQ_TRKRX.TRP_RATIO_ANS, EQ, INCOH, 2, 2;
//			endofverify;
//		endofsts;
//		sts COH-240/221;
//		    set  ch00, w0, b0, w3, b7, 0x00000001;
//			prechktbl 1;
//				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
//			endofprechk;
//			verifytbl 1;
//				verify 1, X-ACQ_TRKRX.TRP_RATIO_ANS, EQ, COH-240/221, 2, 2;
//			endofverify;
//		endofsts;
//		sts COH-900/221;
//		    set  ch00, w0, b0, w3, b7, 0x00000002;
//			prechktbl 1;
//				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
//			endofprechk;
//			verifytbl 1;
//				verify 1, X-ACQ_TRKRX.TRP_RATIO_ANS, EQ, COH-900/221, 2, 2;
//			endofverify;
//		endofsts;
//		sts COH-880/749;
//		    set  ch00, w0, b0, w3, b7, 0x00000003;
//			prechktbl 1;
//				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
//			endofprechk;
//			verifytbl 1;
//				verify 1, X-ACQ_TRKRX.TRP_RATIO_ANS, EQ, COH-880/749, 2, 2;
//			endofverify;
//		endofsts;
//	endofparam;
//end;

//ctl X-ACQ_TRKRX.1/2WAY_MODE, 0x33, ;
//	param 1, s, , S, ;
//		sts 1WAY;
//		    set  ch00, w0, b0, w3, b7, 0x00000001;
//			prechktbl 1;
//				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
//			endofprechk;
//			verifytbl 1;
//				verify 1, X-ACQ_TRKRX.1/2WAY_MODE_ANS, EQ, 1WAY, 2, 2;
//			endofverify;
//		endofsts;
//		sts 2WAY;
//		    set  ch00, w0, b0, w3, b7, 0x00000000;
//			prechktbl 1;
//				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
//			endofprechk;
//			verifytbl 1;
//				verify 1, X-ACQ_TRKRX.1/2WAY_MODE_ANS, EQ, 2WAY, 2, 2;
//			endofverify;
//		endofsts;
//	endofparam;
//end;

//ctl X-ACQ_TRKRX.UP_REF_FREQ, 0x34, ;
//	param 1, f, 11.1, U, 11;
//		val 1000000000.0, 14000000000.0;
//		    set  ch00, w0, b0, w0, b0, 10;
//			prechktbl 1;
//				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
//			endofprechk;
//			verifytbl 1;
//				verify 1, X-ACQ_TRKRX.UP_REF_FREQ_ANS, EQ, *, 2, 2;
//			endofverify;
//		endofval;
//	endofparam;
//end;

//ctl X-ACQ_TRKRX.DOWN_REF_FREQ, 0x35, ;
//	param 1, f, 11.1, U, 11;
//		val 1000000000.0, 14000000000.0;
//		    set  ch00, w0, b0, w0, b0, 10;
//			prechktbl 1;
//				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
//			endofprechk;
//			verifytbl 1;
//				verify 1, X-ACQ_TRKRX.DOWN_REF_FREQ_ANS, EQ, *, 2, 2;
//			endofverify;
//		endofval;
//	endofparam;
//end;

//ctl X-ACQ_TRKRX.PREDSET, 0x36, ;
//	param 1, P, 59, Z, ;
//		sts *;
//		endofsts;
//	endofparam;
//end;

/************************************** ここまで ***********************************************/

ctl X-ACQ_TRKRX.POWER_OFF, 0x39, ;
	param 1, s, ,S, ;
		sts POWER_OFF;
        	set  ch00, w0, b0, w3, b7, 0x00000001;
		endofsts;
    endofparam;
end;

ctl X-ACQ_TRKRX.CHG_CONT_MODE, 0x3A, ;
	param 1, s, ,S, ;
		sts REMOTE;
        	set  ch00, w0, b0, w3, b7, 0x00000001;
		endofsts;
    endofparam;
end;


// 2017/05/11 as-06 ドップラ補償計算用に追加(追尾状況画面に表示)
ctl X-ACQ_TRKRX.CTRL_1/2WAY_MODE, 0x33, ;
	param 1, s, , S, ;
		sts 1WAY;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.CTRL_1/2WAY_MODE, EQ, 1WAY, 2, 2;
			endofverify;
		endofsts;
		sts 2WAY;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, X-ACQ_TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-ACQ_TRKRX.CTRL_1/2WAY_MODE, EQ, 2WAY, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;
 //----------------------------------------------------------------------
 // データベース名    ：内之浦局 X-CALOUT制御
 // ファイル名        ：x-calout.db
 // 作成日            ：2017/01/05 as-01
 // 履歴              ：Ver1.0.0 2017/03/03 as-03
 //----------------------------------------------------------------------
/* X-CALOUT (CONT) */

ctl X-CALOUT.CONTROL_MODE, 0xFFFF0002, ;
	param 1, s, , S, ;
		sts REMOTE;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			verifytbl 1;
				verify 1, X-CALOUT.CONTROL_MODE, EQ, REMOTE, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-CALOUT.SESSION_TIMER, 0xFFFF0010, ; /* 内部制御用。画面表示無し */
    param 1, u, 10, A, 10;
        val 0, 4294967295;
        	set  ch00, w0, b0, w0, b0, 1;
        endofval;
    endofparam;
end;

ctl X-CALOUT.RF_OUT, 0x00100500, ;
	param 1, s, , S, ;
		sts ON;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-CALOUT.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-CALOUT.RF_OUT_MAIN, EQ, ON, 2, 2;
			endofverify;
		endofsts;
		sts OFF;
		    set  ch00, w0, b0, w3, b7, 0x00000002;
			prechktbl 1;
				prechk 1, X-CALOUT.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-CALOUT.RF_OUT_MAIN, EQ, OFF, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-CALOUT.STEP_ATT, 0x00100120, ;
	param 1, u, 3, A, 3;
		val 0, 100;
		    set  ch00, w0, b0, w0, b0, 1;
			prechktbl 1;
				prechk 1, X-CALOUT.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-CALOUT.STEP_ATT, EQ, *, 2, 2;
			endofverify;
		endofval;
	endofparam;
end;

 //----------------------------------------------------------------------
 // データベース名    ：内之浦局 X-CALSW制御
 // ファイル名        ：x-calsw.db
 // 作成日            ：2017/01/05 as-01
 // 履歴              ：Ver1.0.0 2017/03/01 as-01
 //----------------------------------------------------------------------
/* X-CALSW (CONT) */

ctl X-CALSW.CONTROL_MODE, 0xFFFF0002, ;
	param 1, s, , S, ;
		sts REMOTE;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			verifytbl 1;
				verify 1, X-CALSW.CONTROL_MODE, EQ, REMOTE, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-CALSW.SESSION_TIMER, 0xFFFF0010, ; /* 内部制御用。画面表示無し */
    param 1, u, 10, A, 10;
        val 0, 4294967295;
        	set  ch00, w0, b0, w0, b0, 1;
        endofval;
    endofparam;
end;

ctl X-CALSW.ROUTE_SELECT, 0x00100600, ;
	param 1, s, , S, ;
		sts S/X;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-CALSW.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-CALSW.ROUTE_SELECT, EQ, S/X, 2, 2;
			endofverify;
		endofsts;
		sts X/X;
		    set  ch00, w0, b0, w3, b7, 0x00000002;
			prechktbl 1;
				prechk 1, X-CALSW.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-CALSW.ROUTE_SELECT, EQ, X/X, 2, 2;
			endofverify;
		endofsts;
		sts X-HR;
		    set  ch00, w0, b0, w3, b7, 0x00000003;
			prechktbl 1;
				prechk 1, X-CALSW.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-CALSW.ROUTE_SELECT, EQ, X-HR, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

 //----------------------------------------------------------------------
 // データベース名    ：内之浦局 X-DC2制御
 // ファイル名        ：x-dc2.db
 // 作成日            ：2017/02/13 as-01
 // 履歴              ：Ver1.0.0 2017/03/09 as-02
 //----------------------------------------------------------------------
/* X-DC2 (CONT)  */

ctl X-DC2.CONTROL_MODE,0xFFFF0002, ;
	param 1, s, , S, ;
		sts REMOTE;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			verifytbl 1;
				verify 1, X-DC2.CONTROL_MODE, EQ, REMOTE, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-DC2.SESSION_TIMER, 0xFFFF0010, ; /* 内部制御用。画面表示無し */
    param 1, u, 10, A, 10;
        val 0, 4294967295;
        	set  ch00, w0, b0, w0, b0, 1;
        endofval;
    endofparam;
end;

ctl X-DC2.COH/INCOH_MODE, 0x00100410, ;
	param 1, s, , S, ;
		sts COH(880/221);
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-DC2.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-DC2.COH/INCOH_MODE, EQ, COH(880/221), 2, 2;
			endofverify;
		endofsts;
		sts COH(900/221);
		    set  ch00, w0, b0, w3, b7, 0x00000002;
			prechktbl 1;
				prechk 1, X-DC2.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-DC2.COH/INCOH_MODE, EQ, COH(900/221), 2, 2;
			endofverify;
		endofsts;
		sts COH(880/749);
		    set  ch00, w0, b0, w3, b7, 0x00000003;
			prechktbl 1;
				prechk 1, X-DC2.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-DC2.COH/INCOH_MODE, EQ, COH(880/749), 2, 2;
			endofverify;
		endofsts;
		sts INCOH;
		    set  ch00, w0, b0, w3, b7, 0x00000004;
			prechktbl 1;
				prechk 1, X-DC2.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-DC2.COH/INCOH_MODE, EQ, INCOH, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-DC2.FREQUENCY, 0x00100100, ;/* 2^31以上の値を制御するためにパラメータ入力形式を f にした */
	param 1, f,10.1, L, 10;
		val 2025000000.0, 8500000000.0;
		    set  ch00, w0, b0, w0, b0, 1;
			prechktbl 1;
				prechk 1, X-DC2.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-DC2.FREQUENCY, EQ, *, 2, 2;
			endofverify;
		endofval;
	endofparam;
end;

ctl X-DC2.STEP_ATT, 0x00100120, ;
	param 1, u, 2, A, 2;
		val 0, 35;
		    set  ch00, w0, b0, w0, b0, 1;
			prechktbl 1;
				prechk 1, X-DC2.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-DC2.STEP_ATT, EQ, *, 1, 5;
			endofverify;
		endofval;
	endofparam;
end;

 //----------------------------------------------------------------------
 // データベース名    ：内之浦局 X-HR_UC制御
 // ファイル名        ：x-hr_uc.db
 // 作成日            ：2017/01/05 as-02
 // 履歴              ：Ver1.0.0 2017/03/03 as-03
 //----------------------------------------------------------------------
/* X-HR_UC (CONT)  */

ctl X-HR_UC.CONTROL_MODE,0xFFFF0002, ;
	param 1, s, , S, ;
		sts REMOTE;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			verifytbl 1;
				verify 1, X-HR_UC.CONTROL_MODE, EQ, REMOTE, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-HR_UC.SESSION_TIMER, 0xFFFF0010, ; /* 内部制御用。画面表示無し */
    param 1, f,10.1, A, 10;
        val 0, 4294967295;
        	set  ch00, w0, b0, w0, b0, 1;
        endofval;
    endofparam;
end;
 //----------------------------------------------------------------------
 // データベース名    ：内之浦局 X-RF_IF制御
 // ファイル名        ：x-rf_if.db
 // 作成日            ：2017/01/05 as-02
 // 履歴              ：Ver1.0.0 2017/03/01 as-01
 //----------------------------------------------------------------------
/* X-RF_IF (CONT)  */

ctl X-RF_IF.CONTROL_MODE, 0xFFFF0002, ;
	param 1, s, , S, ;
		sts REMOTE;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			verifytbl 1;
				verify 1, X-RF_IF.CONTROL_MODE, EQ, REMOTE, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-RF_IF.SESSION_TIMER, 0xFFFF0010, ; /* 内部制御用。画面表示無し */
    param 1, u, 10, A, 10;
        val 0, 4294967295;
        	set  ch00, w0, b0, w0, b0, 1;
        endofval;
    endofparam;
end;

ctl X-RF_IF.TX1_OUTPUT, 0x00100500, ;
	param 1, s, , S, ;
		sts ON;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-RF_IF.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-RF_IF.TX1_OUTPUT, EQ, ON, 2, 2;
			endofverify;
		endofsts;
		sts OFF;
		    set  ch00, w0, b0, w3, b7, 0x00000002;
			prechktbl 1;
				prechk 1, X-RF_IF.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-RF_IF.TX1_OUTPUT, EQ, OFF, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-RF_IF.TX2_OUTPUT, 0x00100501, ;
	param 1, s, , S, ;
		sts ON;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-RF_IF.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-RF_IF.TX2_OUTPUT, EQ, ON, 2, 2;
			endofverify;
		endofsts;
		sts OFF;
		    set  ch00, w0, b0, w3, b7, 0x00000002;
			prechktbl 1;
				prechk 1, X-RF_IF.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-RF_IF.TX2_OUTPUT, EQ, OFF, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-RF_IF.ROUTE_SELECT, 0x00100600, ;
	param 1, s, , S, ;
		sts NORMAL;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-RF_IF.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-RF_IF.ROUTE_SELECT, EQ, NORMAL, 2, 2;
			endofverify;
		endofsts;
		sts CROSS;
		    set  ch00, w0, b0, w3, b7, 0x00000002;
			prechktbl 1;
				prechk 1, X-RF_IF.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-RF_IF.ROUTE_SELECT, EQ, CROSS, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-RF_IF.CAL_SELECT, 0x00100601, ;
	param 1, s, , S, ;
		sts RNG;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-RF_IF.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-RF_IF.CAL_SELECT, EQ, RNG, 2, 2;
			endofverify;
		endofsts;
		sts TLM;
		    set  ch00, w0, b0, w3, b7, 0x00000002;
			prechktbl 1;
				prechk 1, X-RF_IF.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-RF_IF.CAL_SELECT, EQ, TLM, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-RF_IF.CAL_INPUT_SELECT, 0x00100602, ;
	param 1, s, , S, ;
		sts INPUT-1;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-RF_IF.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-RF_IF.CAL_INPUT, EQ, INPUT-1, 2, 2;
			endofverify;
		endofsts;
		sts INPUT-2;
		    set  ch00, w0, b0, w3, b7, 0x00000002;
			prechktbl 1;
				prechk 1, X-RF_IF.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-RF_IF.CAL_INPUT, EQ, INPUT-2, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;
 //----------------------------------------------------------------------
 // データベース名    ：内之浦局 X-TRK_IF制御
 // ファイル名        ：x-trk_if.db
 // 作成日            ：2017/01/05 as-02
 // 履歴              ：Ver1.0.0 2017/03/01 as-01
 //----------------------------------------------------------------------
/* X-ANGLE_DET_IF (CONT)  */

ctl X-TRK_IF.CONTROL_MODE, 0xFFFF0002, ;
	param 1, s, , S, ;
		sts REMOTE;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			verifytbl 1;
				verify 1, X-TRK_IF.CONTROL_MODE, EQ, REMOTE, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-TRK_IF.SESSION_TIMER, 0xFFFF0010, ; /* 内部制御用。画面表示無し */
    param 1, u, 10, A, 10;
        val 0, 4294967295;
        	set  ch00, w0, b0, w0, b0, 1;
        endofval;
    endofparam;
end;
 //----------------------------------------------------------------------
 // データベース名    ：内之浦局 X-TRKRX制御
 // ファイル名        ：x-trkrx.db
 // 作成日            ：2017/02/13 as-01
 // 履歴              ：Ver1.0.0 2017/08/23 as-04
 //----------------------------------------------------------------------
/* X-TRKRX (CONT) */

ctl X-TRKRX.DIVERSITY_MODE, 0x01, ;
	param 1, s, , S, ;
		sts COMBINE;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.DIVERSITY_MODE_ANS, EQ, COMBINE, 2, 2;
			endofverify;
		endofsts;
		sts Ach;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.DIVERSITY_MODE_ANS, EQ, Ach, 2, 2;
			endofverify;
		endofsts;
		sts Bch;
		    set  ch00, w0, b0, w3, b7, 0x00000002;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.DIVERSITY_MODE_ANS, EQ, Bch, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-TRKRX.MOD_FORMAT, 0x02, ;
	param 1, s, , S, ;
		sts PCM-PM;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.MOD_FORMAT_ANS, EQ, PCM-PM, 2, 2;
			endofverify;
		endofsts;
		sts PCM-PSK-PM;
		    set  ch00, w0, b0, w3, b7, 0x00000003;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.MOD_FORMAT_ANS, EQ, PCM-PSK-PM, 2, 2;
			endofverify;
		endofsts;
		sts PCM-BPSK;
		    set  ch00, w0, b0, w3, b7, 0x00000008;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.MOD_FORMAT_ANS, EQ, PCM-BPSK, 2, 2;
			endofverify;
		endofsts;
		sts PCM-QPSK;
		    set  ch00, w0, b0, w3, b7, 0x00000009;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.MOD_FORMAT_ANS, EQ, PCM-QPSK, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-TRKRX.DATA_FORMAT, 0x03, ;
	param 1, s, , S, ;
		sts BIPH-S;
		    set  ch00, w0, b0, w3, b7, 0x00000006;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.DATA_FORMAT_ANS, EQ, BIPH-S, 2, 2;
			endofverify;
		endofsts;
		sts BIPH-M;
		    set  ch00, w0, b0, w3, b7, 0x00000005;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.DATA_FORMAT_ANS, EQ, BIPH-M, 2, 2;
			endofverify;
		endofsts;
		sts BIPH-L;
		    set  ch00, w0, b0, w3, b7, 0x00000004;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.DATA_FORMAT_ANS, EQ, BIPH-L, 2, 2;
			endofverify;
		endofsts;
		sts NRZ-S;
		    set  ch00, w0, b0, w3, b7, 0x00000002;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.DATA_FORMAT_ANS, EQ, NRZ-S, 2, 2;
			endofverify;
		endofsts;
		sts NRZ-M;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.DATA_FORMAT_ANS, EQ, NRZ-M, 2, 2;
			endofverify;
		endofsts;
		sts NRZ-L;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.DATA_FORMAT_ANS, EQ, NRZ-L, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-TRKRX.VITERBI_DECODE, 0x04, ;
	param 1, s, , S, ;
		sts OFF;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.VITERBI_DECODE_ANS, EQ, OFF, 2, 2;
			endofverify;
		endofsts;
		sts ON(JPL);
		    set  ch00, w0, b0, w3, b7, 0x00000002;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.VITERBI_DECODE_ANS, EQ, ON(JPL), 2, 2;
			endofverify;
		endofsts;
		sts ON(CCSDS);
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.VITERBI_DECODE_ANS, EQ, ON(CCSDS), 2, 2;
			endofverify;
		endofsts;
		sts ON(ESA);
		    set  ch00, w0, b0, w3, b7, 0x00000003;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.VITERBI_DECODE_ANS, EQ, ON(ESA), 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-TRKRX.DIFF_DECODE, 0x05, ;
	param 1, s, , S, ;
		sts ON;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.DIFF_DECODE_ANS, EQ, ON, 2, 2;
			endofverify;
		endofsts;
		sts OFF;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.DIFF_DECODE_ANS, EQ, OFF, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-TRKRX.FILTER_STYLE, 0x06, ;
	param 1, s, , S, ;
		sts LINEAR_PHASE;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.FILTER_STYLE_ANS, EQ, LINEAR_PHASE, 2, 2;
			endofverify;
		endofsts;
		sts ROOT_NYQ;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.FILTER_STYLE_ANS, EQ, ROOT_NYQ, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-TRKRX.IF_CENTER_FREQ, 0x07, ;
    param 1, u, 8, A, 8;
        val 66000000, 74000000;
            set  ch00, w0, b0, w0, b0, 1;
        	prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
            verifytbl 1;
                verify 1, X-TRKRX.IF_CENTER_FREQ_ANS, EQ, *, 2, 2;
            endofverify;
        endofval;
    endofparam;
end;

ctl X-TRKRX.BIT_RATE, 0x08, ;
	param 1, f, 7.3, U, 10.3;
		val 100.000, 2400000.000;
		    set  ch00, w0, b0, w0, b0, 1000;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.BIT_RATE_ANS, EQ, *, 2, 2;
			endofverify;
		endofval;
	endofparam;
end;

ctl X-TRKRX.SUB_CARR, 0x09, ;
	param 1, f, 7.3, U, 10.3;
		val 1000.000, 2400000.000;
		    set  ch00, w0, b0, w0, b0, 1000;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.SUB_CARR_ANS, EQ, *, 2, 2;
			endofverify;
		endofval;
	endofparam;
end;

ctl X-TRKRX.TLM_MOD_INDEX, 0x0A, ;
	param 1, f, 1.2, A, 2;
		val 0.00, 1.50;
		    set  ch00, w0, b0, w0, b0, 20;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.TLM_MOD_INDEX_ANS, EQ, *, 2, 2;
			endofverify;
		endofval;
	endofparam;
end;

ctl X-TRKRX.DEM_IQ_POLARITY, 0x0B, ;
	param 1, s, , S, ;
		sts THROUGH;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.DEM_IQ_POLARITY_ANS, EQ, THROUGH, 2, 2;
			endofverify;
		endofsts;
		sts I/Q_SWAP;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.DEM_IQ_POLARITY_ANS, EQ, I/Q_SWAP, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-TRKRX.CARR_LOOP_BAND, 0x0E, ;
	param 1, s, , S, ;
		sts 1kHz;
		    set  ch00, w0, b0, w3, b7, 0x0000000a;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.CARR_LOOP_BAND, EQ, 1kHz, 2, 60;
			endofverify;
		endofsts;
		sts 300Hz;
		    set  ch00, w0, b0, w3, b7, 0x00000009;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.CARR_LOOP_BAND, EQ, 300Hz, 2, 60;
			endofverify;
		endofsts;
		sts 100Hz;
		    set  ch00, w0, b0, w3, b7, 0x00000008;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.CARR_LOOP_BAND, EQ, 100Hz, 2, 60;
			endofverify;
		endofsts;
		sts 30Hz;
		    set  ch00, w0, b0, w3, b7, 0x00000007;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.CARR_LOOP_BAND, EQ, 30Hz, 2, 60;
			endofverify;
		endofsts;
		sts WIDE;
		    set  ch00, w0, b0, w3, b7, 0x0000000a;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.CARR_LOOP_BAND, EQ, *, 2, 60;
			endofverify;
		endofsts;
		sts MEDIUM;
		    set  ch00, w0, b0, w3, b7, 0x00000009;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.CARR_LOOP_BAND, EQ, *, 2, 60;
			endofverify;
		endofsts;
		sts NARROW;
		    set  ch00, w0, b0, w3, b7, 0x00000008;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.CARR_LOOP_BAND, EQ, *, 2, 60;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-TRKRX.AGC_LOOP_BAND, 0x0F, ;
	param 1, s, , S, ;
		sts 100Hz;
		    set  ch00, w0, b0, w3, b7, 0x0000000a;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.AGC_LOOP_BAND_ANS, EQ, 100Hz, 2, 60;
			endofverify;
		endofsts;
		sts 30Hz;
		    set  ch00, w0, b0, w3, b7, 0x00000009;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.AGC_LOOP_BAND_ANS, EQ, 30Hz, 2, 60;
			endofverify;
		endofsts;
		sts 10Hz;
		    set  ch00, w0, b0, w3, b7, 0x00000008;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.AGC_LOOP_BAND_ANS, EQ, 10Hz, 2, 60;
			endofverify;
		endofsts;
		sts 3Hz;
		    set  ch00, w0, b0, w3, b7, 0x00000007;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.AGC_LOOP_BAND_ANS, EQ, 3Hz, 2, 60;
			endofverify;
		endofsts;
		sts WIDE;
		    set  ch00, w0, b0, w3, b7, 0x0000000a;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.AGC_LOOP_BAND_ANS, EQ, *, 2, 60;
			endofverify;
		endofsts;
		sts MEDIUM;
		    set  ch00, w0, b0, w3, b7, 0x00000009;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.AGC_LOOP_BAND_ANS, EQ, *, 2, 60;
			endofverify;
		endofsts;
		sts NARROW;
		    set  ch00, w0, b0, w3, b7, 0x00000008;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.AGC_LOOP_BAND_ANS, EQ, *, 2, 60;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-TRKRX.BIT_LOOP_BAND, 0x10, ;
	param 1, s, , S, ;
		sts NARROW;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.BIT_LOOP_BAND_ANS, EQ, NARROW, 2, 60;
			endofverify;
		endofsts;
		sts MEDIUM;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.BIT_LOOP_BAND_ANS, EQ, MEDIUM, 2, 60;
			endofverify;
		endofsts;
		sts WIDE;
		    set  ch00, w0, b0, w3, b7, 0x00000002;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.BIT_LOOP_BAND_ANS, EQ, WIDE, 2, 60;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-TRKRX.CARR_REJECT, 0x11, ;
	param 1, s, ,S, ;
		sts REJECT;
        	set  ch00, w0, b0, w3, b7, 0x00000001;
		endofsts;
    endofparam;
end;

ctl X-TRKRX.SYMBOL_REJECT, 0x12, ;
	param 1, s, ,S, ;
		sts REJECT;
        	set  ch00, w0, b0, w3, b7, 0x00000001;
		endofsts;
    endofparam;
end;

ctl X-TRKRX.ADJUST_MODE_SELECT, 0x18, ;
	param 1, s, , S, ;
		sts INTERNAL;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.ADJUST_MODE_SELECT, EQ, INTERNAL, 2, 2;
			endofverify;
		endofsts;
		sts EXTERNAL;
		set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.ADJUST_MODE_SELECT, EQ, EXTERNAL, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-TRKRX.ANGLE_PARAM_SAVE, 0x19, ;
	param 1, s, ,S, ;
		sts SAVE;
			set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1*2;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
				prechk 2, X-TRKRX.ADJUST_MODE_SELECT, EQ, EXTERNAL, 2;
			endofprechk;
		endofsts;
	endofparam;
end;

ctl X-TRKRX.OPERATION, 0x1A, ;
	param 1, s, , S, ;
		sts NORMAL1;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.OPERATION_ANS, EQ, NORMAL1, 2, 2;
			endofverify;
		endofsts;
		sts NORMAL2;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.OPERATION_ANS, EQ, NORMAL2, 2, 2;
			endofverify;
		endofsts;
		sts NORMAL3;
		    set  ch00, w0, b0, w3, b7, 0x00000002;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.OPERATION_ANS, EQ, NORMAL3, 2, 2;
			endofverify;
		endofsts;
		sts NORMAL4;
		    set  ch00, w0, b0, w3, b7, 0x00000003;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.OPERATION_ANS, EQ, NORMAL4, 2, 2;
			endofverify;
		endofsts;
		sts CAL_AZ_PEAK1;
		    set  ch00, w0, b0, w3, b7, 0x00000004;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.OPERATION_ANS, EQ, CAL_AZ_PEAK1, 2, 2;
			endofverify;
		endofsts;
		sts CAL_AZ_PEAK2;
		    set  ch00, w0, b0, w3, b7, 0x00000005;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.OPERATION_ANS, EQ, CAL_AZ_PEAK2, 2, 2;
			endofverify;
		endofsts;
		sts CAL_AZ_PEAK3;
		    set  ch00, w0, b0, w3, b7, 0x00000006;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.OPERATION_ANS, EQ, CAL_AZ_PEAK3, 2, 2;
			endofverify;
		endofsts;
		sts CAL_AZ_PEAK4;
		    set  ch00, w0, b0, w3, b7, 0x00000007;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.OPERATION_ANS, EQ, CAL_AZ_PEAK4, 2, 2;
			endofverify;
		endofsts;
		sts CAL_EL_PEAK1;
		    set  ch00, w0, b0, w3, b7, 0x00000008;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.OPERATION_ANS, EQ, CAL_EL_PEAK1, 2, 2;
			endofverify;
		endofsts;
		sts CAL_EL_PEAK2;
		    set  ch00, w0, b0, w3, b7, 0x00000009;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.OPERATION_ANS, EQ, CAL_EL_PEAK2, 2, 2;
			endofverify;
		endofsts;
		sts CAL_EL_PEAK3;
		    set  ch00, w0, b0, w3, b7, 0x0000000A;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.OPERATION_ANS, EQ, CAL_EL_PEAK3, 2, 2;
			endofverify;
		endofsts;
		sts CAL_EL_PEAK4;
		    set  ch00, w0, b0, w3, b7, 0x0000000B;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.OPERATION_ANS, EQ, CAL_EL_PEAK4, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-TRKRX.ANGLE_FILE_Fd, 0x1B, ;
	param 1, f, 5.1, U, 6.1;
		val 2200.0, 12300.0;
		    set  ch00, w0, b0, w0, b0, 10;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.ANGLE_FILE_Fd_ANS, EQ, *, 2, 2;
			endofverify;
		endofval;
	endofparam;
end;

ctl X-TRKRX.AZ_SENSITIVITY, 0x1C, ;
	param 1, f, 2.1, A, 3;
		val -5.0, +5.0;
		    set  ch00, w0, b0, w0, b0, 10;
			prechktbl 1*2;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
				prechk 2, X-TRKRX.ADJUST_MODE_SELECT, EQ, EXTERNAL, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.AZ_SENSITIVITY_ANS, EQ, *, 2, 2;
			endofverify;
		endofval;
	endofparam;
end;

ctl X-TRKRX.EL_SENSITIVITY, 0x1D, ;
	param 1, f, 2.1, A, 3;
		val -5.0, +5.0;
		    set  ch00, w0, b0, w0, b0, 10;
			prechktbl 1*2;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
				prechk 2, X-TRKRX.ADJUST_MODE_SELECT, EQ, EXTERNAL, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.EL_SENSITIVITY_ANS, EQ, *, 2, 2;
			endofverify;
		endofval;
	endofparam;
end;

ctl X-TRKRX.Ach_ANGLE_OFFSET, 0x1E, ;
	param 1, f, 3.1, A, 4;
		val 0.0, 359.9;
		    set  ch00, w0, b0, w0, b0, 10;
			prechktbl 1*2;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
				prechk 2, X-TRKRX.ADJUST_MODE_SELECT, EQ, EXTERNAL, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.Ach_ANGLE_OFFSET_ANS, EQ, *, 2, 2;
			endofverify;
		endofval;
	endofparam;
end;

ctl X-TRKRX.Bch_ANGLE_OFFSET, 0x1F, ;
	param 1, f, 3.1, A, 4;
		val 0.0, 359.9;
		    set  ch00, w0, b0, w0, b0, 10;
			prechktbl 1*2;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
				prechk 2, X-TRKRX.ADJUST_MODE_SELECT, EQ, EXTERNAL, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.Bch_ANGLE_OFFSET_ANS, EQ, *, 2, 2;
			endofverify;
		endofval;
	endofparam;
end;

ctl X-TRKRX.ANGLE_POLARITY, 0x20, ;
	param 1, s, , S, ;
		sts NORMAL;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.ANGLE_POLARITY_ANS, EQ, NORMAL, 2, 2;
			endofverify;
		endofsts;
		sts INVERT;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.ANGLE_POLARITY_ANS, EQ, INVERT, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-TRKRX.ANTENNA_QD, 0x21, ;
	param 1, s, , S, ;
		sts ENABLE;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.ANT_QD_STATUS, EQ, ENABLE, 2, 2;
			endofverify;
		endofsts;
		sts DISABLE;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.ANT_QD_STATUS, EQ, DISABLE, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-TRKRX.SPEC_IF_SEL, 0x25, ;
	param 1, s, , S, ;
		sts Ach;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.SPECTRUM_SEL_ANS, EQ, SUM_Ach, 2, 2;
			endofverify;
		endofsts;
		sts Bch;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.SPECTRUM_SEL_ANS, EQ, SUM_Bch, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-TRKRX.SPEC_MEASURE_BW, 0x26, ;
	param 1, s, , S, ;
		sts 31.25kHz;
		    set  ch00, w0, b0, w3, b7, 0x0000000b;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.SPEC_MEASURE_BW_ANS, EQ, 31.25kHz, 2, 2;
			endofverify;
		endofsts;
		sts 62.5kHz;
		    set  ch00, w0, b0, w3, b7, 0x0000000a;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.SPEC_MEASURE_BW_ANS, EQ, 62.5kHz, 2, 2;
			endofverify;
		endofsts;
		sts 125kHz;
		    set  ch00, w0, b0, w3, b7, 0x00000009;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.SPEC_MEASURE_BW_ANS, EQ, 125kHz, 2, 2;
			endofverify;
		endofsts;
		sts 250kHz;
		    set  ch00, w0, b0, w3, b7, 0x00000008;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.SPEC_MEASURE_BW_ANS, EQ, 250kHz, 2, 2;
			endofverify;
		endofsts;
		sts 500kHz;
		    set  ch00, w0, b0, w3, b7, 0x00000007;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.SPEC_MEASURE_BW_ANS, EQ, 500kHz, 2, 2;
			endofverify;
		endofsts;
		sts 1MHz;
		    set  ch00, w0, b0, w3, b7, 0x00000006;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.SPEC_MEASURE_BW_ANS, EQ, 1MHz, 2, 2;
			endofverify;
		endofsts;
		sts 2MHz;
		    set  ch00, w0, b0, w3, b7, 0x00000005;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.SPEC_MEASURE_BW_ANS, EQ, 2MHz, 2, 2;
			endofverify;
		endofsts;
		sts 4MHz;
		    set  ch00, w0, b0, w3, b7, 0x00000004;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.SPEC_MEASURE_BW_ANS, EQ, 4MHz, 2, 2;
			endofverify;
		endofsts;
		sts 8MHz;
		    set  ch00, w0, b0, w3, b7, 0x00000003;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.SPEC_MEASURE_BW_ANS, EQ, 8MHz, 2, 2;
			endofverify;
		endofsts;
		sts 16MHz;
		    set  ch00, w0, b0, w3, b7, 0x00000002;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.SPEC_MEASURE_BW_ANS, EQ, 16MHz, 2, 2;
			endofverify;
		endofsts;
		sts 32MHz;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.SPEC_MEASURE_BW_ANS, EQ, 32MHz, 2, 2;
			endofverify;
		endofsts;
		sts 64MHz;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.SPEC_MEASURE_BW_ANS, EQ, 64MHz, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-TRKRX.SPEC_FREQ_OFFSET, 0x27, ;
	param 1, d, 5, B, 5;
		val -4000, +4000;
		    set  ch00, w0, b0, w0, b0, 1;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.SPEC_FRE_OFFSET_ANS, EQ, *, 2, 2;
			endofverify;
		endofval;
	endofparam;
end;

ctl X-TRKRX.PREDICTION_MODE, 0x2B, ;
	param 1, s, , S, ;
		sts Packet;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.PREDICTION_MODE_ANS, EQ, Packet, 2, 2;
			endofverify;
		endofsts;
//		sts File;
//		    set  ch00, w0, b0, w3, b7, 0x00000001;
//			prechktbl 1;
//				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
//			endofprechk;
//			verifytbl 1;
//				verify 1, X-TRKRX.PREDICTION_MODE_ANS, EQ, File, 2, 2;
//			endofverify;
//		endofsts;
	endofparam;
end;

ctl X-TRKRX.DEM_DOPPLER, 0x2C, ;
	param 1, s, , S, ;
		sts OFF;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.DEM_DOPPLER_ANS, EQ, OFF, 2, 2;
			endofverify;
		endofsts;
		sts ON;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.DEM_DOPPLER_ANS, EQ, ON, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-TRKRX.LEAP_YEAR/SECOND, 0x2D, ;
	param 1, s, , S, ;
		sts Y:OFF/S:OFF;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.LEAP_YEAR/SECOND_ANS, EQ, Y:OFF/S:OFF, 2, 2;
			endofverify;
		endofsts;
		sts Y:ON/S:OFF;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.LEAP_YEAR/SECOND_ANS, EQ, Y:ON/S:OFF, 2, 2;
			endofverify;
		endofsts;
		sts Y:OFF/S:ON;
		    set  ch00, w0, b0, w3, b7, 0x00000002;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.LEAP_YEAR/SECOND_ANS, EQ, Y:OFF/S:ON, 2, 2;
			endofverify;
		endofsts;
		sts Y:ON/S:ON;
		    set  ch00, w0, b0, w3, b7, 0x00000003;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.LEAP_YEAR/SECOND_ANS, EQ, Y:ON/S:ON, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-TRKRX.PWB_RESET, 0x2F, ;
	param 1, s, ,S, ;
		sts RESET;
        	set  ch00, w0, b0, w3, b7, 0x00000001;
		endofsts;
    endofparam;
end;

/***** 2017/03/09 as-04 ファイル方式アンテナ予報値系は、臼田内之浦では使用しないため削除 *******/

//ctl X-TRKRX.TRP_RATIO, 0x32, ;
//	param 1, s, , S, ;
//		sts INCOH;
//		    set  ch00, w0, b0, w3, b7, 0x00000000;
//			prechktbl 1;
//				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
//			endofprechk;
//			verifytbl 1;
//				verify 1, X-TRKRX.TRP_RATIO_ANS, EQ, INCOH, 2, 2;
//			endofverify;
//		endofsts;
//		sts COH-240/221;
//			set  ch00, w0, b0, w3, b7, 0x00000001;
//			prechktbl 1;
//				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
//			endofprechk;
//			verifytbl 1;
//				verify 1, X-TRKRX.TRP_RATIO_ANS, EQ, COH-240/221, 2, 2;
//			endofverify;
//		endofsts;
//		sts COH-900/221;
//		    set  ch00, w0, b0, w3, b7, 0x00000002;
//			prechktbl 1;
//				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
//			endofprechk;
//			verifytbl 1;
//				verify 1, X-TRKRX.TRP_RATIO_ANS, EQ, COH-900/221, 2, 2;
//			endofverify;
//		endofsts;
//		sts COH-880/749;
//		    set  ch00, w0, b0, w3, b7, 0x00000003;
//			prechktbl 1;
//				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
//			endofprechk;
//			verifytbl 1;
//				verify 1, X-TRKRX.TRP_RATIO_ANS, EQ, COH-880/749, 2, 2;
//			endofverify;
//		endofsts;
//	endofparam;
//end;

//ctl X-TRKRX.1/2WAY_MODE, 0x33, ;
//	param 1, s, , S, ;
//		sts 1WAY;
//		    set  ch00, w0, b0, w3, b7, 0x00000001;
//			prechktbl 1;
//				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
//			endofprechk;
//			verifytbl 1;
//				verify 1, X-TRKRX.1/2WAY_MODE_ANS, EQ, 1WAY, 2, 2;
//			endofverify;
//		endofsts;
//		sts 2WAY;
//		    set  ch00, w0, b0, w3, b7, 0x00000000;
//			prechktbl 1;
//				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
//			endofprechk;
//			verifytbl 1;
//				verify 1, X-TRKRX.1/2WAY_MODE_ANS, EQ, 2WAY, 2, 2;
//			endofverify;
//		endofsts;
//	endofparam;
//end;

//ctl X-TRKRX.UP_REF_FREQ, 0x34, ;
//	param 1, f, 11.1, U, 11;
//		val 1000000000.0, 14000000000.0;
//		    set  ch00, w0, b0, w0, b0, 10;
//			prechktbl 1;
//				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
//			endofprechk;
//			verifytbl 1;
//				verify 1, X-TRKRX.UP_REF_FREQ_ANS, EQ, *, 2, 2;
//			endofverify;
//		endofval;
//	endofparam;
//end;

//ctl X-TRKRX.DOWN_REF_FREQ, 0x35, ;
//	param 1, f, 11.1, U, 11;
//		val 1000000000.0, 14000000000.0;
//		    set  ch00, w0, b0, w0, b0, 10;
//			prechktbl 1;
//				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
//			endofprechk;
//			verifytbl 1;
//				verify 1, X-TRKRX.DOWN_REF_FREQ_ANS, EQ, *, 2, 2;
//			endofverify;
//		endofval;
//	endofparam;
//end;

//ctl X-TRKRX.PREDSET, 0x36, ;
//	param 1, P, 59, Z, ;
//		sts *;
//		endofsts;
//	endofparam;
//end;

/************************************** ここまで ***********************************************/

ctl X-TRKRX.POWER_OFF, 0x39, ;
	param 1, s, ,S, ;
		sts POWER_OFF;
        	set  ch00, w0, b0, w3, b7, 0x00000001;
		endofsts;
    endofparam;
end;

ctl X-TRKRX.CHG_CONT_MODE, 0x3A, ;
	param 1, s, ,S, ;
		sts REMOTE;
	        set  ch00, w0, b0, w3, b7, 0x00000001;
		endofsts;
    endofparam;
end;

// 2017/05/19 as-02 ドップラ補償計算用に追加(追尾状況画面に表示)
ctl X-TRKRX.CTRL_1/2WAY_MODE, 0x33, ;
	param 1, s, , S, ;
		sts 1WAY;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.CTRL_1/2WAY_MODE, EQ, 1WAY, 2, 2;
			endofverify;
		endofsts;
		sts 2WAY;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, X-TRKRX.CONTROL_MODE_ANS, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-TRKRX.CTRL_1/2WAY_MODE, EQ, 2WAY, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

 //----------------------------------------------------------------------
 // データベース名    ：内之浦局 X-UC制御
 // ファイル名        ：x-uc.db
 // 作成日            ：2017/02/13 as-01
 // 履歴              ：Ver1.0.0 2017/03/07 as-04
 //----------------------------------------------------------------------
/* X-UC (CONT)  */

ctl X-UC.CONTROL_MODE, 0xFFFF0002, ;
	param 1, s, , S, ;
		sts REMOTE;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			verifytbl 1;
				verify 1, X-UC.CONTROL_MODE, EQ, REMOTE, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-UC.SESSION_TIMER, 0xFFFF0010, ; /* 内部制御用。画面表示無し */
    param 1, u, 10, A, 10;
        val 0, 4294967295;
        	set  ch00, w0, b0, w0, b0, 1;
        endofval;
    endofparam;
end;

ctl X-UC.FREQUENCY, 0x00100100, ;
	param 1, f, 10.1, U, 16;
		val 7145000000.0, 7235000000.0;
		    set  ch00, w0, b0, w0, b0, 1;
			prechktbl 1;
				prechk 1, X-UC.CONTROL_MODE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-UC.FREQUENCY, EQ, *, 2, 2;
			endofverify;
		endofval;
	endofparam;
end;

 //----------------------------------------------------------------------
 // データベース名    ：内之浦局 X-UP_CNT制御
 // ファイル名        ：x-ul_cnt.db
 // 作成日            ：2017/01/05 as-01
 // 履歴              ：Ver1.0.0 2017/08/03 as-04
 //----------------------------------------------------------------------
/* X-UP_CNT (CONT)  */

ctl X-UL_CNT.RF_TRIP_AREA_NO_USE, 0x01, ;
	param 1, s, , S, ;
		sts NO_USE;
		    set  ch00, w0, b0, w3, b7, 0x00000002;
			prechktbl 1;
				prechk 1, X-UL_CNT.UP_LINK_CONT_REMOTE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-UL_CNT.RF_TRIP_NO_USE, EQ, ON, 2, 2;
			endofverify;
		endofsts;
		sts NO_USE_RESET;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-UL_CNT.UP_LINK_CONT_REMOTE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-UL_CNT.RF_TRIP_NO_USE, EQ, OFF, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-UL_CNT.TX/RX_SELECT_CONT, 0x00200101, ;
	param 1, s, , S, ;
		sts NORMAL;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1*2*3*4;
				prechk 1, X-UL_CNT.UP_LINK_CONT_REMOTE, EQ, REMOTE, 2;
				prechk 2, X-UL_CNT.RF_DET, EQ, OFF, 3;
				prechk 3, X-UL_CNT.SSPA_RF_ON_DET_ANS, EQ, OFF, 3;
				prechk 4, X-UL_CNT.ANT/DUMMY_SEL_ANS, EQ, DUMMY, 3;
			endofprechk;
			verifytbl 1;
				verify 1, X-RF_IF.ROUTE_SELECT, EQ, NORMAL, 2, 2;
			endofverify;
		endofsts;
		sts CROSS;
		    set  ch00, w0, b0, w3, b7, 0x00000002;
			prechktbl 1*2*3*4;
				prechk 1, X-UL_CNT.UP_LINK_CONT_REMOTE, EQ, REMOTE, 2;
				prechk 2, X-UL_CNT.RF_DET, EQ, OFF, 3;
				prechk 3, X-UL_CNT.SSPA_RF_ON_DET_ANS, EQ, OFF, 3;
				prechk 4, X-UL_CNT.ANT/DUMMY_SEL_ANS, EQ, DUMMY, 3;
			endofprechk;
			verifytbl 1;
				verify 1, X-RF_IF.ROUTE_SELECT, EQ, CROSS, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-UL_CNT.X-TX_PORT_SEL_CONT, 0x04, ;
	param 1, s, , S, ;
		sts PORT1;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1*2;
				prechk 1, X-UL_CNT.UP_LINK_CONT_REMOTE, EQ, REMOTE, 2;
				prechk 2, X-UL_CNT.X-TX_PORT_SEL_ENABLE, EQ, ON, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-UL_CNT.X-TX_PORT1/2_SEL_ANS, EQ, PORT1, 2, 2;
			endofverify;
		endofsts;
		sts PORT2;
		    set  ch00, w0, b0, w3, b7, 0x00000002;
			prechktbl 1*2;
				prechk 1, X-UL_CNT.UP_LINK_CONT_REMOTE, EQ, REMOTE, 2;
				prechk 2, X-UL_CNT.X-TX_PORT_SEL_ENABLE, EQ, ON, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-UL_CNT.X-TX_PORT1/2_SEL_ANS, EQ, PORT2, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-UL_CNT.HE_STBY/OPR_CONT, 0x05, ;
	param 1, s, , S, ;
		sts OPR;
		    set  ch00, w0, b0, w3, b7, 0x00000002;
			prechktbl 1;
				prechk 1, X-UL_CNT.UP_LINK_CONT_REMOTE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-UL_CNT.HE_STBY_ANS, EQ, OPERATION, 2, 2;
			endofverify;
		endofsts;
		sts STBY;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-UL_CNT.UP_LINK_CONT_REMOTE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-UL_CNT.HE_STBY_ANS, EQ, STANDBY, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-UL_CNT.FAULT_RESET, 0x06, ;
	param 1, s, ,S, ;
		sts FAULT_RESET;
		    set  ch00, w0, b0, w3, b7, 0x00000001; 
		endofsts;
	endofparam;
end;

ctl X-UL_CNT.ANT/DUMMY_SEL_CONT, 0x00130103, ;
	param 1, s, , S, ;
		sts ANT;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1*2*3*4*5;
				prechk 1, X-UL_CNT.UP_LINK_CONT_REMOTE, EQ, REMOTE, 2;
				prechk 2, X-UL_CNT.ANT_CONT_SEL_ENA, EQ, ON , 3;
				prechk 3, X-UL_CNT.RF_DET, EQ, OFF, 3;
				prechk 4, X-UL_CNT.SSPA_RF_ON_DET_ANS, EQ, OFF, 3;
				prechk 5, X-UL_CNT.TX/RX_SELECT_ANS, EQ, CROSS, 3;
			endofprechk;
			verifytbl 1;
				verify 1, X-UL_CNT.ANT/DUMMY_SEL_ANS, EQ, ANT, 2, 2;
			endofverify;
		endofsts;
		sts DUMMY;
		    set  ch00, w0, b0, w3, b7, 0x00000002;
			prechktbl 1*2*3*4*5;
				prechk 1, X-UL_CNT.UP_LINK_CONT_REMOTE, EQ, REMOTE, 2;
				prechk 2, X-UL_CNT.DUMMY_CONT_SEL_ENA, EQ, ON , 3;
				prechk 3, X-UL_CNT.RF_DET, EQ, OFF, 3;
				prechk 4, X-UL_CNT.SSPA_RF_ON_DET_ANS, EQ, OFF, 3;
				prechk 5, X-UL_CNT.TX/RX_SELECT_ANS, EQ, CROSS, 3;
			endofprechk;
			verifytbl 1;
				verify 1, X-UL_CNT.ANT/DUMMY_SEL_ANS, EQ, DUMMY, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-UL_CNT.RF_PWR_200/2k/20kW, 0x07, ;
	param 1, s, , S, ;
		sts 200w;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1*2;
				prechk 1, X-UL_CNT.UP_LINK_CONT_REMOTE, EQ, REMOTE, 2;
				prechk 2, X-UL_CNT.RF_PWR_200W_SEL_ENA, EQ, ON, 3;
			endofprechk;
			verifytbl 1;
				verify 1, X-UL_CNT.RF_PWR_ANS, EQ, 200w, 2, 2;
			endofverify;
		endofsts;
		sts 2kw;
		    set  ch00, w0, b0, w3, b7, 0x00000002;
			prechktbl 1*2;
				prechk 1, X-UL_CNT.UP_LINK_CONT_REMOTE, EQ, REMOTE, 2;
				prechk 2, X-UL_CNT.RF_PWR_2KW_SEL_ENA, EQ, ON, 3;
			endofprechk;
			verifytbl 1;
				verify 1, X-UL_CNT.RF_PWR_ANS, EQ, 2kw, 2, 2;
			endofverify;
		endofsts;
		sts 20kw;
		    set  ch00, w0, b0, w3, b7, 0x00000003;
			prechktbl 1*2;
				prechk 1, X-UL_CNT.UP_LINK_CONT_REMOTE, EQ, REMOTE, 2;
				prechk 2, X-UL_CNT.RF_PWR_20KW_SEL_ENA, EQ, ON, 3;
			endofprechk;
			verifytbl 1;
				verify 1, X-UL_CNT.RF_PWR_ANS, EQ, 20kw, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-UL_CNT.RF_PWR_0/-33dB_CONT, 0x00130120, ;
	param 1, s, , S, ;
		sts 0dB;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1;
				prechk 1, X-UL_CNT.UP_LINK_CONT_REMOTE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-UL_CNT.PWR_-33dB_ANS, EQ, OFF, 2, 2;
			endofverify;
		endofsts;
		sts -33dB;
		    set  ch00, w0, b0, w3, b7, 0x00000002;
			prechktbl 1*2;
				prechk 1, X-UL_CNT.UP_LINK_CONT_REMOTE, EQ, REMOTE, 2;
				prechk 2, X-UL_CNT.PWR_-33dB_ENA, EQ, ON, 3;
			endofprechk;
			verifytbl 1;
				verify 1, X-UL_CNT.PWR_-33dB_ANS, EQ, ON, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-UL_CNT.HV_ON/OFF_CONT, 0x00130109, ;
	param 1, s, , S, ;
		sts ON;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1*2;
				prechk 1, X-UL_CNT.UP_LINK_CONT_REMOTE, EQ, REMOTE, 2;
				prechk 2, X-UL_CNT.HV_ON_ENABLE, EQ, ON, 3;
			endofprechk;
			verifytbl 1;
				verify 1, X-UL_CNT.HV_FULL_ANS, EQ, ON, 2, 60;
			endofverify;
		endofsts;
		sts OFF;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1*2;
				prechk 1, X-UL_CNT.UP_LINK_CONT_REMOTE, EQ, REMOTE, 2;
				prechk 2, X-UL_CNT.HV_OFF_ENABLE, EQ, ON, 3;
			endofprechk;
			verifytbl 1;
				verify 1, X-UL_CNT.HV_OFF_CONT, EQ, ON, 2, 60;
			endofverify;
		endofsts;
	endofparam;
end;

ctl X-UL_CNT.RF_ON/OFF_CONT, 0x00130102, ;
	param 1, s, , S, ;
		sts ON;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			prechktbl 1*2;
				prechk 1, X-UL_CNT.UP_LINK_CONT_REMOTE, EQ, REMOTE, 2;
				prechk 2, X-UL_CNT.RF_ON_ENABLE, EQ, ON , 3;
			endofprechk;
			verifytbl 1;
				verify 1, X-UL_CNT.RF_ON_CONT, EQ, ON, 2, 2;
			endofverify;
		endofsts;
		sts OFF;
		    set  ch00, w0, b0, w3, b7, 0x00000000;
			prechktbl 1;
				prechk 1, X-UL_CNT.UP_LINK_CONT_REMOTE, EQ, REMOTE, 2;
			endofprechk;
			verifytbl 1;
				verify 1, X-UL_CNT.RF_ON_CONT, EQ, OFF, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

 //----------------------------------------------------------------------
 // データベース名    ：内之浦局 XX-TRANS制御
 // ファイル名        ：xx-trans.db
 // 作成日            ：2017/01/05 as-02
 // 履歴              ：Ver1.0.0 2017/03/01 as-01
 //----------------------------------------------------------------------
/* XX-TRANS (CONT)  */

ctl XX-TRANS.CONTROL_MODE, 0xFFFF0002, ;
	param 1, s, , S, ;
		sts REMOTE;
		    set  ch00, w0, b0, w3, b7, 0x00000001;
			verifytbl 1;
				verify 1, XX-TRANS.CONTROL_MODE, EQ, REMOTE, 2, 2;
			endofverify;
		endofsts;
	endofparam;
end;

ctl XX-TRANS.SESSION_TIMER, 0xFFFF0010, ; /* 内部制御用。画面表示無し */
    param 1, u, 10, A, 10;
        val 0, 4294967295;
        	set  ch00, w0, b0, w0, b0, 1;
        endofval;
    endofparam;
end;

//######################## [ eqctl.db ] END of FILE ############################
